// Code generated by protoc-gen-go.
// source: networking_requests_messages/networking_requests_messages.proto
// DO NOT EDIT!

/*
Package networking_requests_messages is a generated protocol buffer package.

It is generated from these files:
	networking_requests_messages/networking_requests_messages.proto

It has these top-level messages:
	AddFortModifierMessage
	AttackGymMessage
	CatchPokemonMessage
	CheckAwardedBadgesMessage
	CheckCodenameAvailableMessage
	ClaimCodenameMessage
	CollectDailyBonusMessage
	CollectDailyDefenderBonusMessage
	DiskEncounterMessage
	DownloadItemTemplatesMessage
	DownloadRemoteConfigVersionMessage
	DownloadSettingsMessage
	EchoMessage
	EncounterMessage
	EncounterTutorialCompleteMessage
	EquipBadgeMessage
	EvolvePokemonMessage
	FortDeployPokemonMessage
	FortDetailsMessage
	FortRecallPokemonMessage
	FortSearchMessage
	GetAssetDigestMessage
	GetDownloadUrlsMessage
	GetGymDetailsMessage
	GetHatchedEggsMessage
	GetIncensePokemonMessage
	GetInventoryMessage
	GetMapObjectsMessage
	GetPlayerMessage
	GetPlayerProfileMessage
	GetSuggestedCodenamesMessage
	IncenseEncounterMessage
	LevelUpRewardsMessage
	MarkTutorialCompleteMessage
	NicknamePokemonMessage
	PlayerUpdateMessage
	RecycleInventoryItemMessage
	ReleasePokemonMessage
	SetAvatarMessage
	SetContactSettingsMessage
	SetFavoritePokemonMessage
	SetPlayerTeamMessage
	SfidaActionLogMessage
	StartGymBattleMessage
	UpgradePokemonMessage
	UseIncenseMessage
	UseItemCaptureMessage
	UseItemEggIncubatorMessage
	UseItemGymMessage
	UseItemPotionMessage
	UseItemReviveMessage
	UseItemXpBoostMessage
*/
package networking_requests_messages

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import POGOProtos_Inventory_Item "github.com/pkmngo-odi/pogo-protos/inventory_item"
import POGOProtos_Data_Battle "github.com/pkmngo-odi/pogo-protos/data_battle"
import POGOProtos_Enums "github.com/pkmngo-odi/pogo-protos/enums"
import POGOProtos_Data_Player "github.com/pkmngo-odi/pogo-protos/data_player"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// ItemAward from public import inventory_item/inventory_item.proto
type ItemAward POGOProtos_Inventory_Item.ItemAward

func (m *ItemAward) Reset()         { (*POGOProtos_Inventory_Item.ItemAward)(m).Reset() }
func (m *ItemAward) String() string { return (*POGOProtos_Inventory_Item.ItemAward)(m).String() }
func (*ItemAward) ProtoMessage()    {}

// ItemData from public import inventory_item/inventory_item.proto
type ItemData POGOProtos_Inventory_Item.ItemData

func (m *ItemData) Reset()         { (*POGOProtos_Inventory_Item.ItemData)(m).Reset() }
func (m *ItemData) String() string { return (*POGOProtos_Inventory_Item.ItemData)(m).String() }
func (*ItemData) ProtoMessage()    {}

// ItemId from public import inventory_item/inventory_item.proto
type ItemId POGOProtos_Inventory_Item.ItemId

var ItemId_name = POGOProtos_Inventory_Item.ItemId_name
var ItemId_value = POGOProtos_Inventory_Item.ItemId_value

func (x ItemId) String() string { return (POGOProtos_Inventory_Item.ItemId)(x).String() }

const ItemId_ITEM_UNKNOWN = ItemId(POGOProtos_Inventory_Item.ItemId_ITEM_UNKNOWN)
const ItemId_ITEM_POKE_BALL = ItemId(POGOProtos_Inventory_Item.ItemId_ITEM_POKE_BALL)
const ItemId_ITEM_GREAT_BALL = ItemId(POGOProtos_Inventory_Item.ItemId_ITEM_GREAT_BALL)
const ItemId_ITEM_ULTRA_BALL = ItemId(POGOProtos_Inventory_Item.ItemId_ITEM_ULTRA_BALL)
const ItemId_ITEM_MASTER_BALL = ItemId(POGOProtos_Inventory_Item.ItemId_ITEM_MASTER_BALL)
const ItemId_ITEM_POTION = ItemId(POGOProtos_Inventory_Item.ItemId_ITEM_POTION)
const ItemId_ITEM_SUPER_POTION = ItemId(POGOProtos_Inventory_Item.ItemId_ITEM_SUPER_POTION)
const ItemId_ITEM_HYPER_POTION = ItemId(POGOProtos_Inventory_Item.ItemId_ITEM_HYPER_POTION)
const ItemId_ITEM_MAX_POTION = ItemId(POGOProtos_Inventory_Item.ItemId_ITEM_MAX_POTION)
const ItemId_ITEM_REVIVE = ItemId(POGOProtos_Inventory_Item.ItemId_ITEM_REVIVE)
const ItemId_ITEM_MAX_REVIVE = ItemId(POGOProtos_Inventory_Item.ItemId_ITEM_MAX_REVIVE)
const ItemId_ITEM_LUCKY_EGG = ItemId(POGOProtos_Inventory_Item.ItemId_ITEM_LUCKY_EGG)
const ItemId_ITEM_INCENSE_ORDINARY = ItemId(POGOProtos_Inventory_Item.ItemId_ITEM_INCENSE_ORDINARY)
const ItemId_ITEM_INCENSE_SPICY = ItemId(POGOProtos_Inventory_Item.ItemId_ITEM_INCENSE_SPICY)
const ItemId_ITEM_INCENSE_COOL = ItemId(POGOProtos_Inventory_Item.ItemId_ITEM_INCENSE_COOL)
const ItemId_ITEM_INCENSE_FLORAL = ItemId(POGOProtos_Inventory_Item.ItemId_ITEM_INCENSE_FLORAL)
const ItemId_ITEM_TROY_DISK = ItemId(POGOProtos_Inventory_Item.ItemId_ITEM_TROY_DISK)
const ItemId_ITEM_X_ATTACK = ItemId(POGOProtos_Inventory_Item.ItemId_ITEM_X_ATTACK)
const ItemId_ITEM_X_DEFENSE = ItemId(POGOProtos_Inventory_Item.ItemId_ITEM_X_DEFENSE)
const ItemId_ITEM_X_MIRACLE = ItemId(POGOProtos_Inventory_Item.ItemId_ITEM_X_MIRACLE)
const ItemId_ITEM_RAZZ_BERRY = ItemId(POGOProtos_Inventory_Item.ItemId_ITEM_RAZZ_BERRY)
const ItemId_ITEM_BLUK_BERRY = ItemId(POGOProtos_Inventory_Item.ItemId_ITEM_BLUK_BERRY)
const ItemId_ITEM_NANAB_BERRY = ItemId(POGOProtos_Inventory_Item.ItemId_ITEM_NANAB_BERRY)
const ItemId_ITEM_WEPAR_BERRY = ItemId(POGOProtos_Inventory_Item.ItemId_ITEM_WEPAR_BERRY)
const ItemId_ITEM_PINAP_BERRY = ItemId(POGOProtos_Inventory_Item.ItemId_ITEM_PINAP_BERRY)
const ItemId_ITEM_SPECIAL_CAMERA = ItemId(POGOProtos_Inventory_Item.ItemId_ITEM_SPECIAL_CAMERA)
const ItemId_ITEM_INCUBATOR_BASIC_UNLIMITED = ItemId(POGOProtos_Inventory_Item.ItemId_ITEM_INCUBATOR_BASIC_UNLIMITED)
const ItemId_ITEM_INCUBATOR_BASIC = ItemId(POGOProtos_Inventory_Item.ItemId_ITEM_INCUBATOR_BASIC)
const ItemId_ITEM_POKEMON_STORAGE_UPGRADE = ItemId(POGOProtos_Inventory_Item.ItemId_ITEM_POKEMON_STORAGE_UPGRADE)
const ItemId_ITEM_ITEM_STORAGE_UPGRADE = ItemId(POGOProtos_Inventory_Item.ItemId_ITEM_ITEM_STORAGE_UPGRADE)

// ItemType from public import inventory_item/inventory_item.proto
type ItemType POGOProtos_Inventory_Item.ItemType

var ItemType_name = POGOProtos_Inventory_Item.ItemType_name
var ItemType_value = POGOProtos_Inventory_Item.ItemType_value

func (x ItemType) String() string { return (POGOProtos_Inventory_Item.ItemType)(x).String() }

const ItemType_ITEM_TYPE_NONE = ItemType(POGOProtos_Inventory_Item.ItemType_ITEM_TYPE_NONE)
const ItemType_ITEM_TYPE_POKEBALL = ItemType(POGOProtos_Inventory_Item.ItemType_ITEM_TYPE_POKEBALL)
const ItemType_ITEM_TYPE_POTION = ItemType(POGOProtos_Inventory_Item.ItemType_ITEM_TYPE_POTION)
const ItemType_ITEM_TYPE_REVIVE = ItemType(POGOProtos_Inventory_Item.ItemType_ITEM_TYPE_REVIVE)
const ItemType_ITEM_TYPE_MAP = ItemType(POGOProtos_Inventory_Item.ItemType_ITEM_TYPE_MAP)
const ItemType_ITEM_TYPE_BATTLE = ItemType(POGOProtos_Inventory_Item.ItemType_ITEM_TYPE_BATTLE)
const ItemType_ITEM_TYPE_FOOD = ItemType(POGOProtos_Inventory_Item.ItemType_ITEM_TYPE_FOOD)
const ItemType_ITEM_TYPE_CAMERA = ItemType(POGOProtos_Inventory_Item.ItemType_ITEM_TYPE_CAMERA)
const ItemType_ITEM_TYPE_DISK = ItemType(POGOProtos_Inventory_Item.ItemType_ITEM_TYPE_DISK)
const ItemType_ITEM_TYPE_INCUBATOR = ItemType(POGOProtos_Inventory_Item.ItemType_ITEM_TYPE_INCUBATOR)
const ItemType_ITEM_TYPE_INCENSE = ItemType(POGOProtos_Inventory_Item.ItemType_ITEM_TYPE_INCENSE)
const ItemType_ITEM_TYPE_XP_BOOST = ItemType(POGOProtos_Inventory_Item.ItemType_ITEM_TYPE_XP_BOOST)
const ItemType_ITEM_TYPE_INVENTORY_UPGRADE = ItemType(POGOProtos_Inventory_Item.ItemType_ITEM_TYPE_INVENTORY_UPGRADE)

// BattleAction from public import data_battle/data_battle.proto
type BattleAction POGOProtos_Data_Battle.BattleAction

func (m *BattleAction) Reset()         { (*POGOProtos_Data_Battle.BattleAction)(m).Reset() }
func (m *BattleAction) String() string { return (*POGOProtos_Data_Battle.BattleAction)(m).String() }
func (*BattleAction) ProtoMessage()    {}
func (m *BattleAction) GetPlayerJoined() *BattleParticipant {
	return (*BattleParticipant)((*POGOProtos_Data_Battle.BattleAction)(m).GetPlayerJoined())
}
func (m *BattleAction) GetBattleResults() *BattleResults {
	return (*BattleResults)((*POGOProtos_Data_Battle.BattleAction)(m).GetBattleResults())
}
func (m *BattleAction) GetPlayerLeft() *BattleParticipant {
	return (*BattleParticipant)((*POGOProtos_Data_Battle.BattleAction)(m).GetPlayerLeft())
}

// BattleLog from public import data_battle/data_battle.proto
type BattleLog POGOProtos_Data_Battle.BattleLog

func (m *BattleLog) Reset()         { (*POGOProtos_Data_Battle.BattleLog)(m).Reset() }
func (m *BattleLog) String() string { return (*POGOProtos_Data_Battle.BattleLog)(m).String() }
func (*BattleLog) ProtoMessage()    {}
func (m *BattleLog) GetBattleActions() []*BattleAction {
	o := (*POGOProtos_Data_Battle.BattleLog)(m).GetBattleActions()
	if o == nil {
		return nil
	}
	s := make([]*BattleAction, len(o))
	for i, x := range o {
		s[i] = (*BattleAction)(x)
	}
	return s
}

// BattleParticipant from public import data_battle/data_battle.proto
type BattleParticipant POGOProtos_Data_Battle.BattleParticipant

func (m *BattleParticipant) Reset() { (*POGOProtos_Data_Battle.BattleParticipant)(m).Reset() }
func (m *BattleParticipant) String() string {
	return (*POGOProtos_Data_Battle.BattleParticipant)(m).String()
}
func (*BattleParticipant) ProtoMessage() {}
func (m *BattleParticipant) GetActivePokemon() *BattlePokemonInfo {
	return (*BattlePokemonInfo)((*POGOProtos_Data_Battle.BattleParticipant)(m).GetActivePokemon())
}
func (m *BattleParticipant) GetReversePokemon() []*BattlePokemonInfo {
	o := (*POGOProtos_Data_Battle.BattleParticipant)(m).GetReversePokemon()
	if o == nil {
		return nil
	}
	s := make([]*BattlePokemonInfo, len(o))
	for i, x := range o {
		s[i] = (*BattlePokemonInfo)(x)
	}
	return s
}
func (m *BattleParticipant) GetDefeatedPokemon() []*BattlePokemonInfo {
	o := (*POGOProtos_Data_Battle.BattleParticipant)(m).GetDefeatedPokemon()
	if o == nil {
		return nil
	}
	s := make([]*BattlePokemonInfo, len(o))
	for i, x := range o {
		s[i] = (*BattlePokemonInfo)(x)
	}
	return s
}

// BattlePokemonInfo from public import data_battle/data_battle.proto
type BattlePokemonInfo POGOProtos_Data_Battle.BattlePokemonInfo

func (m *BattlePokemonInfo) Reset() { (*POGOProtos_Data_Battle.BattlePokemonInfo)(m).Reset() }
func (m *BattlePokemonInfo) String() string {
	return (*POGOProtos_Data_Battle.BattlePokemonInfo)(m).String()
}
func (*BattlePokemonInfo) ProtoMessage() {}

// BattleResults from public import data_battle/data_battle.proto
type BattleResults POGOProtos_Data_Battle.BattleResults

func (m *BattleResults) Reset()         { (*POGOProtos_Data_Battle.BattleResults)(m).Reset() }
func (m *BattleResults) String() string { return (*POGOProtos_Data_Battle.BattleResults)(m).String() }
func (*BattleResults) ProtoMessage()    {}
func (m *BattleResults) GetAttackers() []*BattleParticipant {
	o := (*POGOProtos_Data_Battle.BattleResults)(m).GetAttackers()
	if o == nil {
		return nil
	}
	s := make([]*BattleParticipant, len(o))
	for i, x := range o {
		s[i] = (*BattleParticipant)(x)
	}
	return s
}

// BattleActionType from public import data_battle/data_battle.proto
type BattleActionType POGOProtos_Data_Battle.BattleActionType

var BattleActionType_name = POGOProtos_Data_Battle.BattleActionType_name
var BattleActionType_value = POGOProtos_Data_Battle.BattleActionType_value

func (x BattleActionType) String() string {
	return (POGOProtos_Data_Battle.BattleActionType)(x).String()
}

const BattleActionType_ACTION_UNSET = BattleActionType(POGOProtos_Data_Battle.BattleActionType_ACTION_UNSET)
const BattleActionType_ACTION_ATTACK = BattleActionType(POGOProtos_Data_Battle.BattleActionType_ACTION_ATTACK)
const BattleActionType_ACTION_DODGE = BattleActionType(POGOProtos_Data_Battle.BattleActionType_ACTION_DODGE)
const BattleActionType_ACTION_SPECIAL_ATTACK = BattleActionType(POGOProtos_Data_Battle.BattleActionType_ACTION_SPECIAL_ATTACK)
const BattleActionType_ACTION_SWAP_POKEMON = BattleActionType(POGOProtos_Data_Battle.BattleActionType_ACTION_SWAP_POKEMON)
const BattleActionType_ACTION_FAINT = BattleActionType(POGOProtos_Data_Battle.BattleActionType_ACTION_FAINT)
const BattleActionType_ACTION_PLAYER_JOIN = BattleActionType(POGOProtos_Data_Battle.BattleActionType_ACTION_PLAYER_JOIN)
const BattleActionType_ACTION_PLAYER_QUIT = BattleActionType(POGOProtos_Data_Battle.BattleActionType_ACTION_PLAYER_QUIT)
const BattleActionType_ACTION_VICTORY = BattleActionType(POGOProtos_Data_Battle.BattleActionType_ACTION_VICTORY)
const BattleActionType_ACTION_DEFEAT = BattleActionType(POGOProtos_Data_Battle.BattleActionType_ACTION_DEFEAT)
const BattleActionType_ACTION_TIMED_OUT = BattleActionType(POGOProtos_Data_Battle.BattleActionType_ACTION_TIMED_OUT)

// BattleState from public import data_battle/data_battle.proto
type BattleState POGOProtos_Data_Battle.BattleState

var BattleState_name = POGOProtos_Data_Battle.BattleState_name
var BattleState_value = POGOProtos_Data_Battle.BattleState_value

func (x BattleState) String() string { return (POGOProtos_Data_Battle.BattleState)(x).String() }

const BattleState_STATE_UNSET = BattleState(POGOProtos_Data_Battle.BattleState_STATE_UNSET)
const BattleState_ACTIVE = BattleState(POGOProtos_Data_Battle.BattleState_ACTIVE)
const BattleState_VICTORY = BattleState(POGOProtos_Data_Battle.BattleState_VICTORY)
const BattleState_DEFEATED = BattleState(POGOProtos_Data_Battle.BattleState_DEFEATED)
const BattleState_TIMED_OUT = BattleState(POGOProtos_Data_Battle.BattleState_TIMED_OUT)

// BattleType from public import data_battle/data_battle.proto
type BattleType POGOProtos_Data_Battle.BattleType

var BattleType_name = POGOProtos_Data_Battle.BattleType_name
var BattleType_value = POGOProtos_Data_Battle.BattleType_value

func (x BattleType) String() string { return (POGOProtos_Data_Battle.BattleType)(x).String() }

const BattleType_BATTLE_TYPE_UNSET = BattleType(POGOProtos_Data_Battle.BattleType_BATTLE_TYPE_UNSET)
const BattleType_NORMAL = BattleType(POGOProtos_Data_Battle.BattleType_NORMAL)
const BattleType_TRAINING = BattleType(POGOProtos_Data_Battle.BattleType_TRAINING)

// ActivityType from public import enums/enums.proto
type ActivityType POGOProtos_Enums.ActivityType

var ActivityType_name = POGOProtos_Enums.ActivityType_name
var ActivityType_value = POGOProtos_Enums.ActivityType_value

func (x ActivityType) String() string { return (POGOProtos_Enums.ActivityType)(x).String() }

const ActivityType_ACTIVITY_UNKNOWN = ActivityType(POGOProtos_Enums.ActivityType_ACTIVITY_UNKNOWN)
const ActivityType_ACTIVITY_CATCH_POKEMON = ActivityType(POGOProtos_Enums.ActivityType_ACTIVITY_CATCH_POKEMON)
const ActivityType_ACTIVITY_CATCH_LEGEND_POKEMON = ActivityType(POGOProtos_Enums.ActivityType_ACTIVITY_CATCH_LEGEND_POKEMON)
const ActivityType_ACTIVITY_FLEE_POKEMON = ActivityType(POGOProtos_Enums.ActivityType_ACTIVITY_FLEE_POKEMON)
const ActivityType_ACTIVITY_DEFEAT_FORT = ActivityType(POGOProtos_Enums.ActivityType_ACTIVITY_DEFEAT_FORT)
const ActivityType_ACTIVITY_EVOLVE_POKEMON = ActivityType(POGOProtos_Enums.ActivityType_ACTIVITY_EVOLVE_POKEMON)
const ActivityType_ACTIVITY_HATCH_EGG = ActivityType(POGOProtos_Enums.ActivityType_ACTIVITY_HATCH_EGG)
const ActivityType_ACTIVITY_WALK_KM = ActivityType(POGOProtos_Enums.ActivityType_ACTIVITY_WALK_KM)
const ActivityType_ACTIVITY_POKEDEX_ENTRY_NEW = ActivityType(POGOProtos_Enums.ActivityType_ACTIVITY_POKEDEX_ENTRY_NEW)
const ActivityType_ACTIVITY_CATCH_FIRST_THROW = ActivityType(POGOProtos_Enums.ActivityType_ACTIVITY_CATCH_FIRST_THROW)
const ActivityType_ACTIVITY_CATCH_NICE_THROW = ActivityType(POGOProtos_Enums.ActivityType_ACTIVITY_CATCH_NICE_THROW)
const ActivityType_ACTIVITY_CATCH_GREAT_THROW = ActivityType(POGOProtos_Enums.ActivityType_ACTIVITY_CATCH_GREAT_THROW)
const ActivityType_ACTIVITY_CATCH_EXCELLENT_THROW = ActivityType(POGOProtos_Enums.ActivityType_ACTIVITY_CATCH_EXCELLENT_THROW)
const ActivityType_ACTIVITY_CATCH_CURVEBALL = ActivityType(POGOProtos_Enums.ActivityType_ACTIVITY_CATCH_CURVEBALL)
const ActivityType_ACTIVITY_CATCH_FIRST_CATCH_OF_DAY = ActivityType(POGOProtos_Enums.ActivityType_ACTIVITY_CATCH_FIRST_CATCH_OF_DAY)
const ActivityType_ACTIVITY_CATCH_MILESTONE = ActivityType(POGOProtos_Enums.ActivityType_ACTIVITY_CATCH_MILESTONE)
const ActivityType_ACTIVITY_TRAIN_POKEMON = ActivityType(POGOProtos_Enums.ActivityType_ACTIVITY_TRAIN_POKEMON)
const ActivityType_ACTIVITY_SEARCH_FORT = ActivityType(POGOProtos_Enums.ActivityType_ACTIVITY_SEARCH_FORT)
const ActivityType_ACTIVITY_RELEASE_POKEMON = ActivityType(POGOProtos_Enums.ActivityType_ACTIVITY_RELEASE_POKEMON)
const ActivityType_ACTIVITY_HATCH_EGG_SMALL_BONUS = ActivityType(POGOProtos_Enums.ActivityType_ACTIVITY_HATCH_EGG_SMALL_BONUS)
const ActivityType_ACTIVITY_HATCH_EGG_MEDIUM_BONUS = ActivityType(POGOProtos_Enums.ActivityType_ACTIVITY_HATCH_EGG_MEDIUM_BONUS)
const ActivityType_ACTIVITY_HATCH_EGG_LARGE_BONUS = ActivityType(POGOProtos_Enums.ActivityType_ACTIVITY_HATCH_EGG_LARGE_BONUS)
const ActivityType_ACTIVITY_DEFEAT_GYM_DEFENDER = ActivityType(POGOProtos_Enums.ActivityType_ACTIVITY_DEFEAT_GYM_DEFENDER)
const ActivityType_ACTIVITY_DEFEAT_GYM_LEADER = ActivityType(POGOProtos_Enums.ActivityType_ACTIVITY_DEFEAT_GYM_LEADER)

// BadgeType from public import enums/enums.proto
type BadgeType POGOProtos_Enums.BadgeType

var BadgeType_name = POGOProtos_Enums.BadgeType_name
var BadgeType_value = POGOProtos_Enums.BadgeType_value

func (x BadgeType) String() string { return (POGOProtos_Enums.BadgeType)(x).String() }

const BadgeType_BADGE_UNSET = BadgeType(POGOProtos_Enums.BadgeType_BADGE_UNSET)
const BadgeType_BADGE_TRAVEL_KM = BadgeType(POGOProtos_Enums.BadgeType_BADGE_TRAVEL_KM)
const BadgeType_BADGE_POKEDEX_ENTRIES = BadgeType(POGOProtos_Enums.BadgeType_BADGE_POKEDEX_ENTRIES)
const BadgeType_BADGE_CAPTURE_TOTAL = BadgeType(POGOProtos_Enums.BadgeType_BADGE_CAPTURE_TOTAL)
const BadgeType_BADGE_DEFEATED_FORT = BadgeType(POGOProtos_Enums.BadgeType_BADGE_DEFEATED_FORT)
const BadgeType_BADGE_EVOLVED_TOTAL = BadgeType(POGOProtos_Enums.BadgeType_BADGE_EVOLVED_TOTAL)
const BadgeType_BADGE_HATCHED_TOTAL = BadgeType(POGOProtos_Enums.BadgeType_BADGE_HATCHED_TOTAL)
const BadgeType_BADGE_ENCOUNTERED_TOTAL = BadgeType(POGOProtos_Enums.BadgeType_BADGE_ENCOUNTERED_TOTAL)
const BadgeType_BADGE_POKESTOPS_VISITED = BadgeType(POGOProtos_Enums.BadgeType_BADGE_POKESTOPS_VISITED)
const BadgeType_BADGE_UNIQUE_POKESTOPS = BadgeType(POGOProtos_Enums.BadgeType_BADGE_UNIQUE_POKESTOPS)
const BadgeType_BADGE_POKEBALL_THROWN = BadgeType(POGOProtos_Enums.BadgeType_BADGE_POKEBALL_THROWN)
const BadgeType_BADGE_BIG_MAGIKARP = BadgeType(POGOProtos_Enums.BadgeType_BADGE_BIG_MAGIKARP)
const BadgeType_BADGE_DEPLOYED_TOTAL = BadgeType(POGOProtos_Enums.BadgeType_BADGE_DEPLOYED_TOTAL)
const BadgeType_BADGE_BATTLE_ATTACK_WON = BadgeType(POGOProtos_Enums.BadgeType_BADGE_BATTLE_ATTACK_WON)
const BadgeType_BADGE_BATTLE_TRAINING_WON = BadgeType(POGOProtos_Enums.BadgeType_BADGE_BATTLE_TRAINING_WON)
const BadgeType_BADGE_BATTLE_DEFEND_WON = BadgeType(POGOProtos_Enums.BadgeType_BADGE_BATTLE_DEFEND_WON)
const BadgeType_BADGE_PRESTIGE_RAISED = BadgeType(POGOProtos_Enums.BadgeType_BADGE_PRESTIGE_RAISED)
const BadgeType_BADGE_PRESTIGE_DROPPED = BadgeType(POGOProtos_Enums.BadgeType_BADGE_PRESTIGE_DROPPED)
const BadgeType_BADGE_TYPE_NORMAL = BadgeType(POGOProtos_Enums.BadgeType_BADGE_TYPE_NORMAL)
const BadgeType_BADGE_TYPE_FIGHTING = BadgeType(POGOProtos_Enums.BadgeType_BADGE_TYPE_FIGHTING)
const BadgeType_BADGE_TYPE_FLYING = BadgeType(POGOProtos_Enums.BadgeType_BADGE_TYPE_FLYING)
const BadgeType_BADGE_TYPE_POISON = BadgeType(POGOProtos_Enums.BadgeType_BADGE_TYPE_POISON)
const BadgeType_BADGE_TYPE_GROUND = BadgeType(POGOProtos_Enums.BadgeType_BADGE_TYPE_GROUND)
const BadgeType_BADGE_TYPE_ROCK = BadgeType(POGOProtos_Enums.BadgeType_BADGE_TYPE_ROCK)
const BadgeType_BADGE_TYPE_BUG = BadgeType(POGOProtos_Enums.BadgeType_BADGE_TYPE_BUG)
const BadgeType_BADGE_TYPE_GHOST = BadgeType(POGOProtos_Enums.BadgeType_BADGE_TYPE_GHOST)
const BadgeType_BADGE_TYPE_STEEL = BadgeType(POGOProtos_Enums.BadgeType_BADGE_TYPE_STEEL)
const BadgeType_BADGE_TYPE_FIRE = BadgeType(POGOProtos_Enums.BadgeType_BADGE_TYPE_FIRE)
const BadgeType_BADGE_TYPE_WATER = BadgeType(POGOProtos_Enums.BadgeType_BADGE_TYPE_WATER)
const BadgeType_BADGE_TYPE_GRASS = BadgeType(POGOProtos_Enums.BadgeType_BADGE_TYPE_GRASS)
const BadgeType_BADGE_TYPE_ELECTRIC = BadgeType(POGOProtos_Enums.BadgeType_BADGE_TYPE_ELECTRIC)
const BadgeType_BADGE_TYPE_PSYCHIC = BadgeType(POGOProtos_Enums.BadgeType_BADGE_TYPE_PSYCHIC)
const BadgeType_BADGE_TYPE_ICE = BadgeType(POGOProtos_Enums.BadgeType_BADGE_TYPE_ICE)
const BadgeType_BADGE_TYPE_DRAGON = BadgeType(POGOProtos_Enums.BadgeType_BADGE_TYPE_DRAGON)
const BadgeType_BADGE_TYPE_DARK = BadgeType(POGOProtos_Enums.BadgeType_BADGE_TYPE_DARK)
const BadgeType_BADGE_TYPE_FAIRY = BadgeType(POGOProtos_Enums.BadgeType_BADGE_TYPE_FAIRY)
const BadgeType_BADGE_SMALL_RATTATA = BadgeType(POGOProtos_Enums.BadgeType_BADGE_SMALL_RATTATA)
const BadgeType_BADGE_PIKACHU = BadgeType(POGOProtos_Enums.BadgeType_BADGE_PIKACHU)

// CameraInterpolation from public import enums/enums.proto
type CameraInterpolation POGOProtos_Enums.CameraInterpolation

var CameraInterpolation_name = POGOProtos_Enums.CameraInterpolation_name
var CameraInterpolation_value = POGOProtos_Enums.CameraInterpolation_value

func (x CameraInterpolation) String() string {
	return (POGOProtos_Enums.CameraInterpolation)(x).String()
}

const CameraInterpolation_CAM_INTERP_CUT = CameraInterpolation(POGOProtos_Enums.CameraInterpolation_CAM_INTERP_CUT)
const CameraInterpolation_CAM_INTERP_LINEAR = CameraInterpolation(POGOProtos_Enums.CameraInterpolation_CAM_INTERP_LINEAR)
const CameraInterpolation_CAM_INTERP_SMOOTH = CameraInterpolation(POGOProtos_Enums.CameraInterpolation_CAM_INTERP_SMOOTH)
const CameraInterpolation_CAM_INTERP_SMOOTH_ROT_LINEAR_MOVE = CameraInterpolation(POGOProtos_Enums.CameraInterpolation_CAM_INTERP_SMOOTH_ROT_LINEAR_MOVE)
const CameraInterpolation_CAM_INTERP_DEPENDS = CameraInterpolation(POGOProtos_Enums.CameraInterpolation_CAM_INTERP_DEPENDS)

// CameraTarget from public import enums/enums.proto
type CameraTarget POGOProtos_Enums.CameraTarget

var CameraTarget_name = POGOProtos_Enums.CameraTarget_name
var CameraTarget_value = POGOProtos_Enums.CameraTarget_value

func (x CameraTarget) String() string { return (POGOProtos_Enums.CameraTarget)(x).String() }

const CameraTarget_CAM_TARGET_ATTACKER = CameraTarget(POGOProtos_Enums.CameraTarget_CAM_TARGET_ATTACKER)
const CameraTarget_CAM_TARGET_ATTACKER_EDGE = CameraTarget(POGOProtos_Enums.CameraTarget_CAM_TARGET_ATTACKER_EDGE)
const CameraTarget_CAM_TARGET_ATTACKER_GROUND = CameraTarget(POGOProtos_Enums.CameraTarget_CAM_TARGET_ATTACKER_GROUND)
const CameraTarget_CAM_TARGET_DEFENDER = CameraTarget(POGOProtos_Enums.CameraTarget_CAM_TARGET_DEFENDER)
const CameraTarget_CAM_TARGET_DEFENDER_EDGE = CameraTarget(POGOProtos_Enums.CameraTarget_CAM_TARGET_DEFENDER_EDGE)
const CameraTarget_CAM_TARGET_DEFENDER_GROUND = CameraTarget(POGOProtos_Enums.CameraTarget_CAM_TARGET_DEFENDER_GROUND)
const CameraTarget_CAM_TARGET_ATTACKER_DEFENDER = CameraTarget(POGOProtos_Enums.CameraTarget_CAM_TARGET_ATTACKER_DEFENDER)
const CameraTarget_CAM_TARGET_ATTACKER_DEFENDER_EDGE = CameraTarget(POGOProtos_Enums.CameraTarget_CAM_TARGET_ATTACKER_DEFENDER_EDGE)
const CameraTarget_CAM_TARGET_DEFENDER_ATTACKER = CameraTarget(POGOProtos_Enums.CameraTarget_CAM_TARGET_DEFENDER_ATTACKER)
const CameraTarget_CAM_TARGET_DEFENDER_ATTACKER_EDGE = CameraTarget(POGOProtos_Enums.CameraTarget_CAM_TARGET_DEFENDER_ATTACKER_EDGE)
const CameraTarget_CAM_TARGET_ATTACKER_DEFENDER_MIRROR = CameraTarget(POGOProtos_Enums.CameraTarget_CAM_TARGET_ATTACKER_DEFENDER_MIRROR)
const CameraTarget_CAM_TARGET_SHOULDER_ATTACKER_DEFENDER = CameraTarget(POGOProtos_Enums.CameraTarget_CAM_TARGET_SHOULDER_ATTACKER_DEFENDER)
const CameraTarget_CAM_TARGET_SHOULDER_ATTACKER_DEFENDER_MIRROR = CameraTarget(POGOProtos_Enums.CameraTarget_CAM_TARGET_SHOULDER_ATTACKER_DEFENDER_MIRROR)
const CameraTarget_CAM_TARGET_ATTACKER_DEFENDER_WORLD = CameraTarget(POGOProtos_Enums.CameraTarget_CAM_TARGET_ATTACKER_DEFENDER_WORLD)

// Gender from public import enums/enums.proto
type Gender POGOProtos_Enums.Gender

var Gender_name = POGOProtos_Enums.Gender_name
var Gender_value = POGOProtos_Enums.Gender_value

func (x Gender) String() string { return (POGOProtos_Enums.Gender)(x).String() }

const Gender_MALE = Gender(POGOProtos_Enums.Gender_MALE)
const Gender_FEMALE = Gender(POGOProtos_Enums.Gender_FEMALE)

// HoloIapItemCategory from public import enums/enums.proto
type HoloIapItemCategory POGOProtos_Enums.HoloIapItemCategory

var HoloIapItemCategory_name = POGOProtos_Enums.HoloIapItemCategory_name
var HoloIapItemCategory_value = POGOProtos_Enums.HoloIapItemCategory_value

func (x HoloIapItemCategory) String() string {
	return (POGOProtos_Enums.HoloIapItemCategory)(x).String()
}

const HoloIapItemCategory_IAP_CATEGORY_NONE = HoloIapItemCategory(POGOProtos_Enums.HoloIapItemCategory_IAP_CATEGORY_NONE)
const HoloIapItemCategory_IAP_CATEGORY_BUNDLE = HoloIapItemCategory(POGOProtos_Enums.HoloIapItemCategory_IAP_CATEGORY_BUNDLE)
const HoloIapItemCategory_IAP_CATEGORY_ITEMS = HoloIapItemCategory(POGOProtos_Enums.HoloIapItemCategory_IAP_CATEGORY_ITEMS)
const HoloIapItemCategory_IAP_CATEGORY_UPGRADES = HoloIapItemCategory(POGOProtos_Enums.HoloIapItemCategory_IAP_CATEGORY_UPGRADES)
const HoloIapItemCategory_IAP_CATEGORY_POKECOINS = HoloIapItemCategory(POGOProtos_Enums.HoloIapItemCategory_IAP_CATEGORY_POKECOINS)

// ItemCategory from public import enums/enums.proto
type ItemCategory POGOProtos_Enums.ItemCategory

var ItemCategory_name = POGOProtos_Enums.ItemCategory_name
var ItemCategory_value = POGOProtos_Enums.ItemCategory_value

func (x ItemCategory) String() string { return (POGOProtos_Enums.ItemCategory)(x).String() }

const ItemCategory_ITEM_CATEGORY_NONE = ItemCategory(POGOProtos_Enums.ItemCategory_ITEM_CATEGORY_NONE)
const ItemCategory_ITEM_CATEGORY_POKEBALL = ItemCategory(POGOProtos_Enums.ItemCategory_ITEM_CATEGORY_POKEBALL)
const ItemCategory_ITEM_CATEGORY_FOOD = ItemCategory(POGOProtos_Enums.ItemCategory_ITEM_CATEGORY_FOOD)
const ItemCategory_ITEM_CATEGORY_MEDICINE = ItemCategory(POGOProtos_Enums.ItemCategory_ITEM_CATEGORY_MEDICINE)
const ItemCategory_ITEM_CATEGORY_BOOST = ItemCategory(POGOProtos_Enums.ItemCategory_ITEM_CATEGORY_BOOST)
const ItemCategory_ITEM_CATEGORY_UTILITES = ItemCategory(POGOProtos_Enums.ItemCategory_ITEM_CATEGORY_UTILITES)
const ItemCategory_ITEM_CATEGORY_CAMERA = ItemCategory(POGOProtos_Enums.ItemCategory_ITEM_CATEGORY_CAMERA)
const ItemCategory_ITEM_CATEGORY_DISK = ItemCategory(POGOProtos_Enums.ItemCategory_ITEM_CATEGORY_DISK)
const ItemCategory_ITEM_CATEGORY_INCUBATOR = ItemCategory(POGOProtos_Enums.ItemCategory_ITEM_CATEGORY_INCUBATOR)
const ItemCategory_ITEM_CATEGORY_INCENSE = ItemCategory(POGOProtos_Enums.ItemCategory_ITEM_CATEGORY_INCENSE)
const ItemCategory_ITEM_CATEGORY_XP_BOOST = ItemCategory(POGOProtos_Enums.ItemCategory_ITEM_CATEGORY_XP_BOOST)
const ItemCategory_ITEM_CATEGORY_INVENTORY_UPGRADE = ItemCategory(POGOProtos_Enums.ItemCategory_ITEM_CATEGORY_INVENTORY_UPGRADE)

// ItemEffect from public import enums/enums.proto
type ItemEffect POGOProtos_Enums.ItemEffect

var ItemEffect_name = POGOProtos_Enums.ItemEffect_name
var ItemEffect_value = POGOProtos_Enums.ItemEffect_value

func (x ItemEffect) String() string { return (POGOProtos_Enums.ItemEffect)(x).String() }

const ItemEffect_ITEM_EFFECT_NONE = ItemEffect(POGOProtos_Enums.ItemEffect_ITEM_EFFECT_NONE)
const ItemEffect_ITEM_EFFECT_CAP_NO_FLEE = ItemEffect(POGOProtos_Enums.ItemEffect_ITEM_EFFECT_CAP_NO_FLEE)
const ItemEffect_ITEM_EFFECT_CAP_NO_MOVEMENT = ItemEffect(POGOProtos_Enums.ItemEffect_ITEM_EFFECT_CAP_NO_MOVEMENT)
const ItemEffect_ITEM_EFFECT_CAP_NO_THREAT = ItemEffect(POGOProtos_Enums.ItemEffect_ITEM_EFFECT_CAP_NO_THREAT)
const ItemEffect_ITEM_EFFECT_CAP_TARGET_MAX = ItemEffect(POGOProtos_Enums.ItemEffect_ITEM_EFFECT_CAP_TARGET_MAX)
const ItemEffect_ITEM_EFFECT_CAP_TARGET_SLOW = ItemEffect(POGOProtos_Enums.ItemEffect_ITEM_EFFECT_CAP_TARGET_SLOW)
const ItemEffect_ITEM_EFFECT_CAP_CHANCE_NIGHT = ItemEffect(POGOProtos_Enums.ItemEffect_ITEM_EFFECT_CAP_CHANCE_NIGHT)
const ItemEffect_ITEM_EFFECT_CAP_CHANCE_TRAINER = ItemEffect(POGOProtos_Enums.ItemEffect_ITEM_EFFECT_CAP_CHANCE_TRAINER)
const ItemEffect_ITEM_EFFECT_CAP_CHANCE_FIRST_THROW = ItemEffect(POGOProtos_Enums.ItemEffect_ITEM_EFFECT_CAP_CHANCE_FIRST_THROW)
const ItemEffect_ITEM_EFFECT_CAP_CHANCE_LEGEND = ItemEffect(POGOProtos_Enums.ItemEffect_ITEM_EFFECT_CAP_CHANCE_LEGEND)
const ItemEffect_ITEM_EFFECT_CAP_CHANCE_HEAVY = ItemEffect(POGOProtos_Enums.ItemEffect_ITEM_EFFECT_CAP_CHANCE_HEAVY)
const ItemEffect_ITEM_EFFECT_CAP_CHANCE_REPEAT = ItemEffect(POGOProtos_Enums.ItemEffect_ITEM_EFFECT_CAP_CHANCE_REPEAT)
const ItemEffect_ITEM_EFFECT_CAP_CHANCE_MULTI_THROW = ItemEffect(POGOProtos_Enums.ItemEffect_ITEM_EFFECT_CAP_CHANCE_MULTI_THROW)
const ItemEffect_ITEM_EFFECT_CAP_CHANCE_ALWAYS = ItemEffect(POGOProtos_Enums.ItemEffect_ITEM_EFFECT_CAP_CHANCE_ALWAYS)
const ItemEffect_ITEM_EFFECT_CAP_CHANCE_SINGLE_THROW = ItemEffect(POGOProtos_Enums.ItemEffect_ITEM_EFFECT_CAP_CHANCE_SINGLE_THROW)

// Platform from public import enums/enums.proto
type Platform POGOProtos_Enums.Platform

var Platform_name = POGOProtos_Enums.Platform_name
var Platform_value = POGOProtos_Enums.Platform_value

func (x Platform) String() string { return (POGOProtos_Enums.Platform)(x).String() }

const Platform_UNSET = Platform(POGOProtos_Enums.Platform_UNSET)
const Platform_IOS = Platform(POGOProtos_Enums.Platform_IOS)
const Platform_ANDROID = Platform(POGOProtos_Enums.Platform_ANDROID)
const Platform_OSX = Platform(POGOProtos_Enums.Platform_OSX)
const Platform_WINDOWS = Platform(POGOProtos_Enums.Platform_WINDOWS)

// PokemonFamilyId from public import enums/enums.proto
type PokemonFamilyId POGOProtos_Enums.PokemonFamilyId

var PokemonFamilyId_name = POGOProtos_Enums.PokemonFamilyId_name
var PokemonFamilyId_value = POGOProtos_Enums.PokemonFamilyId_value

func (x PokemonFamilyId) String() string { return (POGOProtos_Enums.PokemonFamilyId)(x).String() }

const PokemonFamilyId_FAMILY_UNSET = PokemonFamilyId(POGOProtos_Enums.PokemonFamilyId_FAMILY_UNSET)
const PokemonFamilyId_FAMILY_BULBASAUR = PokemonFamilyId(POGOProtos_Enums.PokemonFamilyId_FAMILY_BULBASAUR)
const PokemonFamilyId_FAMILY_CHARMANDER = PokemonFamilyId(POGOProtos_Enums.PokemonFamilyId_FAMILY_CHARMANDER)
const PokemonFamilyId_FAMILY_SQUIRTLE = PokemonFamilyId(POGOProtos_Enums.PokemonFamilyId_FAMILY_SQUIRTLE)
const PokemonFamilyId_FAMILY_CATERPIE = PokemonFamilyId(POGOProtos_Enums.PokemonFamilyId_FAMILY_CATERPIE)
const PokemonFamilyId_FAMILY_WEEDLE = PokemonFamilyId(POGOProtos_Enums.PokemonFamilyId_FAMILY_WEEDLE)
const PokemonFamilyId_FAMILY_PIDGEY = PokemonFamilyId(POGOProtos_Enums.PokemonFamilyId_FAMILY_PIDGEY)
const PokemonFamilyId_FAMILY_RATTATA = PokemonFamilyId(POGOProtos_Enums.PokemonFamilyId_FAMILY_RATTATA)
const PokemonFamilyId_FAMILY_SPEAROW = PokemonFamilyId(POGOProtos_Enums.PokemonFamilyId_FAMILY_SPEAROW)
const PokemonFamilyId_FAMILY_EKANS = PokemonFamilyId(POGOProtos_Enums.PokemonFamilyId_FAMILY_EKANS)
const PokemonFamilyId_FAMILY_PIKACHU = PokemonFamilyId(POGOProtos_Enums.PokemonFamilyId_FAMILY_PIKACHU)
const PokemonFamilyId_FAMILY_SANDSHREW = PokemonFamilyId(POGOProtos_Enums.PokemonFamilyId_FAMILY_SANDSHREW)
const PokemonFamilyId_FAMILY_NIDORAN_FEMALE = PokemonFamilyId(POGOProtos_Enums.PokemonFamilyId_FAMILY_NIDORAN_FEMALE)
const PokemonFamilyId_FAMILY_NIDORAN_MALE = PokemonFamilyId(POGOProtos_Enums.PokemonFamilyId_FAMILY_NIDORAN_MALE)
const PokemonFamilyId_FAMILY_CLEFAIRY = PokemonFamilyId(POGOProtos_Enums.PokemonFamilyId_FAMILY_CLEFAIRY)
const PokemonFamilyId_FAMILY_VULPIX = PokemonFamilyId(POGOProtos_Enums.PokemonFamilyId_FAMILY_VULPIX)
const PokemonFamilyId_FAMILY_JIGGLYPUFF = PokemonFamilyId(POGOProtos_Enums.PokemonFamilyId_FAMILY_JIGGLYPUFF)
const PokemonFamilyId_FAMILY_ZUBAT = PokemonFamilyId(POGOProtos_Enums.PokemonFamilyId_FAMILY_ZUBAT)
const PokemonFamilyId_FAMILY_ODDISH = PokemonFamilyId(POGOProtos_Enums.PokemonFamilyId_FAMILY_ODDISH)
const PokemonFamilyId_FAMILY_PARAS = PokemonFamilyId(POGOProtos_Enums.PokemonFamilyId_FAMILY_PARAS)
const PokemonFamilyId_FAMILY_VENONAT = PokemonFamilyId(POGOProtos_Enums.PokemonFamilyId_FAMILY_VENONAT)
const PokemonFamilyId_FAMILY_DIGLETT = PokemonFamilyId(POGOProtos_Enums.PokemonFamilyId_FAMILY_DIGLETT)
const PokemonFamilyId_FAMILY_MEOWTH = PokemonFamilyId(POGOProtos_Enums.PokemonFamilyId_FAMILY_MEOWTH)
const PokemonFamilyId_FAMILY_PSYDUCK = PokemonFamilyId(POGOProtos_Enums.PokemonFamilyId_FAMILY_PSYDUCK)
const PokemonFamilyId_FAMILY_MANKEY = PokemonFamilyId(POGOProtos_Enums.PokemonFamilyId_FAMILY_MANKEY)
const PokemonFamilyId_FAMILY_GROWLITHE = PokemonFamilyId(POGOProtos_Enums.PokemonFamilyId_FAMILY_GROWLITHE)
const PokemonFamilyId_FAMILY_POLIWAG = PokemonFamilyId(POGOProtos_Enums.PokemonFamilyId_FAMILY_POLIWAG)
const PokemonFamilyId_FAMILY_ABRA = PokemonFamilyId(POGOProtos_Enums.PokemonFamilyId_FAMILY_ABRA)
const PokemonFamilyId_FAMILY_MACHOP = PokemonFamilyId(POGOProtos_Enums.PokemonFamilyId_FAMILY_MACHOP)
const PokemonFamilyId_FAMILY_BELLSPROUT = PokemonFamilyId(POGOProtos_Enums.PokemonFamilyId_FAMILY_BELLSPROUT)
const PokemonFamilyId_FAMILY_TENTACOOL = PokemonFamilyId(POGOProtos_Enums.PokemonFamilyId_FAMILY_TENTACOOL)
const PokemonFamilyId_FAMILY_GEODUDE = PokemonFamilyId(POGOProtos_Enums.PokemonFamilyId_FAMILY_GEODUDE)
const PokemonFamilyId_FAMILY_PONYTA = PokemonFamilyId(POGOProtos_Enums.PokemonFamilyId_FAMILY_PONYTA)
const PokemonFamilyId_FAMILY_SLOWPOKE = PokemonFamilyId(POGOProtos_Enums.PokemonFamilyId_FAMILY_SLOWPOKE)
const PokemonFamilyId_FAMILY_MAGNEMITE = PokemonFamilyId(POGOProtos_Enums.PokemonFamilyId_FAMILY_MAGNEMITE)
const PokemonFamilyId_FAMILY_FARFETCHD = PokemonFamilyId(POGOProtos_Enums.PokemonFamilyId_FAMILY_FARFETCHD)
const PokemonFamilyId_FAMILY_DODUO = PokemonFamilyId(POGOProtos_Enums.PokemonFamilyId_FAMILY_DODUO)
const PokemonFamilyId_FAMILY_SEEL = PokemonFamilyId(POGOProtos_Enums.PokemonFamilyId_FAMILY_SEEL)
const PokemonFamilyId_FAMILY_GRIMER = PokemonFamilyId(POGOProtos_Enums.PokemonFamilyId_FAMILY_GRIMER)
const PokemonFamilyId_FAMILY_SHELLDER = PokemonFamilyId(POGOProtos_Enums.PokemonFamilyId_FAMILY_SHELLDER)
const PokemonFamilyId_FAMILY_GASTLY = PokemonFamilyId(POGOProtos_Enums.PokemonFamilyId_FAMILY_GASTLY)
const PokemonFamilyId_FAMILY_ONIX = PokemonFamilyId(POGOProtos_Enums.PokemonFamilyId_FAMILY_ONIX)
const PokemonFamilyId_FAMILY_DROWZEE = PokemonFamilyId(POGOProtos_Enums.PokemonFamilyId_FAMILY_DROWZEE)
const PokemonFamilyId_FAMILY_HYPNO = PokemonFamilyId(POGOProtos_Enums.PokemonFamilyId_FAMILY_HYPNO)
const PokemonFamilyId_FAMILY_KRABBY = PokemonFamilyId(POGOProtos_Enums.PokemonFamilyId_FAMILY_KRABBY)
const PokemonFamilyId_FAMILY_VOLTORB = PokemonFamilyId(POGOProtos_Enums.PokemonFamilyId_FAMILY_VOLTORB)
const PokemonFamilyId_FAMILY_EXEGGCUTE = PokemonFamilyId(POGOProtos_Enums.PokemonFamilyId_FAMILY_EXEGGCUTE)
const PokemonFamilyId_FAMILY_CUBONE = PokemonFamilyId(POGOProtos_Enums.PokemonFamilyId_FAMILY_CUBONE)
const PokemonFamilyId_FAMILY_HITMONLEE = PokemonFamilyId(POGOProtos_Enums.PokemonFamilyId_FAMILY_HITMONLEE)
const PokemonFamilyId_FAMILY_HITMONCHAN = PokemonFamilyId(POGOProtos_Enums.PokemonFamilyId_FAMILY_HITMONCHAN)
const PokemonFamilyId_FAMILY_LICKITUNG = PokemonFamilyId(POGOProtos_Enums.PokemonFamilyId_FAMILY_LICKITUNG)
const PokemonFamilyId_FAMILY_KOFFING = PokemonFamilyId(POGOProtos_Enums.PokemonFamilyId_FAMILY_KOFFING)
const PokemonFamilyId_FAMILY_RHYHORN = PokemonFamilyId(POGOProtos_Enums.PokemonFamilyId_FAMILY_RHYHORN)
const PokemonFamilyId_FAMILY_CHANSEY = PokemonFamilyId(POGOProtos_Enums.PokemonFamilyId_FAMILY_CHANSEY)
const PokemonFamilyId_FAMILY_TANGELA = PokemonFamilyId(POGOProtos_Enums.PokemonFamilyId_FAMILY_TANGELA)
const PokemonFamilyId_FAMILY_KANGASKHAN = PokemonFamilyId(POGOProtos_Enums.PokemonFamilyId_FAMILY_KANGASKHAN)
const PokemonFamilyId_FAMILY_HORSEA = PokemonFamilyId(POGOProtos_Enums.PokemonFamilyId_FAMILY_HORSEA)
const PokemonFamilyId_FAMILY_GOLDEEN = PokemonFamilyId(POGOProtos_Enums.PokemonFamilyId_FAMILY_GOLDEEN)
const PokemonFamilyId_FAMILY_STARYU = PokemonFamilyId(POGOProtos_Enums.PokemonFamilyId_FAMILY_STARYU)
const PokemonFamilyId_FAMILY_MR_MIME = PokemonFamilyId(POGOProtos_Enums.PokemonFamilyId_FAMILY_MR_MIME)
const PokemonFamilyId_FAMILY_SCYTHER = PokemonFamilyId(POGOProtos_Enums.PokemonFamilyId_FAMILY_SCYTHER)
const PokemonFamilyId_FAMILY_JYNX = PokemonFamilyId(POGOProtos_Enums.PokemonFamilyId_FAMILY_JYNX)
const PokemonFamilyId_FAMILY_ELECTABUZZ = PokemonFamilyId(POGOProtos_Enums.PokemonFamilyId_FAMILY_ELECTABUZZ)
const PokemonFamilyId_FAMILY_MAGMAR = PokemonFamilyId(POGOProtos_Enums.PokemonFamilyId_FAMILY_MAGMAR)
const PokemonFamilyId_FAMILY_PINSIR = PokemonFamilyId(POGOProtos_Enums.PokemonFamilyId_FAMILY_PINSIR)
const PokemonFamilyId_FAMILY_TAUROS = PokemonFamilyId(POGOProtos_Enums.PokemonFamilyId_FAMILY_TAUROS)
const PokemonFamilyId_FAMILY_MAGIKARP = PokemonFamilyId(POGOProtos_Enums.PokemonFamilyId_FAMILY_MAGIKARP)
const PokemonFamilyId_FAMILY_LAPRAS = PokemonFamilyId(POGOProtos_Enums.PokemonFamilyId_FAMILY_LAPRAS)
const PokemonFamilyId_FAMILY_DITTO = PokemonFamilyId(POGOProtos_Enums.PokemonFamilyId_FAMILY_DITTO)
const PokemonFamilyId_FAMILY_EEVEE = PokemonFamilyId(POGOProtos_Enums.PokemonFamilyId_FAMILY_EEVEE)
const PokemonFamilyId_FAMILY_PORYGON = PokemonFamilyId(POGOProtos_Enums.PokemonFamilyId_FAMILY_PORYGON)
const PokemonFamilyId_FAMILY_OMANYTE = PokemonFamilyId(POGOProtos_Enums.PokemonFamilyId_FAMILY_OMANYTE)
const PokemonFamilyId_FAMILY_KABUTO = PokemonFamilyId(POGOProtos_Enums.PokemonFamilyId_FAMILY_KABUTO)
const PokemonFamilyId_FAMILY_AERODACTYL = PokemonFamilyId(POGOProtos_Enums.PokemonFamilyId_FAMILY_AERODACTYL)
const PokemonFamilyId_FAMILY_SNORLAX = PokemonFamilyId(POGOProtos_Enums.PokemonFamilyId_FAMILY_SNORLAX)
const PokemonFamilyId_FAMILY_ARTICUNO = PokemonFamilyId(POGOProtos_Enums.PokemonFamilyId_FAMILY_ARTICUNO)
const PokemonFamilyId_FAMILY_ZAPDOS = PokemonFamilyId(POGOProtos_Enums.PokemonFamilyId_FAMILY_ZAPDOS)
const PokemonFamilyId_FAMILY_MOLTRES = PokemonFamilyId(POGOProtos_Enums.PokemonFamilyId_FAMILY_MOLTRES)
const PokemonFamilyId_FAMILY_DRATINI = PokemonFamilyId(POGOProtos_Enums.PokemonFamilyId_FAMILY_DRATINI)
const PokemonFamilyId_FAMILY_MEWTWO = PokemonFamilyId(POGOProtos_Enums.PokemonFamilyId_FAMILY_MEWTWO)
const PokemonFamilyId_FAMILY_MEW = PokemonFamilyId(POGOProtos_Enums.PokemonFamilyId_FAMILY_MEW)

// PokemonId from public import enums/enums.proto
type PokemonId POGOProtos_Enums.PokemonId

var PokemonId_name = POGOProtos_Enums.PokemonId_name
var PokemonId_value = POGOProtos_Enums.PokemonId_value

func (x PokemonId) String() string { return (POGOProtos_Enums.PokemonId)(x).String() }

const PokemonId_MISSINGNO = PokemonId(POGOProtos_Enums.PokemonId_MISSINGNO)
const PokemonId_BULBASAUR = PokemonId(POGOProtos_Enums.PokemonId_BULBASAUR)
const PokemonId_IVYSAUR = PokemonId(POGOProtos_Enums.PokemonId_IVYSAUR)
const PokemonId_VENUSAUR = PokemonId(POGOProtos_Enums.PokemonId_VENUSAUR)
const PokemonId_CHARMANDER = PokemonId(POGOProtos_Enums.PokemonId_CHARMANDER)
const PokemonId_CHARMELEON = PokemonId(POGOProtos_Enums.PokemonId_CHARMELEON)
const PokemonId_CHARIZARD = PokemonId(POGOProtos_Enums.PokemonId_CHARIZARD)
const PokemonId_SQUIRTLE = PokemonId(POGOProtos_Enums.PokemonId_SQUIRTLE)
const PokemonId_WARTORTLE = PokemonId(POGOProtos_Enums.PokemonId_WARTORTLE)
const PokemonId_BLASTOISE = PokemonId(POGOProtos_Enums.PokemonId_BLASTOISE)
const PokemonId_CATERPIE = PokemonId(POGOProtos_Enums.PokemonId_CATERPIE)
const PokemonId_METAPOD = PokemonId(POGOProtos_Enums.PokemonId_METAPOD)
const PokemonId_BUTTERFREE = PokemonId(POGOProtos_Enums.PokemonId_BUTTERFREE)
const PokemonId_WEEDLE = PokemonId(POGOProtos_Enums.PokemonId_WEEDLE)
const PokemonId_KAKUNA = PokemonId(POGOProtos_Enums.PokemonId_KAKUNA)
const PokemonId_BEEDRILL = PokemonId(POGOProtos_Enums.PokemonId_BEEDRILL)
const PokemonId_PIDGEY = PokemonId(POGOProtos_Enums.PokemonId_PIDGEY)
const PokemonId_PIDGEOTTO = PokemonId(POGOProtos_Enums.PokemonId_PIDGEOTTO)
const PokemonId_PIDGEOT = PokemonId(POGOProtos_Enums.PokemonId_PIDGEOT)
const PokemonId_RATTATA = PokemonId(POGOProtos_Enums.PokemonId_RATTATA)
const PokemonId_RATICATE = PokemonId(POGOProtos_Enums.PokemonId_RATICATE)
const PokemonId_SPEAROW = PokemonId(POGOProtos_Enums.PokemonId_SPEAROW)
const PokemonId_FEAROW = PokemonId(POGOProtos_Enums.PokemonId_FEAROW)
const PokemonId_EKANS = PokemonId(POGOProtos_Enums.PokemonId_EKANS)
const PokemonId_ARBOK = PokemonId(POGOProtos_Enums.PokemonId_ARBOK)
const PokemonId_PIKACHU = PokemonId(POGOProtos_Enums.PokemonId_PIKACHU)
const PokemonId_RAICHU = PokemonId(POGOProtos_Enums.PokemonId_RAICHU)
const PokemonId_SANDSHREW = PokemonId(POGOProtos_Enums.PokemonId_SANDSHREW)
const PokemonId_SANDSLASH = PokemonId(POGOProtos_Enums.PokemonId_SANDSLASH)
const PokemonId_NIDORAN_FEMALE = PokemonId(POGOProtos_Enums.PokemonId_NIDORAN_FEMALE)
const PokemonId_NIDORINA = PokemonId(POGOProtos_Enums.PokemonId_NIDORINA)
const PokemonId_NIDOQUEEN = PokemonId(POGOProtos_Enums.PokemonId_NIDOQUEEN)
const PokemonId_NIDORAN_MALE = PokemonId(POGOProtos_Enums.PokemonId_NIDORAN_MALE)
const PokemonId_NIDORINO = PokemonId(POGOProtos_Enums.PokemonId_NIDORINO)
const PokemonId_NIDOKING = PokemonId(POGOProtos_Enums.PokemonId_NIDOKING)
const PokemonId_CLEFAIRY = PokemonId(POGOProtos_Enums.PokemonId_CLEFAIRY)
const PokemonId_CLEFABLE = PokemonId(POGOProtos_Enums.PokemonId_CLEFABLE)
const PokemonId_VULPIX = PokemonId(POGOProtos_Enums.PokemonId_VULPIX)
const PokemonId_NINETALES = PokemonId(POGOProtos_Enums.PokemonId_NINETALES)
const PokemonId_JIGGLYPUFF = PokemonId(POGOProtos_Enums.PokemonId_JIGGLYPUFF)
const PokemonId_WIGGLYTUFF = PokemonId(POGOProtos_Enums.PokemonId_WIGGLYTUFF)
const PokemonId_ZUBAT = PokemonId(POGOProtos_Enums.PokemonId_ZUBAT)
const PokemonId_GOLBAT = PokemonId(POGOProtos_Enums.PokemonId_GOLBAT)
const PokemonId_ODDISH = PokemonId(POGOProtos_Enums.PokemonId_ODDISH)
const PokemonId_GLOOM = PokemonId(POGOProtos_Enums.PokemonId_GLOOM)
const PokemonId_VILEPLUME = PokemonId(POGOProtos_Enums.PokemonId_VILEPLUME)
const PokemonId_PARAS = PokemonId(POGOProtos_Enums.PokemonId_PARAS)
const PokemonId_PARASECT = PokemonId(POGOProtos_Enums.PokemonId_PARASECT)
const PokemonId_VENONAT = PokemonId(POGOProtos_Enums.PokemonId_VENONAT)
const PokemonId_VENOMOTH = PokemonId(POGOProtos_Enums.PokemonId_VENOMOTH)
const PokemonId_DIGLETT = PokemonId(POGOProtos_Enums.PokemonId_DIGLETT)
const PokemonId_DUGTRIO = PokemonId(POGOProtos_Enums.PokemonId_DUGTRIO)
const PokemonId_MEOWTH = PokemonId(POGOProtos_Enums.PokemonId_MEOWTH)
const PokemonId_PERSIAN = PokemonId(POGOProtos_Enums.PokemonId_PERSIAN)
const PokemonId_PSYDUCK = PokemonId(POGOProtos_Enums.PokemonId_PSYDUCK)
const PokemonId_GOLDUCK = PokemonId(POGOProtos_Enums.PokemonId_GOLDUCK)
const PokemonId_MANKEY = PokemonId(POGOProtos_Enums.PokemonId_MANKEY)
const PokemonId_PRIMEAPE = PokemonId(POGOProtos_Enums.PokemonId_PRIMEAPE)
const PokemonId_GROWLITHE = PokemonId(POGOProtos_Enums.PokemonId_GROWLITHE)
const PokemonId_ARCANINE = PokemonId(POGOProtos_Enums.PokemonId_ARCANINE)
const PokemonId_POLIWAG = PokemonId(POGOProtos_Enums.PokemonId_POLIWAG)
const PokemonId_POLIWHIRL = PokemonId(POGOProtos_Enums.PokemonId_POLIWHIRL)
const PokemonId_POLIWRATH = PokemonId(POGOProtos_Enums.PokemonId_POLIWRATH)
const PokemonId_ABRA = PokemonId(POGOProtos_Enums.PokemonId_ABRA)
const PokemonId_KADABRA = PokemonId(POGOProtos_Enums.PokemonId_KADABRA)
const PokemonId_ALAKAZAM = PokemonId(POGOProtos_Enums.PokemonId_ALAKAZAM)
const PokemonId_MACHOP = PokemonId(POGOProtos_Enums.PokemonId_MACHOP)
const PokemonId_MACHOKE = PokemonId(POGOProtos_Enums.PokemonId_MACHOKE)
const PokemonId_MACHAMP = PokemonId(POGOProtos_Enums.PokemonId_MACHAMP)
const PokemonId_BELLSPROUT = PokemonId(POGOProtos_Enums.PokemonId_BELLSPROUT)
const PokemonId_WEEPINBELL = PokemonId(POGOProtos_Enums.PokemonId_WEEPINBELL)
const PokemonId_VICTREEBEL = PokemonId(POGOProtos_Enums.PokemonId_VICTREEBEL)
const PokemonId_TENTACOOL = PokemonId(POGOProtos_Enums.PokemonId_TENTACOOL)
const PokemonId_TENTACRUEL = PokemonId(POGOProtos_Enums.PokemonId_TENTACRUEL)
const PokemonId_GEODUDE = PokemonId(POGOProtos_Enums.PokemonId_GEODUDE)
const PokemonId_GRAVELER = PokemonId(POGOProtos_Enums.PokemonId_GRAVELER)
const PokemonId_GOLEM = PokemonId(POGOProtos_Enums.PokemonId_GOLEM)
const PokemonId_PONYTA = PokemonId(POGOProtos_Enums.PokemonId_PONYTA)
const PokemonId_RAPIDASH = PokemonId(POGOProtos_Enums.PokemonId_RAPIDASH)
const PokemonId_SLOWPOKE = PokemonId(POGOProtos_Enums.PokemonId_SLOWPOKE)
const PokemonId_SLOWBRO = PokemonId(POGOProtos_Enums.PokemonId_SLOWBRO)
const PokemonId_MAGNEMITE = PokemonId(POGOProtos_Enums.PokemonId_MAGNEMITE)
const PokemonId_MAGNETON = PokemonId(POGOProtos_Enums.PokemonId_MAGNETON)
const PokemonId_FARFETCHD = PokemonId(POGOProtos_Enums.PokemonId_FARFETCHD)
const PokemonId_DODUO = PokemonId(POGOProtos_Enums.PokemonId_DODUO)
const PokemonId_DODRIO = PokemonId(POGOProtos_Enums.PokemonId_DODRIO)
const PokemonId_SEEL = PokemonId(POGOProtos_Enums.PokemonId_SEEL)
const PokemonId_DEWGONG = PokemonId(POGOProtos_Enums.PokemonId_DEWGONG)
const PokemonId_GRIMER = PokemonId(POGOProtos_Enums.PokemonId_GRIMER)
const PokemonId_MUK = PokemonId(POGOProtos_Enums.PokemonId_MUK)
const PokemonId_SHELLDER = PokemonId(POGOProtos_Enums.PokemonId_SHELLDER)
const PokemonId_CLOYSTER = PokemonId(POGOProtos_Enums.PokemonId_CLOYSTER)
const PokemonId_GASTLY = PokemonId(POGOProtos_Enums.PokemonId_GASTLY)
const PokemonId_HAUNTER = PokemonId(POGOProtos_Enums.PokemonId_HAUNTER)
const PokemonId_GENGAR = PokemonId(POGOProtos_Enums.PokemonId_GENGAR)
const PokemonId_ONIX = PokemonId(POGOProtos_Enums.PokemonId_ONIX)
const PokemonId_DROWZEE = PokemonId(POGOProtos_Enums.PokemonId_DROWZEE)
const PokemonId_HYPNO = PokemonId(POGOProtos_Enums.PokemonId_HYPNO)
const PokemonId_KRABBY = PokemonId(POGOProtos_Enums.PokemonId_KRABBY)
const PokemonId_KINGLER = PokemonId(POGOProtos_Enums.PokemonId_KINGLER)
const PokemonId_VOLTORB = PokemonId(POGOProtos_Enums.PokemonId_VOLTORB)
const PokemonId_ELECTRODE = PokemonId(POGOProtos_Enums.PokemonId_ELECTRODE)
const PokemonId_EXEGGCUTE = PokemonId(POGOProtos_Enums.PokemonId_EXEGGCUTE)
const PokemonId_EXEGGUTOR = PokemonId(POGOProtos_Enums.PokemonId_EXEGGUTOR)
const PokemonId_CUBONE = PokemonId(POGOProtos_Enums.PokemonId_CUBONE)
const PokemonId_MAROWAK = PokemonId(POGOProtos_Enums.PokemonId_MAROWAK)
const PokemonId_HITMONLEE = PokemonId(POGOProtos_Enums.PokemonId_HITMONLEE)
const PokemonId_HITMONCHAN = PokemonId(POGOProtos_Enums.PokemonId_HITMONCHAN)
const PokemonId_LICKITUNG = PokemonId(POGOProtos_Enums.PokemonId_LICKITUNG)
const PokemonId_KOFFING = PokemonId(POGOProtos_Enums.PokemonId_KOFFING)
const PokemonId_WEEZING = PokemonId(POGOProtos_Enums.PokemonId_WEEZING)
const PokemonId_RHYHORN = PokemonId(POGOProtos_Enums.PokemonId_RHYHORN)
const PokemonId_RHYDON = PokemonId(POGOProtos_Enums.PokemonId_RHYDON)
const PokemonId_CHANSEY = PokemonId(POGOProtos_Enums.PokemonId_CHANSEY)
const PokemonId_TANGELA = PokemonId(POGOProtos_Enums.PokemonId_TANGELA)
const PokemonId_KANGASKHAN = PokemonId(POGOProtos_Enums.PokemonId_KANGASKHAN)
const PokemonId_HORSEA = PokemonId(POGOProtos_Enums.PokemonId_HORSEA)
const PokemonId_SEADRA = PokemonId(POGOProtos_Enums.PokemonId_SEADRA)
const PokemonId_GOLDEEN = PokemonId(POGOProtos_Enums.PokemonId_GOLDEEN)
const PokemonId_SEAKING = PokemonId(POGOProtos_Enums.PokemonId_SEAKING)
const PokemonId_STARYU = PokemonId(POGOProtos_Enums.PokemonId_STARYU)
const PokemonId_STARMIE = PokemonId(POGOProtos_Enums.PokemonId_STARMIE)
const PokemonId_MR_MIME = PokemonId(POGOProtos_Enums.PokemonId_MR_MIME)
const PokemonId_SCYTHER = PokemonId(POGOProtos_Enums.PokemonId_SCYTHER)
const PokemonId_JYNX = PokemonId(POGOProtos_Enums.PokemonId_JYNX)
const PokemonId_ELECTABUZZ = PokemonId(POGOProtos_Enums.PokemonId_ELECTABUZZ)
const PokemonId_MAGMAR = PokemonId(POGOProtos_Enums.PokemonId_MAGMAR)
const PokemonId_PINSIR = PokemonId(POGOProtos_Enums.PokemonId_PINSIR)
const PokemonId_TAUROS = PokemonId(POGOProtos_Enums.PokemonId_TAUROS)
const PokemonId_MAGIKARP = PokemonId(POGOProtos_Enums.PokemonId_MAGIKARP)
const PokemonId_GYARADOS = PokemonId(POGOProtos_Enums.PokemonId_GYARADOS)
const PokemonId_LAPRAS = PokemonId(POGOProtos_Enums.PokemonId_LAPRAS)
const PokemonId_DITTO = PokemonId(POGOProtos_Enums.PokemonId_DITTO)
const PokemonId_EEVEE = PokemonId(POGOProtos_Enums.PokemonId_EEVEE)
const PokemonId_VAPOREON = PokemonId(POGOProtos_Enums.PokemonId_VAPOREON)
const PokemonId_JOLTEON = PokemonId(POGOProtos_Enums.PokemonId_JOLTEON)
const PokemonId_FLAREON = PokemonId(POGOProtos_Enums.PokemonId_FLAREON)
const PokemonId_PORYGON = PokemonId(POGOProtos_Enums.PokemonId_PORYGON)
const PokemonId_OMANYTE = PokemonId(POGOProtos_Enums.PokemonId_OMANYTE)
const PokemonId_OMASTAR = PokemonId(POGOProtos_Enums.PokemonId_OMASTAR)
const PokemonId_KABUTO = PokemonId(POGOProtos_Enums.PokemonId_KABUTO)
const PokemonId_KABUTOPS = PokemonId(POGOProtos_Enums.PokemonId_KABUTOPS)
const PokemonId_AERODACTYL = PokemonId(POGOProtos_Enums.PokemonId_AERODACTYL)
const PokemonId_SNORLAX = PokemonId(POGOProtos_Enums.PokemonId_SNORLAX)
const PokemonId_ARTICUNO = PokemonId(POGOProtos_Enums.PokemonId_ARTICUNO)
const PokemonId_ZAPDOS = PokemonId(POGOProtos_Enums.PokemonId_ZAPDOS)
const PokemonId_MOLTRES = PokemonId(POGOProtos_Enums.PokemonId_MOLTRES)
const PokemonId_DRATINI = PokemonId(POGOProtos_Enums.PokemonId_DRATINI)
const PokemonId_DRAGONAIR = PokemonId(POGOProtos_Enums.PokemonId_DRAGONAIR)
const PokemonId_DRAGONITE = PokemonId(POGOProtos_Enums.PokemonId_DRAGONITE)
const PokemonId_MEWTWO = PokemonId(POGOProtos_Enums.PokemonId_MEWTWO)
const PokemonId_MEW = PokemonId(POGOProtos_Enums.PokemonId_MEW)

// PokemonMove from public import enums/enums.proto
type PokemonMove POGOProtos_Enums.PokemonMove

var PokemonMove_name = POGOProtos_Enums.PokemonMove_name
var PokemonMove_value = POGOProtos_Enums.PokemonMove_value

func (x PokemonMove) String() string { return (POGOProtos_Enums.PokemonMove)(x).String() }

const PokemonMove_MOVE_UNSET = PokemonMove(POGOProtos_Enums.PokemonMove_MOVE_UNSET)
const PokemonMove_THUNDER_SHOCK = PokemonMove(POGOProtos_Enums.PokemonMove_THUNDER_SHOCK)
const PokemonMove_QUICK_ATTACK = PokemonMove(POGOProtos_Enums.PokemonMove_QUICK_ATTACK)
const PokemonMove_SCRATCH = PokemonMove(POGOProtos_Enums.PokemonMove_SCRATCH)
const PokemonMove_EMBER = PokemonMove(POGOProtos_Enums.PokemonMove_EMBER)
const PokemonMove_VINE_WHIP = PokemonMove(POGOProtos_Enums.PokemonMove_VINE_WHIP)
const PokemonMove_TACKLE = PokemonMove(POGOProtos_Enums.PokemonMove_TACKLE)
const PokemonMove_RAZOR_LEAF = PokemonMove(POGOProtos_Enums.PokemonMove_RAZOR_LEAF)
const PokemonMove_TAKE_DOWN = PokemonMove(POGOProtos_Enums.PokemonMove_TAKE_DOWN)
const PokemonMove_WATER_GUN = PokemonMove(POGOProtos_Enums.PokemonMove_WATER_GUN)
const PokemonMove_BITE = PokemonMove(POGOProtos_Enums.PokemonMove_BITE)
const PokemonMove_POUND = PokemonMove(POGOProtos_Enums.PokemonMove_POUND)
const PokemonMove_DOUBLE_SLAP = PokemonMove(POGOProtos_Enums.PokemonMove_DOUBLE_SLAP)
const PokemonMove_WRAP = PokemonMove(POGOProtos_Enums.PokemonMove_WRAP)
const PokemonMove_HYPER_BEAM = PokemonMove(POGOProtos_Enums.PokemonMove_HYPER_BEAM)
const PokemonMove_LICK = PokemonMove(POGOProtos_Enums.PokemonMove_LICK)
const PokemonMove_DARK_PULSE = PokemonMove(POGOProtos_Enums.PokemonMove_DARK_PULSE)
const PokemonMove_SMOG = PokemonMove(POGOProtos_Enums.PokemonMove_SMOG)
const PokemonMove_SLUDGE = PokemonMove(POGOProtos_Enums.PokemonMove_SLUDGE)
const PokemonMove_METAL_CLAW = PokemonMove(POGOProtos_Enums.PokemonMove_METAL_CLAW)
const PokemonMove_VICE_GRIP = PokemonMove(POGOProtos_Enums.PokemonMove_VICE_GRIP)
const PokemonMove_FLAME_WHEEL = PokemonMove(POGOProtos_Enums.PokemonMove_FLAME_WHEEL)
const PokemonMove_MEGAHORN = PokemonMove(POGOProtos_Enums.PokemonMove_MEGAHORN)
const PokemonMove_WING_ATTACK = PokemonMove(POGOProtos_Enums.PokemonMove_WING_ATTACK)
const PokemonMove_FLAMETHROWER = PokemonMove(POGOProtos_Enums.PokemonMove_FLAMETHROWER)
const PokemonMove_SUCKER_PUNCH = PokemonMove(POGOProtos_Enums.PokemonMove_SUCKER_PUNCH)
const PokemonMove_DIG = PokemonMove(POGOProtos_Enums.PokemonMove_DIG)
const PokemonMove_LOW_KICK = PokemonMove(POGOProtos_Enums.PokemonMove_LOW_KICK)
const PokemonMove_CROSS_CHOP = PokemonMove(POGOProtos_Enums.PokemonMove_CROSS_CHOP)
const PokemonMove_PSYCHO_CUT = PokemonMove(POGOProtos_Enums.PokemonMove_PSYCHO_CUT)
const PokemonMove_PSYBEAM = PokemonMove(POGOProtos_Enums.PokemonMove_PSYBEAM)
const PokemonMove_EARTHQUAKE = PokemonMove(POGOProtos_Enums.PokemonMove_EARTHQUAKE)
const PokemonMove_STONE_EDGE = PokemonMove(POGOProtos_Enums.PokemonMove_STONE_EDGE)
const PokemonMove_ICE_PUNCH = PokemonMove(POGOProtos_Enums.PokemonMove_ICE_PUNCH)
const PokemonMove_HEART_STAMP = PokemonMove(POGOProtos_Enums.PokemonMove_HEART_STAMP)
const PokemonMove_DISCHARGE = PokemonMove(POGOProtos_Enums.PokemonMove_DISCHARGE)
const PokemonMove_FLASH_CANNON = PokemonMove(POGOProtos_Enums.PokemonMove_FLASH_CANNON)
const PokemonMove_PECK = PokemonMove(POGOProtos_Enums.PokemonMove_PECK)
const PokemonMove_DRILL_PECK = PokemonMove(POGOProtos_Enums.PokemonMove_DRILL_PECK)
const PokemonMove_ICE_BEAM = PokemonMove(POGOProtos_Enums.PokemonMove_ICE_BEAM)
const PokemonMove_BLIZZARD = PokemonMove(POGOProtos_Enums.PokemonMove_BLIZZARD)
const PokemonMove_AIR_SLASH = PokemonMove(POGOProtos_Enums.PokemonMove_AIR_SLASH)
const PokemonMove_HEAT_WAVE = PokemonMove(POGOProtos_Enums.PokemonMove_HEAT_WAVE)
const PokemonMove_TWINEEDLE = PokemonMove(POGOProtos_Enums.PokemonMove_TWINEEDLE)
const PokemonMove_POISON_JAB = PokemonMove(POGOProtos_Enums.PokemonMove_POISON_JAB)
const PokemonMove_AERIAL_ACE = PokemonMove(POGOProtos_Enums.PokemonMove_AERIAL_ACE)
const PokemonMove_DRILL_RUN = PokemonMove(POGOProtos_Enums.PokemonMove_DRILL_RUN)
const PokemonMove_PETAL_BLIZZARD = PokemonMove(POGOProtos_Enums.PokemonMove_PETAL_BLIZZARD)
const PokemonMove_MEGA_DRAIN = PokemonMove(POGOProtos_Enums.PokemonMove_MEGA_DRAIN)
const PokemonMove_BUG_BUZZ = PokemonMove(POGOProtos_Enums.PokemonMove_BUG_BUZZ)
const PokemonMove_POISON_FANG = PokemonMove(POGOProtos_Enums.PokemonMove_POISON_FANG)
const PokemonMove_NIGHT_SLASH = PokemonMove(POGOProtos_Enums.PokemonMove_NIGHT_SLASH)
const PokemonMove_SLASH = PokemonMove(POGOProtos_Enums.PokemonMove_SLASH)
const PokemonMove_BUBBLE_BEAM = PokemonMove(POGOProtos_Enums.PokemonMove_BUBBLE_BEAM)
const PokemonMove_SUBMISSION = PokemonMove(POGOProtos_Enums.PokemonMove_SUBMISSION)
const PokemonMove_KARATE_CHOP = PokemonMove(POGOProtos_Enums.PokemonMove_KARATE_CHOP)
const PokemonMove_LOW_SWEEP = PokemonMove(POGOProtos_Enums.PokemonMove_LOW_SWEEP)
const PokemonMove_AQUA_JET = PokemonMove(POGOProtos_Enums.PokemonMove_AQUA_JET)
const PokemonMove_AQUA_TAIL = PokemonMove(POGOProtos_Enums.PokemonMove_AQUA_TAIL)
const PokemonMove_SEED_BOMB = PokemonMove(POGOProtos_Enums.PokemonMove_SEED_BOMB)
const PokemonMove_PSYSHOCK = PokemonMove(POGOProtos_Enums.PokemonMove_PSYSHOCK)
const PokemonMove_ROCK_THROW = PokemonMove(POGOProtos_Enums.PokemonMove_ROCK_THROW)
const PokemonMove_ANCIENT_POWER = PokemonMove(POGOProtos_Enums.PokemonMove_ANCIENT_POWER)
const PokemonMove_ROCK_TOMB = PokemonMove(POGOProtos_Enums.PokemonMove_ROCK_TOMB)
const PokemonMove_ROCK_SLIDE = PokemonMove(POGOProtos_Enums.PokemonMove_ROCK_SLIDE)
const PokemonMove_POWER_GEM = PokemonMove(POGOProtos_Enums.PokemonMove_POWER_GEM)
const PokemonMove_SHADOW_SNEAK = PokemonMove(POGOProtos_Enums.PokemonMove_SHADOW_SNEAK)
const PokemonMove_SHADOW_PUNCH = PokemonMove(POGOProtos_Enums.PokemonMove_SHADOW_PUNCH)
const PokemonMove_SHADOW_CLAW = PokemonMove(POGOProtos_Enums.PokemonMove_SHADOW_CLAW)
const PokemonMove_OMINOUS_WIND = PokemonMove(POGOProtos_Enums.PokemonMove_OMINOUS_WIND)
const PokemonMove_SHADOW_BALL = PokemonMove(POGOProtos_Enums.PokemonMove_SHADOW_BALL)
const PokemonMove_BULLET_PUNCH = PokemonMove(POGOProtos_Enums.PokemonMove_BULLET_PUNCH)
const PokemonMove_MAGNET_BOMB = PokemonMove(POGOProtos_Enums.PokemonMove_MAGNET_BOMB)
const PokemonMove_STEEL_WING = PokemonMove(POGOProtos_Enums.PokemonMove_STEEL_WING)
const PokemonMove_IRON_HEAD = PokemonMove(POGOProtos_Enums.PokemonMove_IRON_HEAD)
const PokemonMove_PARABOLIC_CHARGE = PokemonMove(POGOProtos_Enums.PokemonMove_PARABOLIC_CHARGE)
const PokemonMove_SPARK = PokemonMove(POGOProtos_Enums.PokemonMove_SPARK)
const PokemonMove_THUNDER_PUNCH = PokemonMove(POGOProtos_Enums.PokemonMove_THUNDER_PUNCH)
const PokemonMove_THUNDER = PokemonMove(POGOProtos_Enums.PokemonMove_THUNDER)
const PokemonMove_THUNDERBOLT = PokemonMove(POGOProtos_Enums.PokemonMove_THUNDERBOLT)
const PokemonMove_TWISTER = PokemonMove(POGOProtos_Enums.PokemonMove_TWISTER)
const PokemonMove_DRAGON_BREATH = PokemonMove(POGOProtos_Enums.PokemonMove_DRAGON_BREATH)
const PokemonMove_DRAGON_PULSE = PokemonMove(POGOProtos_Enums.PokemonMove_DRAGON_PULSE)
const PokemonMove_DRAGON_CLAW = PokemonMove(POGOProtos_Enums.PokemonMove_DRAGON_CLAW)
const PokemonMove_DISARMING_VOICE = PokemonMove(POGOProtos_Enums.PokemonMove_DISARMING_VOICE)
const PokemonMove_DRAINING_KISS = PokemonMove(POGOProtos_Enums.PokemonMove_DRAINING_KISS)
const PokemonMove_DAZZLING_GLEAM = PokemonMove(POGOProtos_Enums.PokemonMove_DAZZLING_GLEAM)
const PokemonMove_MOONBLAST = PokemonMove(POGOProtos_Enums.PokemonMove_MOONBLAST)
const PokemonMove_PLAY_ROUGH = PokemonMove(POGOProtos_Enums.PokemonMove_PLAY_ROUGH)
const PokemonMove_CROSS_POISON = PokemonMove(POGOProtos_Enums.PokemonMove_CROSS_POISON)
const PokemonMove_SLUDGE_BOMB = PokemonMove(POGOProtos_Enums.PokemonMove_SLUDGE_BOMB)
const PokemonMove_SLUDGE_WAVE = PokemonMove(POGOProtos_Enums.PokemonMove_SLUDGE_WAVE)
const PokemonMove_GUNK_SHOT = PokemonMove(POGOProtos_Enums.PokemonMove_GUNK_SHOT)
const PokemonMove_MUD_SHOT = PokemonMove(POGOProtos_Enums.PokemonMove_MUD_SHOT)
const PokemonMove_BONE_CLUB = PokemonMove(POGOProtos_Enums.PokemonMove_BONE_CLUB)
const PokemonMove_BULLDOZE = PokemonMove(POGOProtos_Enums.PokemonMove_BULLDOZE)
const PokemonMove_MUD_BOMB = PokemonMove(POGOProtos_Enums.PokemonMove_MUD_BOMB)
const PokemonMove_FURY_CUTTER = PokemonMove(POGOProtos_Enums.PokemonMove_FURY_CUTTER)
const PokemonMove_BUG_BITE = PokemonMove(POGOProtos_Enums.PokemonMove_BUG_BITE)
const PokemonMove_SIGNAL_BEAM = PokemonMove(POGOProtos_Enums.PokemonMove_SIGNAL_BEAM)
const PokemonMove_X_SCISSOR = PokemonMove(POGOProtos_Enums.PokemonMove_X_SCISSOR)
const PokemonMove_FLAME_CHARGE = PokemonMove(POGOProtos_Enums.PokemonMove_FLAME_CHARGE)
const PokemonMove_FLAME_BURST = PokemonMove(POGOProtos_Enums.PokemonMove_FLAME_BURST)
const PokemonMove_FIRE_BLAST = PokemonMove(POGOProtos_Enums.PokemonMove_FIRE_BLAST)
const PokemonMove_BRINE = PokemonMove(POGOProtos_Enums.PokemonMove_BRINE)
const PokemonMove_WATER_PULSE = PokemonMove(POGOProtos_Enums.PokemonMove_WATER_PULSE)
const PokemonMove_SCALD = PokemonMove(POGOProtos_Enums.PokemonMove_SCALD)
const PokemonMove_HYDRO_PUMP = PokemonMove(POGOProtos_Enums.PokemonMove_HYDRO_PUMP)
const PokemonMove_PSYCHIC = PokemonMove(POGOProtos_Enums.PokemonMove_PSYCHIC)
const PokemonMove_PSYSTRIKE = PokemonMove(POGOProtos_Enums.PokemonMove_PSYSTRIKE)
const PokemonMove_ICE_SHARD = PokemonMove(POGOProtos_Enums.PokemonMove_ICE_SHARD)
const PokemonMove_ICY_WIND = PokemonMove(POGOProtos_Enums.PokemonMove_ICY_WIND)
const PokemonMove_FROST_BREATH = PokemonMove(POGOProtos_Enums.PokemonMove_FROST_BREATH)
const PokemonMove_ABSORB = PokemonMove(POGOProtos_Enums.PokemonMove_ABSORB)
const PokemonMove_GIGA_DRAIN = PokemonMove(POGOProtos_Enums.PokemonMove_GIGA_DRAIN)
const PokemonMove_FIRE_PUNCH = PokemonMove(POGOProtos_Enums.PokemonMove_FIRE_PUNCH)
const PokemonMove_SOLAR_BEAM = PokemonMove(POGOProtos_Enums.PokemonMove_SOLAR_BEAM)
const PokemonMove_LEAF_BLADE = PokemonMove(POGOProtos_Enums.PokemonMove_LEAF_BLADE)
const PokemonMove_POWER_WHIP = PokemonMove(POGOProtos_Enums.PokemonMove_POWER_WHIP)
const PokemonMove_SPLASH = PokemonMove(POGOProtos_Enums.PokemonMove_SPLASH)
const PokemonMove_ACID = PokemonMove(POGOProtos_Enums.PokemonMove_ACID)
const PokemonMove_AIR_CUTTER = PokemonMove(POGOProtos_Enums.PokemonMove_AIR_CUTTER)
const PokemonMove_HURRICANE = PokemonMove(POGOProtos_Enums.PokemonMove_HURRICANE)
const PokemonMove_BRICK_BREAK = PokemonMove(POGOProtos_Enums.PokemonMove_BRICK_BREAK)
const PokemonMove_CUT = PokemonMove(POGOProtos_Enums.PokemonMove_CUT)
const PokemonMove_SWIFT = PokemonMove(POGOProtos_Enums.PokemonMove_SWIFT)
const PokemonMove_HORN_ATTACK = PokemonMove(POGOProtos_Enums.PokemonMove_HORN_ATTACK)
const PokemonMove_STOMP = PokemonMove(POGOProtos_Enums.PokemonMove_STOMP)
const PokemonMove_HEADBUTT = PokemonMove(POGOProtos_Enums.PokemonMove_HEADBUTT)
const PokemonMove_HYPER_FANG = PokemonMove(POGOProtos_Enums.PokemonMove_HYPER_FANG)
const PokemonMove_SLAM = PokemonMove(POGOProtos_Enums.PokemonMove_SLAM)
const PokemonMove_BODY_SLAM = PokemonMove(POGOProtos_Enums.PokemonMove_BODY_SLAM)
const PokemonMove_REST = PokemonMove(POGOProtos_Enums.PokemonMove_REST)
const PokemonMove_STRUGGLE = PokemonMove(POGOProtos_Enums.PokemonMove_STRUGGLE)
const PokemonMove_SCALD_BLASTOISE = PokemonMove(POGOProtos_Enums.PokemonMove_SCALD_BLASTOISE)
const PokemonMove_HYDRO_PUMP_BLASTOISE = PokemonMove(POGOProtos_Enums.PokemonMove_HYDRO_PUMP_BLASTOISE)
const PokemonMove_WRAP_GREEN = PokemonMove(POGOProtos_Enums.PokemonMove_WRAP_GREEN)
const PokemonMove_WRAP_PINK = PokemonMove(POGOProtos_Enums.PokemonMove_WRAP_PINK)
const PokemonMove_FURY_CUTTER_FAST = PokemonMove(POGOProtos_Enums.PokemonMove_FURY_CUTTER_FAST)
const PokemonMove_BUG_BITE_FAST = PokemonMove(POGOProtos_Enums.PokemonMove_BUG_BITE_FAST)
const PokemonMove_BITE_FAST = PokemonMove(POGOProtos_Enums.PokemonMove_BITE_FAST)
const PokemonMove_SUCKER_PUNCH_FAST = PokemonMove(POGOProtos_Enums.PokemonMove_SUCKER_PUNCH_FAST)
const PokemonMove_DRAGON_BREATH_FAST = PokemonMove(POGOProtos_Enums.PokemonMove_DRAGON_BREATH_FAST)
const PokemonMove_THUNDER_SHOCK_FAST = PokemonMove(POGOProtos_Enums.PokemonMove_THUNDER_SHOCK_FAST)
const PokemonMove_SPARK_FAST = PokemonMove(POGOProtos_Enums.PokemonMove_SPARK_FAST)
const PokemonMove_LOW_KICK_FAST = PokemonMove(POGOProtos_Enums.PokemonMove_LOW_KICK_FAST)
const PokemonMove_KARATE_CHOP_FAST = PokemonMove(POGOProtos_Enums.PokemonMove_KARATE_CHOP_FAST)
const PokemonMove_EMBER_FAST = PokemonMove(POGOProtos_Enums.PokemonMove_EMBER_FAST)
const PokemonMove_WING_ATTACK_FAST = PokemonMove(POGOProtos_Enums.PokemonMove_WING_ATTACK_FAST)
const PokemonMove_PECK_FAST = PokemonMove(POGOProtos_Enums.PokemonMove_PECK_FAST)
const PokemonMove_LICK_FAST = PokemonMove(POGOProtos_Enums.PokemonMove_LICK_FAST)
const PokemonMove_SHADOW_CLAW_FAST = PokemonMove(POGOProtos_Enums.PokemonMove_SHADOW_CLAW_FAST)
const PokemonMove_VINE_WHIP_FAST = PokemonMove(POGOProtos_Enums.PokemonMove_VINE_WHIP_FAST)
const PokemonMove_RAZOR_LEAF_FAST = PokemonMove(POGOProtos_Enums.PokemonMove_RAZOR_LEAF_FAST)
const PokemonMove_MUD_SHOT_FAST = PokemonMove(POGOProtos_Enums.PokemonMove_MUD_SHOT_FAST)
const PokemonMove_ICE_SHARD_FAST = PokemonMove(POGOProtos_Enums.PokemonMove_ICE_SHARD_FAST)
const PokemonMove_FROST_BREATH_FAST = PokemonMove(POGOProtos_Enums.PokemonMove_FROST_BREATH_FAST)
const PokemonMove_QUICK_ATTACK_FAST = PokemonMove(POGOProtos_Enums.PokemonMove_QUICK_ATTACK_FAST)
const PokemonMove_SCRATCH_FAST = PokemonMove(POGOProtos_Enums.PokemonMove_SCRATCH_FAST)
const PokemonMove_TACKLE_FAST = PokemonMove(POGOProtos_Enums.PokemonMove_TACKLE_FAST)
const PokemonMove_POUND_FAST = PokemonMove(POGOProtos_Enums.PokemonMove_POUND_FAST)
const PokemonMove_CUT_FAST = PokemonMove(POGOProtos_Enums.PokemonMove_CUT_FAST)
const PokemonMove_POISON_JAB_FAST = PokemonMove(POGOProtos_Enums.PokemonMove_POISON_JAB_FAST)
const PokemonMove_ACID_FAST = PokemonMove(POGOProtos_Enums.PokemonMove_ACID_FAST)
const PokemonMove_PSYCHO_CUT_FAST = PokemonMove(POGOProtos_Enums.PokemonMove_PSYCHO_CUT_FAST)
const PokemonMove_ROCK_THROW_FAST = PokemonMove(POGOProtos_Enums.PokemonMove_ROCK_THROW_FAST)
const PokemonMove_METAL_CLAW_FAST = PokemonMove(POGOProtos_Enums.PokemonMove_METAL_CLAW_FAST)
const PokemonMove_BULLET_PUNCH_FAST = PokemonMove(POGOProtos_Enums.PokemonMove_BULLET_PUNCH_FAST)
const PokemonMove_WATER_GUN_FAST = PokemonMove(POGOProtos_Enums.PokemonMove_WATER_GUN_FAST)
const PokemonMove_SPLASH_FAST = PokemonMove(POGOProtos_Enums.PokemonMove_SPLASH_FAST)
const PokemonMove_WATER_GUN_FAST_BLASTOISE = PokemonMove(POGOProtos_Enums.PokemonMove_WATER_GUN_FAST_BLASTOISE)
const PokemonMove_MUD_SLAP_FAST = PokemonMove(POGOProtos_Enums.PokemonMove_MUD_SLAP_FAST)
const PokemonMove_ZEN_HEADBUTT_FAST = PokemonMove(POGOProtos_Enums.PokemonMove_ZEN_HEADBUTT_FAST)
const PokemonMove_CONFUSION_FAST = PokemonMove(POGOProtos_Enums.PokemonMove_CONFUSION_FAST)
const PokemonMove_POISON_STING_FAST = PokemonMove(POGOProtos_Enums.PokemonMove_POISON_STING_FAST)
const PokemonMove_BUBBLE_FAST = PokemonMove(POGOProtos_Enums.PokemonMove_BUBBLE_FAST)
const PokemonMove_FEINT_ATTACK_FAST = PokemonMove(POGOProtos_Enums.PokemonMove_FEINT_ATTACK_FAST)
const PokemonMove_STEEL_WING_FAST = PokemonMove(POGOProtos_Enums.PokemonMove_STEEL_WING_FAST)
const PokemonMove_FIRE_FANG_FAST = PokemonMove(POGOProtos_Enums.PokemonMove_FIRE_FANG_FAST)
const PokemonMove_ROCK_SMASH_FAST = PokemonMove(POGOProtos_Enums.PokemonMove_ROCK_SMASH_FAST)

// PokemonMovementType from public import enums/enums.proto
type PokemonMovementType POGOProtos_Enums.PokemonMovementType

var PokemonMovementType_name = POGOProtos_Enums.PokemonMovementType_name
var PokemonMovementType_value = POGOProtos_Enums.PokemonMovementType_value

func (x PokemonMovementType) String() string {
	return (POGOProtos_Enums.PokemonMovementType)(x).String()
}

const PokemonMovementType_MOVEMENT_STATIC = PokemonMovementType(POGOProtos_Enums.PokemonMovementType_MOVEMENT_STATIC)
const PokemonMovementType_MOVEMENT_JUMP = PokemonMovementType(POGOProtos_Enums.PokemonMovementType_MOVEMENT_JUMP)
const PokemonMovementType_MOVEMENT_VERTICAL = PokemonMovementType(POGOProtos_Enums.PokemonMovementType_MOVEMENT_VERTICAL)
const PokemonMovementType_MOVEMENT_PSYCHIC = PokemonMovementType(POGOProtos_Enums.PokemonMovementType_MOVEMENT_PSYCHIC)
const PokemonMovementType_MOVEMENT_ELECTRIC = PokemonMovementType(POGOProtos_Enums.PokemonMovementType_MOVEMENT_ELECTRIC)
const PokemonMovementType_MOVEMENT_FLYING = PokemonMovementType(POGOProtos_Enums.PokemonMovementType_MOVEMENT_FLYING)
const PokemonMovementType_MOVEMENT_HOVERING = PokemonMovementType(POGOProtos_Enums.PokemonMovementType_MOVEMENT_HOVERING)

// PokemonRarity from public import enums/enums.proto
type PokemonRarity POGOProtos_Enums.PokemonRarity

var PokemonRarity_name = POGOProtos_Enums.PokemonRarity_name
var PokemonRarity_value = POGOProtos_Enums.PokemonRarity_value

func (x PokemonRarity) String() string { return (POGOProtos_Enums.PokemonRarity)(x).String() }

const PokemonRarity_NORMAL = PokemonRarity(POGOProtos_Enums.PokemonRarity_NORMAL)
const PokemonRarity_LEGENDARY = PokemonRarity(POGOProtos_Enums.PokemonRarity_LEGENDARY)
const PokemonRarity_MYTHIC = PokemonRarity(POGOProtos_Enums.PokemonRarity_MYTHIC)

// PokemonType from public import enums/enums.proto
type PokemonType POGOProtos_Enums.PokemonType

var PokemonType_name = POGOProtos_Enums.PokemonType_name
var PokemonType_value = POGOProtos_Enums.PokemonType_value

func (x PokemonType) String() string { return (POGOProtos_Enums.PokemonType)(x).String() }

const PokemonType_POKEMON_TYPE_NONE = PokemonType(POGOProtos_Enums.PokemonType_POKEMON_TYPE_NONE)
const PokemonType_POKEMON_TYPE_NORMAL = PokemonType(POGOProtos_Enums.PokemonType_POKEMON_TYPE_NORMAL)
const PokemonType_POKEMON_TYPE_FIGHTING = PokemonType(POGOProtos_Enums.PokemonType_POKEMON_TYPE_FIGHTING)
const PokemonType_POKEMON_TYPE_FLYING = PokemonType(POGOProtos_Enums.PokemonType_POKEMON_TYPE_FLYING)
const PokemonType_POKEMON_TYPE_POISON = PokemonType(POGOProtos_Enums.PokemonType_POKEMON_TYPE_POISON)
const PokemonType_POKEMON_TYPE_GROUND = PokemonType(POGOProtos_Enums.PokemonType_POKEMON_TYPE_GROUND)
const PokemonType_POKEMON_TYPE_ROCK = PokemonType(POGOProtos_Enums.PokemonType_POKEMON_TYPE_ROCK)
const PokemonType_POKEMON_TYPE_BUG = PokemonType(POGOProtos_Enums.PokemonType_POKEMON_TYPE_BUG)
const PokemonType_POKEMON_TYPE_GHOST = PokemonType(POGOProtos_Enums.PokemonType_POKEMON_TYPE_GHOST)
const PokemonType_POKEMON_TYPE_STEEL = PokemonType(POGOProtos_Enums.PokemonType_POKEMON_TYPE_STEEL)
const PokemonType_POKEMON_TYPE_FIRE = PokemonType(POGOProtos_Enums.PokemonType_POKEMON_TYPE_FIRE)
const PokemonType_POKEMON_TYPE_WATER = PokemonType(POGOProtos_Enums.PokemonType_POKEMON_TYPE_WATER)
const PokemonType_POKEMON_TYPE_GRASS = PokemonType(POGOProtos_Enums.PokemonType_POKEMON_TYPE_GRASS)
const PokemonType_POKEMON_TYPE_ELECTRIC = PokemonType(POGOProtos_Enums.PokemonType_POKEMON_TYPE_ELECTRIC)
const PokemonType_POKEMON_TYPE_PSYCHIC = PokemonType(POGOProtos_Enums.PokemonType_POKEMON_TYPE_PSYCHIC)
const PokemonType_POKEMON_TYPE_ICE = PokemonType(POGOProtos_Enums.PokemonType_POKEMON_TYPE_ICE)
const PokemonType_POKEMON_TYPE_DRAGON = PokemonType(POGOProtos_Enums.PokemonType_POKEMON_TYPE_DRAGON)
const PokemonType_POKEMON_TYPE_DARK = PokemonType(POGOProtos_Enums.PokemonType_POKEMON_TYPE_DARK)
const PokemonType_POKEMON_TYPE_FAIRY = PokemonType(POGOProtos_Enums.PokemonType_POKEMON_TYPE_FAIRY)

// TeamColor from public import enums/enums.proto
type TeamColor POGOProtos_Enums.TeamColor

var TeamColor_name = POGOProtos_Enums.TeamColor_name
var TeamColor_value = POGOProtos_Enums.TeamColor_value

func (x TeamColor) String() string { return (POGOProtos_Enums.TeamColor)(x).String() }

const TeamColor_NEUTRAL = TeamColor(POGOProtos_Enums.TeamColor_NEUTRAL)
const TeamColor_BLUE = TeamColor(POGOProtos_Enums.TeamColor_BLUE)
const TeamColor_RED = TeamColor(POGOProtos_Enums.TeamColor_RED)
const TeamColor_YELLOW = TeamColor(POGOProtos_Enums.TeamColor_YELLOW)

// TutorialState from public import enums/enums.proto
type TutorialState POGOProtos_Enums.TutorialState

var TutorialState_name = POGOProtos_Enums.TutorialState_name
var TutorialState_value = POGOProtos_Enums.TutorialState_value

func (x TutorialState) String() string { return (POGOProtos_Enums.TutorialState)(x).String() }

const TutorialState_LEGAL_SCREEN = TutorialState(POGOProtos_Enums.TutorialState_LEGAL_SCREEN)
const TutorialState_AVATAR_SELECTION = TutorialState(POGOProtos_Enums.TutorialState_AVATAR_SELECTION)
const TutorialState_ACCOUNT_CREATION = TutorialState(POGOProtos_Enums.TutorialState_ACCOUNT_CREATION)
const TutorialState_POKEMON_CAPTURE = TutorialState(POGOProtos_Enums.TutorialState_POKEMON_CAPTURE)
const TutorialState_NAME_SELECTION = TutorialState(POGOProtos_Enums.TutorialState_NAME_SELECTION)
const TutorialState_POKEMON_BERRY = TutorialState(POGOProtos_Enums.TutorialState_POKEMON_BERRY)
const TutorialState_USE_ITEM = TutorialState(POGOProtos_Enums.TutorialState_USE_ITEM)
const TutorialState_FIRST_TIME_EXPERIENCE_COMPLETE = TutorialState(POGOProtos_Enums.TutorialState_FIRST_TIME_EXPERIENCE_COMPLETE)
const TutorialState_POKESTOP_TUTORIAL = TutorialState(POGOProtos_Enums.TutorialState_POKESTOP_TUTORIAL)
const TutorialState_GYM_TUTORIAL = TutorialState(POGOProtos_Enums.TutorialState_GYM_TUTORIAL)

// ContactSettings from public import data_player/data_player.proto
type ContactSettings POGOProtos_Data_Player.ContactSettings

func (m *ContactSettings) Reset() { (*POGOProtos_Data_Player.ContactSettings)(m).Reset() }
func (m *ContactSettings) String() string {
	return (*POGOProtos_Data_Player.ContactSettings)(m).String()
}
func (*ContactSettings) ProtoMessage() {}

// Currency from public import data_player/data_player.proto
type Currency POGOProtos_Data_Player.Currency

func (m *Currency) Reset()         { (*POGOProtos_Data_Player.Currency)(m).Reset() }
func (m *Currency) String() string { return (*POGOProtos_Data_Player.Currency)(m).String() }
func (*Currency) ProtoMessage()    {}

// DailyBonus from public import data_player/data_player.proto
type DailyBonus POGOProtos_Data_Player.DailyBonus

func (m *DailyBonus) Reset()         { (*POGOProtos_Data_Player.DailyBonus)(m).Reset() }
func (m *DailyBonus) String() string { return (*POGOProtos_Data_Player.DailyBonus)(m).String() }
func (*DailyBonus) ProtoMessage()    {}

// EquippedBadge from public import data_player/data_player.proto
type EquippedBadge POGOProtos_Data_Player.EquippedBadge

func (m *EquippedBadge) Reset()         { (*POGOProtos_Data_Player.EquippedBadge)(m).Reset() }
func (m *EquippedBadge) String() string { return (*POGOProtos_Data_Player.EquippedBadge)(m).String() }
func (*EquippedBadge) ProtoMessage()    {}

// PlayerAvatar from public import data_player/data_player.proto
type PlayerAvatar POGOProtos_Data_Player.PlayerAvatar

func (m *PlayerAvatar) Reset()         { (*POGOProtos_Data_Player.PlayerAvatar)(m).Reset() }
func (m *PlayerAvatar) String() string { return (*POGOProtos_Data_Player.PlayerAvatar)(m).String() }
func (*PlayerAvatar) ProtoMessage()    {}

// PlayerCamera from public import data_player/data_player.proto
type PlayerCamera POGOProtos_Data_Player.PlayerCamera

func (m *PlayerCamera) Reset()         { (*POGOProtos_Data_Player.PlayerCamera)(m).Reset() }
func (m *PlayerCamera) String() string { return (*POGOProtos_Data_Player.PlayerCamera)(m).String() }
func (*PlayerCamera) ProtoMessage()    {}

// PlayerCurrency from public import data_player/data_player.proto
type PlayerCurrency POGOProtos_Data_Player.PlayerCurrency

func (m *PlayerCurrency) Reset()         { (*POGOProtos_Data_Player.PlayerCurrency)(m).Reset() }
func (m *PlayerCurrency) String() string { return (*POGOProtos_Data_Player.PlayerCurrency)(m).String() }
func (*PlayerCurrency) ProtoMessage()    {}

// PlayerPublicProfile from public import data_player/data_player.proto
type PlayerPublicProfile POGOProtos_Data_Player.PlayerPublicProfile

func (m *PlayerPublicProfile) Reset() { (*POGOProtos_Data_Player.PlayerPublicProfile)(m).Reset() }
func (m *PlayerPublicProfile) String() string {
	return (*POGOProtos_Data_Player.PlayerPublicProfile)(m).String()
}
func (*PlayerPublicProfile) ProtoMessage() {}
func (m *PlayerPublicProfile) GetAvatar() *PlayerAvatar {
	return (*PlayerAvatar)((*POGOProtos_Data_Player.PlayerPublicProfile)(m).GetAvatar())
}

// PlayerStats from public import data_player/data_player.proto
type PlayerStats POGOProtos_Data_Player.PlayerStats

func (m *PlayerStats) Reset()         { (*POGOProtos_Data_Player.PlayerStats)(m).Reset() }
func (m *PlayerStats) String() string { return (*POGOProtos_Data_Player.PlayerStats)(m).String() }
func (*PlayerStats) ProtoMessage()    {}

type AddFortModifierMessage struct {
	ModifierType    POGOProtos_Inventory_Item.ItemId `protobuf:"varint,1,opt,name=modifier_type,json=modifierType,enum=POGOProtos.Inventory.Item.ItemId" json:"modifier_type,omitempty"`
	FortId          string                           `protobuf:"bytes,2,opt,name=fort_id,json=fortId" json:"fort_id,omitempty"`
	PlayerLatitude  float64                          `protobuf:"fixed64,3,opt,name=player_latitude,json=playerLatitude" json:"player_latitude,omitempty"`
	PlayerLongitude float64                          `protobuf:"fixed64,4,opt,name=player_longitude,json=playerLongitude" json:"player_longitude,omitempty"`
}

func (m *AddFortModifierMessage) Reset()                    { *m = AddFortModifierMessage{} }
func (m *AddFortModifierMessage) String() string            { return proto.CompactTextString(m) }
func (*AddFortModifierMessage) ProtoMessage()               {}
func (*AddFortModifierMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type AttackGymMessage struct {
	GymId                string                                 `protobuf:"bytes,1,opt,name=gym_id,json=gymId" json:"gym_id,omitempty"`
	BattleId             string                                 `protobuf:"bytes,2,opt,name=battle_id,json=battleId" json:"battle_id,omitempty"`
	AttackActions        []*POGOProtos_Data_Battle.BattleAction `protobuf:"bytes,3,rep,name=attack_actions,json=attackActions" json:"attack_actions,omitempty"`
	LastRetrievedActions *POGOProtos_Data_Battle.BattleAction   `protobuf:"bytes,4,opt,name=last_retrieved_actions,json=lastRetrievedActions" json:"last_retrieved_actions,omitempty"`
	PlayerLatitude       float64                                `protobuf:"fixed64,5,opt,name=player_latitude,json=playerLatitude" json:"player_latitude,omitempty"`
	PlayerLongitude      float64                                `protobuf:"fixed64,6,opt,name=player_longitude,json=playerLongitude" json:"player_longitude,omitempty"`
}

func (m *AttackGymMessage) Reset()                    { *m = AttackGymMessage{} }
func (m *AttackGymMessage) String() string            { return proto.CompactTextString(m) }
func (*AttackGymMessage) ProtoMessage()               {}
func (*AttackGymMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *AttackGymMessage) GetAttackActions() []*POGOProtos_Data_Battle.BattleAction {
	if m != nil {
		return m.AttackActions
	}
	return nil
}

func (m *AttackGymMessage) GetLastRetrievedActions() *POGOProtos_Data_Battle.BattleAction {
	if m != nil {
		return m.LastRetrievedActions
	}
	return nil
}

type CatchPokemonMessage struct {
	EncounterId           uint64                           `protobuf:"fixed64,1,opt,name=encounter_id,json=encounterId" json:"encounter_id,omitempty"`
	Pokeball              POGOProtos_Inventory_Item.ItemId `protobuf:"varint,2,opt,name=pokeball,enum=POGOProtos.Inventory.Item.ItemId" json:"pokeball,omitempty"`
	NormalizedReticleSize float64                          `protobuf:"fixed64,3,opt,name=normalized_reticle_size,json=normalizedReticleSize" json:"normalized_reticle_size,omitempty"`
	SpawnPointId          string                           `protobuf:"bytes,4,opt,name=spawn_point_id,json=spawnPointId" json:"spawn_point_id,omitempty"`
	HitPokemon            bool                             `protobuf:"varint,5,opt,name=hit_pokemon,json=hitPokemon" json:"hit_pokemon,omitempty"`
	SpinModifier          float64                          `protobuf:"fixed64,6,opt,name=spin_modifier,json=spinModifier" json:"spin_modifier,omitempty"`
	NormalizedHitPosition float64                          `protobuf:"fixed64,7,opt,name=normalized_hit_position,json=normalizedHitPosition" json:"normalized_hit_position,omitempty"`
}

func (m *CatchPokemonMessage) Reset()                    { *m = CatchPokemonMessage{} }
func (m *CatchPokemonMessage) String() string            { return proto.CompactTextString(m) }
func (*CatchPokemonMessage) ProtoMessage()               {}
func (*CatchPokemonMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type CheckAwardedBadgesMessage struct {
}

func (m *CheckAwardedBadgesMessage) Reset()                    { *m = CheckAwardedBadgesMessage{} }
func (m *CheckAwardedBadgesMessage) String() string            { return proto.CompactTextString(m) }
func (*CheckAwardedBadgesMessage) ProtoMessage()               {}
func (*CheckAwardedBadgesMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type CheckCodenameAvailableMessage struct {
	Codename string `protobuf:"bytes,1,opt,name=codename" json:"codename,omitempty"`
}

func (m *CheckCodenameAvailableMessage) Reset()                    { *m = CheckCodenameAvailableMessage{} }
func (m *CheckCodenameAvailableMessage) String() string            { return proto.CompactTextString(m) }
func (*CheckCodenameAvailableMessage) ProtoMessage()               {}
func (*CheckCodenameAvailableMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

type ClaimCodenameMessage struct {
	Codename string `protobuf:"bytes,1,opt,name=codename" json:"codename,omitempty"`
}

func (m *ClaimCodenameMessage) Reset()                    { *m = ClaimCodenameMessage{} }
func (m *ClaimCodenameMessage) String() string            { return proto.CompactTextString(m) }
func (*ClaimCodenameMessage) ProtoMessage()               {}
func (*ClaimCodenameMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

type CollectDailyBonusMessage struct {
}

func (m *CollectDailyBonusMessage) Reset()                    { *m = CollectDailyBonusMessage{} }
func (m *CollectDailyBonusMessage) String() string            { return proto.CompactTextString(m) }
func (*CollectDailyBonusMessage) ProtoMessage()               {}
func (*CollectDailyBonusMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

type CollectDailyDefenderBonusMessage struct {
}

func (m *CollectDailyDefenderBonusMessage) Reset()         { *m = CollectDailyDefenderBonusMessage{} }
func (m *CollectDailyDefenderBonusMessage) String() string { return proto.CompactTextString(m) }
func (*CollectDailyDefenderBonusMessage) ProtoMessage()    {}
func (*CollectDailyDefenderBonusMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{7}
}

type DiskEncounterMessage struct {
	EncounterId     uint64  `protobuf:"varint,1,opt,name=encounter_id,json=encounterId" json:"encounter_id,omitempty"`
	FortId          string  `protobuf:"bytes,2,opt,name=fort_id,json=fortId" json:"fort_id,omitempty"`
	PlayerLatitude  float64 `protobuf:"fixed64,3,opt,name=player_latitude,json=playerLatitude" json:"player_latitude,omitempty"`
	PlayerLongitude float64 `protobuf:"fixed64,4,opt,name=player_longitude,json=playerLongitude" json:"player_longitude,omitempty"`
}

func (m *DiskEncounterMessage) Reset()                    { *m = DiskEncounterMessage{} }
func (m *DiskEncounterMessage) String() string            { return proto.CompactTextString(m) }
func (*DiskEncounterMessage) ProtoMessage()               {}
func (*DiskEncounterMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

type DownloadItemTemplatesMessage struct {
}

func (m *DownloadItemTemplatesMessage) Reset()                    { *m = DownloadItemTemplatesMessage{} }
func (m *DownloadItemTemplatesMessage) String() string            { return proto.CompactTextString(m) }
func (*DownloadItemTemplatesMessage) ProtoMessage()               {}
func (*DownloadItemTemplatesMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

type DownloadRemoteConfigVersionMessage struct {
	Platform           POGOProtos_Enums.Platform `protobuf:"varint,1,opt,name=platform,enum=POGOProtos.Enums.Platform" json:"platform,omitempty"`
	DeviceManufacturer string                    `protobuf:"bytes,2,opt,name=device_manufacturer,json=deviceManufacturer" json:"device_manufacturer,omitempty"`
	DeviceModel        string                    `protobuf:"bytes,3,opt,name=device_model,json=deviceModel" json:"device_model,omitempty"`
	Locale             string                    `protobuf:"bytes,4,opt,name=locale" json:"locale,omitempty"`
	AppVersion         uint32                    `protobuf:"varint,5,opt,name=app_version,json=appVersion" json:"app_version,omitempty"`
}

func (m *DownloadRemoteConfigVersionMessage) Reset()         { *m = DownloadRemoteConfigVersionMessage{} }
func (m *DownloadRemoteConfigVersionMessage) String() string { return proto.CompactTextString(m) }
func (*DownloadRemoteConfigVersionMessage) ProtoMessage()    {}
func (*DownloadRemoteConfigVersionMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{10}
}

type DownloadSettingsMessage struct {
	Hash string `protobuf:"bytes,1,opt,name=hash" json:"hash,omitempty"`
}

func (m *DownloadSettingsMessage) Reset()                    { *m = DownloadSettingsMessage{} }
func (m *DownloadSettingsMessage) String() string            { return proto.CompactTextString(m) }
func (*DownloadSettingsMessage) ProtoMessage()               {}
func (*DownloadSettingsMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

type EchoMessage struct {
}

func (m *EchoMessage) Reset()                    { *m = EchoMessage{} }
func (m *EchoMessage) String() string            { return proto.CompactTextString(m) }
func (*EchoMessage) ProtoMessage()               {}
func (*EchoMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

type EncounterMessage struct {
	EncounterId     uint64  `protobuf:"fixed64,1,opt,name=encounter_id,json=encounterId" json:"encounter_id,omitempty"`
	SpawnPointId    string  `protobuf:"bytes,2,opt,name=spawn_point_id,json=spawnPointId" json:"spawn_point_id,omitempty"`
	PlayerLatitude  float64 `protobuf:"fixed64,3,opt,name=player_latitude,json=playerLatitude" json:"player_latitude,omitempty"`
	PlayerLongitude float64 `protobuf:"fixed64,4,opt,name=player_longitude,json=playerLongitude" json:"player_longitude,omitempty"`
}

func (m *EncounterMessage) Reset()                    { *m = EncounterMessage{} }
func (m *EncounterMessage) String() string            { return proto.CompactTextString(m) }
func (*EncounterMessage) ProtoMessage()               {}
func (*EncounterMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

type EncounterTutorialCompleteMessage struct {
	PokemonId POGOProtos_Enums.PokemonId `protobuf:"varint,1,opt,name=pokemon_id,json=pokemonId,enum=POGOProtos.Enums.PokemonId" json:"pokemon_id,omitempty"`
}

func (m *EncounterTutorialCompleteMessage) Reset()         { *m = EncounterTutorialCompleteMessage{} }
func (m *EncounterTutorialCompleteMessage) String() string { return proto.CompactTextString(m) }
func (*EncounterTutorialCompleteMessage) ProtoMessage()    {}
func (*EncounterTutorialCompleteMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{14}
}

type EquipBadgeMessage struct {
	BadgeType POGOProtos_Enums.BadgeType `protobuf:"varint,1,opt,name=badge_type,json=badgeType,enum=POGOProtos.Enums.BadgeType" json:"badge_type,omitempty"`
}

func (m *EquipBadgeMessage) Reset()                    { *m = EquipBadgeMessage{} }
func (m *EquipBadgeMessage) String() string            { return proto.CompactTextString(m) }
func (*EquipBadgeMessage) ProtoMessage()               {}
func (*EquipBadgeMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

type EvolvePokemonMessage struct {
	PokemonId uint64 `protobuf:"fixed64,1,opt,name=pokemon_id,json=pokemonId" json:"pokemon_id,omitempty"`
}

func (m *EvolvePokemonMessage) Reset()                    { *m = EvolvePokemonMessage{} }
func (m *EvolvePokemonMessage) String() string            { return proto.CompactTextString(m) }
func (*EvolvePokemonMessage) ProtoMessage()               {}
func (*EvolvePokemonMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

type FortDeployPokemonMessage struct {
	FortId          string  `protobuf:"bytes,1,opt,name=fort_id,json=fortId" json:"fort_id,omitempty"`
	PokemonId       uint64  `protobuf:"varint,2,opt,name=pokemon_id,json=pokemonId" json:"pokemon_id,omitempty"`
	PlayerLatitude  float64 `protobuf:"fixed64,3,opt,name=player_latitude,json=playerLatitude" json:"player_latitude,omitempty"`
	PlayerLongitude float64 `protobuf:"fixed64,4,opt,name=player_longitude,json=playerLongitude" json:"player_longitude,omitempty"`
}

func (m *FortDeployPokemonMessage) Reset()                    { *m = FortDeployPokemonMessage{} }
func (m *FortDeployPokemonMessage) String() string            { return proto.CompactTextString(m) }
func (*FortDeployPokemonMessage) ProtoMessage()               {}
func (*FortDeployPokemonMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

type FortDetailsMessage struct {
	FortId    string  `protobuf:"bytes,1,opt,name=fort_id,json=fortId" json:"fort_id,omitempty"`
	Latitude  float64 `protobuf:"fixed64,2,opt,name=latitude" json:"latitude,omitempty"`
	Longitude float64 `protobuf:"fixed64,3,opt,name=longitude" json:"longitude,omitempty"`
}

func (m *FortDetailsMessage) Reset()                    { *m = FortDetailsMessage{} }
func (m *FortDetailsMessage) String() string            { return proto.CompactTextString(m) }
func (*FortDetailsMessage) ProtoMessage()               {}
func (*FortDetailsMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

type FortRecallPokemonMessage struct {
	FortId          string  `protobuf:"bytes,1,opt,name=fort_id,json=fortId" json:"fort_id,omitempty"`
	PokemonId       uint64  `protobuf:"varint,2,opt,name=pokemon_id,json=pokemonId" json:"pokemon_id,omitempty"`
	PlayerLatitude  float64 `protobuf:"fixed64,3,opt,name=player_latitude,json=playerLatitude" json:"player_latitude,omitempty"`
	PlayerLongitude float64 `protobuf:"fixed64,4,opt,name=player_longitude,json=playerLongitude" json:"player_longitude,omitempty"`
}

func (m *FortRecallPokemonMessage) Reset()                    { *m = FortRecallPokemonMessage{} }
func (m *FortRecallPokemonMessage) String() string            { return proto.CompactTextString(m) }
func (*FortRecallPokemonMessage) ProtoMessage()               {}
func (*FortRecallPokemonMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

type FortSearchMessage struct {
	FortId          string  `protobuf:"bytes,1,opt,name=fort_id,json=fortId" json:"fort_id,omitempty"`
	PlayerLatitude  float64 `protobuf:"fixed64,2,opt,name=player_latitude,json=playerLatitude" json:"player_latitude,omitempty"`
	PlayerLongitude float64 `protobuf:"fixed64,3,opt,name=player_longitude,json=playerLongitude" json:"player_longitude,omitempty"`
	FortLatitude    float64 `protobuf:"fixed64,4,opt,name=fort_latitude,json=fortLatitude" json:"fort_latitude,omitempty"`
	FortLongitude   float64 `protobuf:"fixed64,5,opt,name=fort_longitude,json=fortLongitude" json:"fort_longitude,omitempty"`
}

func (m *FortSearchMessage) Reset()                    { *m = FortSearchMessage{} }
func (m *FortSearchMessage) String() string            { return proto.CompactTextString(m) }
func (*FortSearchMessage) ProtoMessage()               {}
func (*FortSearchMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

type GetAssetDigestMessage struct {
	Platform           POGOProtos_Enums.Platform `protobuf:"varint,1,opt,name=platform,enum=POGOProtos.Enums.Platform" json:"platform,omitempty"`
	DeviceManufacturer string                    `protobuf:"bytes,2,opt,name=device_manufacturer,json=deviceManufacturer" json:"device_manufacturer,omitempty"`
	DeviceModel        string                    `protobuf:"bytes,3,opt,name=device_model,json=deviceModel" json:"device_model,omitempty"`
	Locale             string                    `protobuf:"bytes,4,opt,name=locale" json:"locale,omitempty"`
	AppVersion         uint32                    `protobuf:"varint,5,opt,name=app_version,json=appVersion" json:"app_version,omitempty"`
}

func (m *GetAssetDigestMessage) Reset()                    { *m = GetAssetDigestMessage{} }
func (m *GetAssetDigestMessage) String() string            { return proto.CompactTextString(m) }
func (*GetAssetDigestMessage) ProtoMessage()               {}
func (*GetAssetDigestMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

type GetDownloadUrlsMessage struct {
	AssetId []string `protobuf:"bytes,1,rep,name=asset_id,json=assetId" json:"asset_id,omitempty"`
}

func (m *GetDownloadUrlsMessage) Reset()                    { *m = GetDownloadUrlsMessage{} }
func (m *GetDownloadUrlsMessage) String() string            { return proto.CompactTextString(m) }
func (*GetDownloadUrlsMessage) ProtoMessage()               {}
func (*GetDownloadUrlsMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

type GetGymDetailsMessage struct {
	GymId           string  `protobuf:"bytes,1,opt,name=gym_id,json=gymId" json:"gym_id,omitempty"`
	PlayerLatitude  float64 `protobuf:"fixed64,2,opt,name=player_latitude,json=playerLatitude" json:"player_latitude,omitempty"`
	PlayerLongitude float64 `protobuf:"fixed64,3,opt,name=player_longitude,json=playerLongitude" json:"player_longitude,omitempty"`
	GymLatitude     float64 `protobuf:"fixed64,4,opt,name=gym_latitude,json=gymLatitude" json:"gym_latitude,omitempty"`
	GymLongitude    float64 `protobuf:"fixed64,5,opt,name=gym_longitude,json=gymLongitude" json:"gym_longitude,omitempty"`
}

func (m *GetGymDetailsMessage) Reset()                    { *m = GetGymDetailsMessage{} }
func (m *GetGymDetailsMessage) String() string            { return proto.CompactTextString(m) }
func (*GetGymDetailsMessage) ProtoMessage()               {}
func (*GetGymDetailsMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

type GetHatchedEggsMessage struct {
}

func (m *GetHatchedEggsMessage) Reset()                    { *m = GetHatchedEggsMessage{} }
func (m *GetHatchedEggsMessage) String() string            { return proto.CompactTextString(m) }
func (*GetHatchedEggsMessage) ProtoMessage()               {}
func (*GetHatchedEggsMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

type GetIncensePokemonMessage struct {
	PlayerLatitude  float64 `protobuf:"fixed64,1,opt,name=player_latitude,json=playerLatitude" json:"player_latitude,omitempty"`
	PlayerLongitude float64 `protobuf:"fixed64,2,opt,name=player_longitude,json=playerLongitude" json:"player_longitude,omitempty"`
}

func (m *GetIncensePokemonMessage) Reset()                    { *m = GetIncensePokemonMessage{} }
func (m *GetIncensePokemonMessage) String() string            { return proto.CompactTextString(m) }
func (*GetIncensePokemonMessage) ProtoMessage()               {}
func (*GetIncensePokemonMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25} }

type GetInventoryMessage struct {
	LastTimestampMs int64 `protobuf:"varint,1,opt,name=last_timestamp_ms,json=lastTimestampMs" json:"last_timestamp_ms,omitempty"`
	ItemBeenSeen    int32 `protobuf:"varint,2,opt,name=item_been_seen,json=itemBeenSeen" json:"item_been_seen,omitempty"`
}

func (m *GetInventoryMessage) Reset()                    { *m = GetInventoryMessage{} }
func (m *GetInventoryMessage) String() string            { return proto.CompactTextString(m) }
func (*GetInventoryMessage) ProtoMessage()               {}
func (*GetInventoryMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{26} }

type GetMapObjectsMessage struct {
	CellId           []uint64 `protobuf:"varint,1,rep,packed,name=cell_id,json=cellId" json:"cell_id,omitempty"`
	SinceTimestampMs []int64  `protobuf:"varint,2,rep,packed,name=since_timestamp_ms,json=sinceTimestampMs" json:"since_timestamp_ms,omitempty"`
	Latitude         float64  `protobuf:"fixed64,3,opt,name=latitude" json:"latitude,omitempty"`
	Longitude        float64  `protobuf:"fixed64,4,opt,name=longitude" json:"longitude,omitempty"`
}

func (m *GetMapObjectsMessage) Reset()                    { *m = GetMapObjectsMessage{} }
func (m *GetMapObjectsMessage) String() string            { return proto.CompactTextString(m) }
func (*GetMapObjectsMessage) ProtoMessage()               {}
func (*GetMapObjectsMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{27} }

type GetPlayerMessage struct {
}

func (m *GetPlayerMessage) Reset()                    { *m = GetPlayerMessage{} }
func (m *GetPlayerMessage) String() string            { return proto.CompactTextString(m) }
func (*GetPlayerMessage) ProtoMessage()               {}
func (*GetPlayerMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{28} }

type GetPlayerProfileMessage struct {
	PlayerName string `protobuf:"bytes,1,opt,name=player_name,json=playerName" json:"player_name,omitempty"`
}

func (m *GetPlayerProfileMessage) Reset()                    { *m = GetPlayerProfileMessage{} }
func (m *GetPlayerProfileMessage) String() string            { return proto.CompactTextString(m) }
func (*GetPlayerProfileMessage) ProtoMessage()               {}
func (*GetPlayerProfileMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{29} }

type GetSuggestedCodenamesMessage struct {
}

func (m *GetSuggestedCodenamesMessage) Reset()                    { *m = GetSuggestedCodenamesMessage{} }
func (m *GetSuggestedCodenamesMessage) String() string            { return proto.CompactTextString(m) }
func (*GetSuggestedCodenamesMessage) ProtoMessage()               {}
func (*GetSuggestedCodenamesMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{30} }

type IncenseEncounterMessage struct {
	EncounterId       int64  `protobuf:"varint,1,opt,name=encounter_id,json=encounterId" json:"encounter_id,omitempty"`
	EncounterLocation string `protobuf:"bytes,2,opt,name=encounter_location,json=encounterLocation" json:"encounter_location,omitempty"`
}

func (m *IncenseEncounterMessage) Reset()                    { *m = IncenseEncounterMessage{} }
func (m *IncenseEncounterMessage) String() string            { return proto.CompactTextString(m) }
func (*IncenseEncounterMessage) ProtoMessage()               {}
func (*IncenseEncounterMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{31} }

type LevelUpRewardsMessage struct {
	Level int32 `protobuf:"varint,1,opt,name=level" json:"level,omitempty"`
}

func (m *LevelUpRewardsMessage) Reset()                    { *m = LevelUpRewardsMessage{} }
func (m *LevelUpRewardsMessage) String() string            { return proto.CompactTextString(m) }
func (*LevelUpRewardsMessage) ProtoMessage()               {}
func (*LevelUpRewardsMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{32} }

type MarkTutorialCompleteMessage struct {
	TutorialsCompleted    []POGOProtos_Enums.TutorialState `protobuf:"varint,1,rep,name=tutorials_completed,json=tutorialsCompleted,enum=POGOProtos.Enums.TutorialState" json:"tutorials_completed,omitempty"`
	SendMarketingEmails   bool                             `protobuf:"varint,2,opt,name=send_marketing_emails,json=sendMarketingEmails" json:"send_marketing_emails,omitempty"`
	SendPushNotifications bool                             `protobuf:"varint,3,opt,name=send_push_notifications,json=sendPushNotifications" json:"send_push_notifications,omitempty"`
}

func (m *MarkTutorialCompleteMessage) Reset()                    { *m = MarkTutorialCompleteMessage{} }
func (m *MarkTutorialCompleteMessage) String() string            { return proto.CompactTextString(m) }
func (*MarkTutorialCompleteMessage) ProtoMessage()               {}
func (*MarkTutorialCompleteMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{33} }

type NicknamePokemonMessage struct {
	PokemonId uint64 `protobuf:"fixed64,1,opt,name=pokemon_id,json=pokemonId" json:"pokemon_id,omitempty"`
	Nickname  string `protobuf:"bytes,2,opt,name=nickname" json:"nickname,omitempty"`
}

func (m *NicknamePokemonMessage) Reset()                    { *m = NicknamePokemonMessage{} }
func (m *NicknamePokemonMessage) String() string            { return proto.CompactTextString(m) }
func (*NicknamePokemonMessage) ProtoMessage()               {}
func (*NicknamePokemonMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{34} }

type PlayerUpdateMessage struct {
	Latitude  float64 `protobuf:"fixed64,1,opt,name=latitude" json:"latitude,omitempty"`
	Longitude float64 `protobuf:"fixed64,2,opt,name=longitude" json:"longitude,omitempty"`
}

func (m *PlayerUpdateMessage) Reset()                    { *m = PlayerUpdateMessage{} }
func (m *PlayerUpdateMessage) String() string            { return proto.CompactTextString(m) }
func (*PlayerUpdateMessage) ProtoMessage()               {}
func (*PlayerUpdateMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{35} }

type RecycleInventoryItemMessage struct {
	ItemId POGOProtos_Inventory_Item.ItemId `protobuf:"varint,1,opt,name=item_id,json=itemId,enum=POGOProtos.Inventory.Item.ItemId" json:"item_id,omitempty"`
	Count  int32                            `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
}

func (m *RecycleInventoryItemMessage) Reset()                    { *m = RecycleInventoryItemMessage{} }
func (m *RecycleInventoryItemMessage) String() string            { return proto.CompactTextString(m) }
func (*RecycleInventoryItemMessage) ProtoMessage()               {}
func (*RecycleInventoryItemMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{36} }

type ReleasePokemonMessage struct {
	PokemonId uint64 `protobuf:"fixed64,1,opt,name=pokemon_id,json=pokemonId" json:"pokemon_id,omitempty"`
}

func (m *ReleasePokemonMessage) Reset()                    { *m = ReleasePokemonMessage{} }
func (m *ReleasePokemonMessage) String() string            { return proto.CompactTextString(m) }
func (*ReleasePokemonMessage) ProtoMessage()               {}
func (*ReleasePokemonMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{37} }

type SetAvatarMessage struct {
	PlayerAvatar *POGOProtos_Data_Player.PlayerAvatar `protobuf:"bytes,2,opt,name=player_avatar,json=playerAvatar" json:"player_avatar,omitempty"`
}

func (m *SetAvatarMessage) Reset()                    { *m = SetAvatarMessage{} }
func (m *SetAvatarMessage) String() string            { return proto.CompactTextString(m) }
func (*SetAvatarMessage) ProtoMessage()               {}
func (*SetAvatarMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{38} }

func (m *SetAvatarMessage) GetPlayerAvatar() *POGOProtos_Data_Player.PlayerAvatar {
	if m != nil {
		return m.PlayerAvatar
	}
	return nil
}

type SetContactSettingsMessage struct {
	ContactSettings *POGOProtos_Data_Player.ContactSettings `protobuf:"bytes,1,opt,name=contact_settings,json=contactSettings" json:"contact_settings,omitempty"`
}

func (m *SetContactSettingsMessage) Reset()                    { *m = SetContactSettingsMessage{} }
func (m *SetContactSettingsMessage) String() string            { return proto.CompactTextString(m) }
func (*SetContactSettingsMessage) ProtoMessage()               {}
func (*SetContactSettingsMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{39} }

func (m *SetContactSettingsMessage) GetContactSettings() *POGOProtos_Data_Player.ContactSettings {
	if m != nil {
		return m.ContactSettings
	}
	return nil
}

type SetFavoritePokemonMessage struct {
	PokemonId  uint64 `protobuf:"varint,1,opt,name=pokemon_id,json=pokemonId" json:"pokemon_id,omitempty"`
	IsFavorite bool   `protobuf:"varint,2,opt,name=is_favorite,json=isFavorite" json:"is_favorite,omitempty"`
}

func (m *SetFavoritePokemonMessage) Reset()                    { *m = SetFavoritePokemonMessage{} }
func (m *SetFavoritePokemonMessage) String() string            { return proto.CompactTextString(m) }
func (*SetFavoritePokemonMessage) ProtoMessage()               {}
func (*SetFavoritePokemonMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{40} }

type SetPlayerTeamMessage struct {
	Team POGOProtos_Enums.TeamColor `protobuf:"varint,1,opt,name=team,enum=POGOProtos.Enums.TeamColor" json:"team,omitempty"`
}

func (m *SetPlayerTeamMessage) Reset()                    { *m = SetPlayerTeamMessage{} }
func (m *SetPlayerTeamMessage) String() string            { return proto.CompactTextString(m) }
func (*SetPlayerTeamMessage) ProtoMessage()               {}
func (*SetPlayerTeamMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{41} }

type SfidaActionLogMessage struct {
}

func (m *SfidaActionLogMessage) Reset()                    { *m = SfidaActionLogMessage{} }
func (m *SfidaActionLogMessage) String() string            { return proto.CompactTextString(m) }
func (*SfidaActionLogMessage) ProtoMessage()               {}
func (*SfidaActionLogMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{42} }

type StartGymBattleMessage struct {
	GymId               string   `protobuf:"bytes,1,opt,name=gym_id,json=gymId" json:"gym_id,omitempty"`
	AttackingPokemonIds []uint64 `protobuf:"fixed64,2,rep,name=attacking_pokemon_ids,json=attackingPokemonIds" json:"attacking_pokemon_ids,omitempty"`
	DefendingPokemonId  uint64   `protobuf:"varint,3,opt,name=defending_pokemon_id,json=defendingPokemonId" json:"defending_pokemon_id,omitempty"`
	PlayerLatitude      float64  `protobuf:"fixed64,4,opt,name=player_latitude,json=playerLatitude" json:"player_latitude,omitempty"`
	PlayerLongitude     float64  `protobuf:"fixed64,5,opt,name=player_longitude,json=playerLongitude" json:"player_longitude,omitempty"`
}

func (m *StartGymBattleMessage) Reset()                    { *m = StartGymBattleMessage{} }
func (m *StartGymBattleMessage) String() string            { return proto.CompactTextString(m) }
func (*StartGymBattleMessage) ProtoMessage()               {}
func (*StartGymBattleMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{43} }

type UpgradePokemonMessage struct {
	PokemonId uint64 `protobuf:"varint,1,opt,name=pokemon_id,json=pokemonId" json:"pokemon_id,omitempty"`
}

func (m *UpgradePokemonMessage) Reset()                    { *m = UpgradePokemonMessage{} }
func (m *UpgradePokemonMessage) String() string            { return proto.CompactTextString(m) }
func (*UpgradePokemonMessage) ProtoMessage()               {}
func (*UpgradePokemonMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{44} }

type UseIncenseMessage struct {
	IncenseType POGOProtos_Inventory_Item.ItemId `protobuf:"varint,1,opt,name=incense_type,json=incenseType,enum=POGOProtos.Inventory.Item.ItemId" json:"incense_type,omitempty"`
}

func (m *UseIncenseMessage) Reset()                    { *m = UseIncenseMessage{} }
func (m *UseIncenseMessage) String() string            { return proto.CompactTextString(m) }
func (*UseIncenseMessage) ProtoMessage()               {}
func (*UseIncenseMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{45} }

type UseItemCaptureMessage struct {
	ItemId         POGOProtos_Inventory_Item.ItemId `protobuf:"varint,1,opt,name=item_id,json=itemId,enum=POGOProtos.Inventory.Item.ItemId" json:"item_id,omitempty"`
	EncounterId    uint64                           `protobuf:"fixed64,2,opt,name=encounter_id,json=encounterId" json:"encounter_id,omitempty"`
	SpawnPointGuid string                           `protobuf:"bytes,3,opt,name=spawn_point_guid,json=spawnPointGuid" json:"spawn_point_guid,omitempty"`
}

func (m *UseItemCaptureMessage) Reset()                    { *m = UseItemCaptureMessage{} }
func (m *UseItemCaptureMessage) String() string            { return proto.CompactTextString(m) }
func (*UseItemCaptureMessage) ProtoMessage()               {}
func (*UseItemCaptureMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{46} }

type UseItemEggIncubatorMessage struct {
	ItemId    string `protobuf:"bytes,1,opt,name=item_id,json=itemId" json:"item_id,omitempty"`
	PokemonId uint64 `protobuf:"varint,2,opt,name=pokemon_id,json=pokemonId" json:"pokemon_id,omitempty"`
}

func (m *UseItemEggIncubatorMessage) Reset()                    { *m = UseItemEggIncubatorMessage{} }
func (m *UseItemEggIncubatorMessage) String() string            { return proto.CompactTextString(m) }
func (*UseItemEggIncubatorMessage) ProtoMessage()               {}
func (*UseItemEggIncubatorMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{47} }

type UseItemGymMessage struct {
	ItemId          POGOProtos_Inventory_Item.ItemId `protobuf:"varint,1,opt,name=item_id,json=itemId,enum=POGOProtos.Inventory.Item.ItemId" json:"item_id,omitempty"`
	GymId           string                           `protobuf:"bytes,2,opt,name=gym_id,json=gymId" json:"gym_id,omitempty"`
	PlayerLatitude  float64                          `protobuf:"fixed64,3,opt,name=player_latitude,json=playerLatitude" json:"player_latitude,omitempty"`
	PlayerLongitude float64                          `protobuf:"fixed64,4,opt,name=player_longitude,json=playerLongitude" json:"player_longitude,omitempty"`
}

func (m *UseItemGymMessage) Reset()                    { *m = UseItemGymMessage{} }
func (m *UseItemGymMessage) String() string            { return proto.CompactTextString(m) }
func (*UseItemGymMessage) ProtoMessage()               {}
func (*UseItemGymMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{48} }

type UseItemPotionMessage struct {
	ItemId    POGOProtos_Inventory_Item.ItemId `protobuf:"varint,1,opt,name=item_id,json=itemId,enum=POGOProtos.Inventory.Item.ItemId" json:"item_id,omitempty"`
	PokemonId uint64                           `protobuf:"varint,2,opt,name=pokemon_id,json=pokemonId" json:"pokemon_id,omitempty"`
}

func (m *UseItemPotionMessage) Reset()                    { *m = UseItemPotionMessage{} }
func (m *UseItemPotionMessage) String() string            { return proto.CompactTextString(m) }
func (*UseItemPotionMessage) ProtoMessage()               {}
func (*UseItemPotionMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{49} }

type UseItemReviveMessage struct {
	ItemId    POGOProtos_Inventory_Item.ItemId `protobuf:"varint,1,opt,name=item_id,json=itemId,enum=POGOProtos.Inventory.Item.ItemId" json:"item_id,omitempty"`
	PokemonId uint64                           `protobuf:"varint,2,opt,name=pokemon_id,json=pokemonId" json:"pokemon_id,omitempty"`
}

func (m *UseItemReviveMessage) Reset()                    { *m = UseItemReviveMessage{} }
func (m *UseItemReviveMessage) String() string            { return proto.CompactTextString(m) }
func (*UseItemReviveMessage) ProtoMessage()               {}
func (*UseItemReviveMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{50} }

type UseItemXpBoostMessage struct {
	ItemId POGOProtos_Inventory_Item.ItemId `protobuf:"varint,1,opt,name=item_id,json=itemId,enum=POGOProtos.Inventory.Item.ItemId" json:"item_id,omitempty"`
}

func (m *UseItemXpBoostMessage) Reset()                    { *m = UseItemXpBoostMessage{} }
func (m *UseItemXpBoostMessage) String() string            { return proto.CompactTextString(m) }
func (*UseItemXpBoostMessage) ProtoMessage()               {}
func (*UseItemXpBoostMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{51} }

func init() {
	proto.RegisterType((*AddFortModifierMessage)(nil), "POGOProtos.Networking.Requests.Messages.AddFortModifierMessage")
	proto.RegisterType((*AttackGymMessage)(nil), "POGOProtos.Networking.Requests.Messages.AttackGymMessage")
	proto.RegisterType((*CatchPokemonMessage)(nil), "POGOProtos.Networking.Requests.Messages.CatchPokemonMessage")
	proto.RegisterType((*CheckAwardedBadgesMessage)(nil), "POGOProtos.Networking.Requests.Messages.CheckAwardedBadgesMessage")
	proto.RegisterType((*CheckCodenameAvailableMessage)(nil), "POGOProtos.Networking.Requests.Messages.CheckCodenameAvailableMessage")
	proto.RegisterType((*ClaimCodenameMessage)(nil), "POGOProtos.Networking.Requests.Messages.ClaimCodenameMessage")
	proto.RegisterType((*CollectDailyBonusMessage)(nil), "POGOProtos.Networking.Requests.Messages.CollectDailyBonusMessage")
	proto.RegisterType((*CollectDailyDefenderBonusMessage)(nil), "POGOProtos.Networking.Requests.Messages.CollectDailyDefenderBonusMessage")
	proto.RegisterType((*DiskEncounterMessage)(nil), "POGOProtos.Networking.Requests.Messages.DiskEncounterMessage")
	proto.RegisterType((*DownloadItemTemplatesMessage)(nil), "POGOProtos.Networking.Requests.Messages.DownloadItemTemplatesMessage")
	proto.RegisterType((*DownloadRemoteConfigVersionMessage)(nil), "POGOProtos.Networking.Requests.Messages.DownloadRemoteConfigVersionMessage")
	proto.RegisterType((*DownloadSettingsMessage)(nil), "POGOProtos.Networking.Requests.Messages.DownloadSettingsMessage")
	proto.RegisterType((*EchoMessage)(nil), "POGOProtos.Networking.Requests.Messages.EchoMessage")
	proto.RegisterType((*EncounterMessage)(nil), "POGOProtos.Networking.Requests.Messages.EncounterMessage")
	proto.RegisterType((*EncounterTutorialCompleteMessage)(nil), "POGOProtos.Networking.Requests.Messages.EncounterTutorialCompleteMessage")
	proto.RegisterType((*EquipBadgeMessage)(nil), "POGOProtos.Networking.Requests.Messages.EquipBadgeMessage")
	proto.RegisterType((*EvolvePokemonMessage)(nil), "POGOProtos.Networking.Requests.Messages.EvolvePokemonMessage")
	proto.RegisterType((*FortDeployPokemonMessage)(nil), "POGOProtos.Networking.Requests.Messages.FortDeployPokemonMessage")
	proto.RegisterType((*FortDetailsMessage)(nil), "POGOProtos.Networking.Requests.Messages.FortDetailsMessage")
	proto.RegisterType((*FortRecallPokemonMessage)(nil), "POGOProtos.Networking.Requests.Messages.FortRecallPokemonMessage")
	proto.RegisterType((*FortSearchMessage)(nil), "POGOProtos.Networking.Requests.Messages.FortSearchMessage")
	proto.RegisterType((*GetAssetDigestMessage)(nil), "POGOProtos.Networking.Requests.Messages.GetAssetDigestMessage")
	proto.RegisterType((*GetDownloadUrlsMessage)(nil), "POGOProtos.Networking.Requests.Messages.GetDownloadUrlsMessage")
	proto.RegisterType((*GetGymDetailsMessage)(nil), "POGOProtos.Networking.Requests.Messages.GetGymDetailsMessage")
	proto.RegisterType((*GetHatchedEggsMessage)(nil), "POGOProtos.Networking.Requests.Messages.GetHatchedEggsMessage")
	proto.RegisterType((*GetIncensePokemonMessage)(nil), "POGOProtos.Networking.Requests.Messages.GetIncensePokemonMessage")
	proto.RegisterType((*GetInventoryMessage)(nil), "POGOProtos.Networking.Requests.Messages.GetInventoryMessage")
	proto.RegisterType((*GetMapObjectsMessage)(nil), "POGOProtos.Networking.Requests.Messages.GetMapObjectsMessage")
	proto.RegisterType((*GetPlayerMessage)(nil), "POGOProtos.Networking.Requests.Messages.GetPlayerMessage")
	proto.RegisterType((*GetPlayerProfileMessage)(nil), "POGOProtos.Networking.Requests.Messages.GetPlayerProfileMessage")
	proto.RegisterType((*GetSuggestedCodenamesMessage)(nil), "POGOProtos.Networking.Requests.Messages.GetSuggestedCodenamesMessage")
	proto.RegisterType((*IncenseEncounterMessage)(nil), "POGOProtos.Networking.Requests.Messages.IncenseEncounterMessage")
	proto.RegisterType((*LevelUpRewardsMessage)(nil), "POGOProtos.Networking.Requests.Messages.LevelUpRewardsMessage")
	proto.RegisterType((*MarkTutorialCompleteMessage)(nil), "POGOProtos.Networking.Requests.Messages.MarkTutorialCompleteMessage")
	proto.RegisterType((*NicknamePokemonMessage)(nil), "POGOProtos.Networking.Requests.Messages.NicknamePokemonMessage")
	proto.RegisterType((*PlayerUpdateMessage)(nil), "POGOProtos.Networking.Requests.Messages.PlayerUpdateMessage")
	proto.RegisterType((*RecycleInventoryItemMessage)(nil), "POGOProtos.Networking.Requests.Messages.RecycleInventoryItemMessage")
	proto.RegisterType((*ReleasePokemonMessage)(nil), "POGOProtos.Networking.Requests.Messages.ReleasePokemonMessage")
	proto.RegisterType((*SetAvatarMessage)(nil), "POGOProtos.Networking.Requests.Messages.SetAvatarMessage")
	proto.RegisterType((*SetContactSettingsMessage)(nil), "POGOProtos.Networking.Requests.Messages.SetContactSettingsMessage")
	proto.RegisterType((*SetFavoritePokemonMessage)(nil), "POGOProtos.Networking.Requests.Messages.SetFavoritePokemonMessage")
	proto.RegisterType((*SetPlayerTeamMessage)(nil), "POGOProtos.Networking.Requests.Messages.SetPlayerTeamMessage")
	proto.RegisterType((*SfidaActionLogMessage)(nil), "POGOProtos.Networking.Requests.Messages.SfidaActionLogMessage")
	proto.RegisterType((*StartGymBattleMessage)(nil), "POGOProtos.Networking.Requests.Messages.StartGymBattleMessage")
	proto.RegisterType((*UpgradePokemonMessage)(nil), "POGOProtos.Networking.Requests.Messages.UpgradePokemonMessage")
	proto.RegisterType((*UseIncenseMessage)(nil), "POGOProtos.Networking.Requests.Messages.UseIncenseMessage")
	proto.RegisterType((*UseItemCaptureMessage)(nil), "POGOProtos.Networking.Requests.Messages.UseItemCaptureMessage")
	proto.RegisterType((*UseItemEggIncubatorMessage)(nil), "POGOProtos.Networking.Requests.Messages.UseItemEggIncubatorMessage")
	proto.RegisterType((*UseItemGymMessage)(nil), "POGOProtos.Networking.Requests.Messages.UseItemGymMessage")
	proto.RegisterType((*UseItemPotionMessage)(nil), "POGOProtos.Networking.Requests.Messages.UseItemPotionMessage")
	proto.RegisterType((*UseItemReviveMessage)(nil), "POGOProtos.Networking.Requests.Messages.UseItemReviveMessage")
	proto.RegisterType((*UseItemXpBoostMessage)(nil), "POGOProtos.Networking.Requests.Messages.UseItemXpBoostMessage")
}

func init() {
	proto.RegisterFile("networking_requests_messages/networking_requests_messages.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 1923 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xdc, 0x18, 0xdb, 0x6e, 0x1c, 0x49,
	0x95, 0xb9, 0x78, 0x6c, 0x1f, 0x5f, 0x32, 0x6e, 0x5f, 0x63, 0x27, 0xbb, 0xd9, 0xde, 0x45, 0x09,
	0x48, 0x6b, 0x23, 0xaf, 0xc8, 0xc3, 0x22, 0x84, 0x7c, 0x8b, 0xd7, 0xc2, 0x4e, 0x46, 0x3d, 0x36,
	0x82, 0x45, 0xd0, 0xaa, 0xe9, 0x2e, 0x8f, 0x0b, 0xf7, 0x74, 0x77, 0xba, 0x6a, 0x26, 0x32, 0x3f,
	0x03, 0x4f, 0xbc, 0xf2, 0xce, 0x2b, 0x4f, 0x48, 0xf0, 0xc4, 0x23, 0x7c, 0x00, 0xfc, 0x05, 0xa7,
	0x6e, 0xdd, 0x3d, 0x93, 0xb1, 0x3d, 0x51, 0x48, 0x84, 0x78, 0xb0, 0xa7, 0xeb, 0xdc, 0xea, 0xd4,
	0xb9, 0xd5, 0x39, 0x05, 0x3f, 0x89, 0xa9, 0x78, 0x93, 0x64, 0xd7, 0x2c, 0xee, 0xfa, 0x19, 0x7d,
	0xdd, 0xa7, 0x5c, 0x70, 0xbf, 0x47, 0x39, 0x27, 0x5d, 0xca, 0x77, 0xee, 0x42, 0x6e, 0xa7, 0x59,
	0x22, 0x12, 0xe7, 0x69, 0xeb, 0xd5, 0xf1, 0xab, 0x96, 0xfc, 0xe4, 0xdb, 0x2f, 0x73, 0xf2, 0x6d,
	0xcf, 0x90, 0x6f, 0x9f, 0x19, 0xf2, 0xcd, 0xcf, 0x59, 0x3c, 0xa0, 0xb1, 0x48, 0xb2, 0x1b, 0x9f,
	0x09, 0xda, 0xdb, 0x19, 0x5e, 0x6a, 0x69, 0x9b, 0x8f, 0x43, 0x22, 0x88, 0xdf, 0x21, 0x42, 0x44,
	0x74, 0xa7, 0xf4, 0x6d, 0xd0, 0x4b, 0x34, 0xee, 0xf7, 0xf8, 0x8e, 0xfa, 0x3f, 0xc4, 0x91, 0x46,
	0xe4, 0x86, 0x66, 0x3b, 0xa5, 0x6f, 0x8d, 0x76, 0xff, 0x56, 0x81, 0xb5, 0xbd, 0x30, 0x7c, 0x91,
	0x64, 0xe2, 0x2c, 0x09, 0xd9, 0x25, 0xa3, 0x99, 0xd1, 0xc8, 0x79, 0x01, 0x0b, 0x3d, 0x03, 0xf2,
	0xc5, 0x4d, 0x4a, 0x37, 0x2a, 0x4f, 0x2a, 0xcf, 0x16, 0x77, 0x3f, 0xdb, 0x2e, 0x9d, 0xe8, 0xc4,
	0x2a, 0xb9, 0x7d, 0x22, 0x95, 0x94, 0xff, 0x4e, 0x42, 0x6f, 0xde, 0xf2, 0x9d, 0x23, 0x9b, 0xb3,
	0x0e, 0xd3, 0x97, 0x28, 0xde, 0x67, 0xe1, 0x46, 0x15, 0x25, 0xcc, 0x7a, 0x0d, 0xb9, 0x3c, 0x09,
	0x9d, 0xa7, 0xf0, 0x40, 0xeb, 0xe2, 0x47, 0x44, 0x30, 0xd1, 0x0f, 0xe9, 0x46, 0x0d, 0x09, 0x2a,
	0xde, 0xa2, 0x06, 0x9f, 0x1a, 0xa8, 0xf3, 0x3d, 0x68, 0x5a, 0xc2, 0x24, 0xee, 0x6a, 0xca, 0xba,
	0xa2, 0x34, 0x02, 0x4e, 0x2d, 0xd8, 0xfd, 0x73, 0x15, 0x9a, 0x7b, 0x42, 0x90, 0xe0, 0xfa, 0xf8,
	0xa6, 0x67, 0x4f, 0xb2, 0x0a, 0x8d, 0xee, 0x4d, 0x4f, 0x2a, 0x50, 0x51, 0x0a, 0x4c, 0xe1, 0x0a,
	0xf7, 0xdf, 0x82, 0x59, 0x6d, 0xbd, 0x42, 0xb5, 0x19, 0x0d, 0x40, 0xe4, 0x4f, 0x61, 0x91, 0x28,
	0x39, 0x3e, 0x09, 0x04, 0x4b, 0x62, 0x8e, 0xba, 0xd5, 0x9e, 0xcd, 0xed, 0x7e, 0x51, 0x3e, 0xfe,
	0x21, 0xda, 0x73, 0x7b, 0x5f, 0x7b, 0x40, 0xff, 0xec, 0x29, 0x62, 0x6f, 0x41, 0xf3, 0xea, 0x15,
	0x77, 0xbe, 0x85, 0xb5, 0x88, 0x70, 0x81, 0x41, 0x22, 0x32, 0x46, 0x07, 0x34, 0xcc, 0x85, 0xca,
	0x63, 0x4c, 0x2a, 0x74, 0x45, 0xca, 0xf0, 0xac, 0x08, 0x2b, 0x7b, 0x8c, 0x15, 0xa7, 0x26, 0xb6,
	0x62, 0x63, 0xbc, 0x15, 0xff, 0x5e, 0x85, 0xe5, 0x03, 0x22, 0x82, 0xab, 0x56, 0x72, 0x4d, 0x7b,
	0x49, 0x6c, 0x0d, 0xf9, 0x19, 0xcc, 0xd3, 0x38, 0x48, 0xfa, 0xb1, 0x40, 0x29, 0xc6, 0x9c, 0x0d,
	0x6f, 0x2e, 0x87, 0xa1, 0xdd, 0x7e, 0x0c, 0x33, 0x29, 0x32, 0x75, 0x48, 0x14, 0x29, 0x9b, 0x4e,
	0x14, 0x30, 0x39, 0x8b, 0xf3, 0x1c, 0xd6, 0xe3, 0x24, 0xeb, 0x91, 0x88, 0xfd, 0x16, 0xad, 0x84,
	0xf6, 0x62, 0x01, 0xfa, 0x87, 0xe3, 0xca, 0xc4, 0xc6, 0x6a, 0x81, 0xf6, 0x34, 0xb6, 0x8d, 0xdf,
	0xce, 0x17, 0xb0, 0xc8, 0x53, 0xf2, 0x26, 0xf6, 0xd3, 0x84, 0xc5, 0x2a, 0xd6, 0xea, 0xca, 0xa1,
	0xf3, 0x0a, 0xda, 0x92, 0x40, 0x54, 0xee, 0x53, 0x98, 0xbb, 0x62, 0xc2, 0x4f, 0xf5, 0xa9, 0x94,
	0x9d, 0x66, 0x3c, 0x40, 0x90, 0x39, 0xa7, 0xf3, 0x39, 0x2c, 0xf0, 0x94, 0xc5, 0xbe, 0x0d, 0x60,
	0x63, 0xa0, 0x79, 0x09, 0xb4, 0xf9, 0x31, 0xa2, 0xa3, 0x16, 0xc8, 0x99, 0xf4, 0xc6, 0xc6, 0xf4,
	0xa8, 0x8e, 0xdf, 0x48, 0xd9, 0x1a, 0xe9, 0x6e, 0xc1, 0xc3, 0x83, 0x2b, 0x8a, 0x51, 0xf1, 0x86,
	0x64, 0x21, 0x0d, 0xf7, 0x49, 0x88, 0x79, 0x6f, 0x4c, 0xeb, 0xfe, 0x08, 0x1e, 0x2b, 0xe4, 0x41,
	0x12, 0xd2, 0x98, 0xf4, 0xe8, 0xde, 0x80, 0xb0, 0x88, 0x74, 0x22, 0x6a, 0x6d, 0xbf, 0x09, 0x33,
	0x81, 0xc1, 0x99, 0x30, 0xce, 0xd7, 0xee, 0x2e, 0xac, 0x1c, 0x44, 0x84, 0xf5, 0x2c, 0xf3, 0x24,
	0x3c, 0x9b, 0xb0, 0x71, 0x90, 0x44, 0x11, 0x0d, 0xc4, 0x21, 0xee, 0x74, 0xb3, 0x9f, 0xc4, 0xfd,
	0x5c, 0x19, 0x17, 0x9e, 0x94, 0x71, 0x87, 0xf4, 0x92, 0xc6, 0x21, 0xcd, 0x86, 0x68, 0xfe, 0x50,
	0x81, 0x95, 0x43, 0xc6, 0xaf, 0x8f, 0xac, 0xf3, 0xef, 0x0a, 0x92, 0xfa, 0x70, 0x90, 0x7c, 0xd4,
	0x92, 0xf0, 0x09, 0x3c, 0x3a, 0x4c, 0xde, 0xc4, 0x51, 0x42, 0x42, 0x19, 0x6e, 0xe7, 0xb4, 0x87,
	0x14, 0xa2, 0xb0, 0xfc, 0xbf, 0x2b, 0xe0, 0x5a, 0x02, 0x0f, 0xa3, 0x40, 0xd0, 0x83, 0x24, 0xbe,
	0x64, 0xdd, 0x9f, 0xd1, 0x8c, 0xb3, 0x22, 0xf6, 0x9f, 0x63, 0x60, 0x23, 0x1f, 0x2a, 0xda, 0x33,
	0x95, 0x70, 0xb3, 0x1c, 0xd8, 0x47, 0xaa, 0xe6, 0xb6, 0x0c, 0x85, 0x97, 0xd3, 0x3a, 0x3b, 0xb0,
	0x1c, 0xd2, 0x01, 0x0b, 0xa8, 0xdf, 0x23, 0x71, 0xff, 0x12, 0x13, 0xbf, 0x9f, 0x61, 0x60, 0xe9,
	0x73, 0x3b, 0x1a, 0x75, 0x56, 0xc2, 0x48, 0xfb, 0x59, 0x06, 0xf4, 0x55, 0xa4, 0x0c, 0x30, 0xeb,
	0xcd, 0x19, 0x4a, 0x09, 0x72, 0xd6, 0xa0, 0x11, 0x25, 0x01, 0x89, 0xa8, 0x89, 0x72, 0xb3, 0x92,
	0xf1, 0x4d, 0xd2, 0xd4, 0x1f, 0x68, 0xcd, 0x55, 0x7c, 0x2f, 0x78, 0x80, 0x20, 0x73, 0x16, 0xf7,
	0x4b, 0x58, 0xb7, 0x47, 0x6d, 0x53, 0x21, 0xf0, 0x26, 0xb2, 0x66, 0x70, 0x1c, 0xa8, 0x5f, 0x11,
	0x7e, 0x65, 0xe2, 0x44, 0x7d, 0xbb, 0x0b, 0x30, 0x77, 0x14, 0x5c, 0x25, 0xd6, 0x52, 0x7f, 0xac,
	0x40, 0x73, 0x22, 0x77, 0x8f, 0xd4, 0x84, 0xb7, 0x93, 0xb3, 0x3a, 0x26, 0x39, 0x3f, 0x84, 0xef,
	0x7f, 0x0d, 0x4f, 0x72, 0x85, 0xcf, 0xfb, 0x58, 0x77, 0x18, 0x89, 0x0e, 0x12, 0x0c, 0x00, 0x2a,
	0xf2, 0x24, 0xf9, 0x1a, 0xc0, 0x14, 0x04, 0xab, 0xfe, 0xe2, 0xee, 0xd6, 0x18, 0xd7, 0x6a, 0x1a,
	0xac, 0x56, 0xb3, 0xa9, 0xfd, 0x74, 0x5f, 0xc1, 0xd2, 0xd1, 0xeb, 0x3e, 0x4b, 0x55, 0x2e, 0x97,
	0x04, 0x76, 0xe4, 0xba, 0x7c, 0x6b, 0x8e, 0x11, 0xa8, 0x78, 0xe4, 0x0d, 0xe9, 0xcd, 0x76, 0xec,
	0xa7, 0xfb, 0x43, 0x58, 0x39, 0x1a, 0x24, 0xd1, 0x80, 0x8e, 0x54, 0xde, 0xc7, 0x6f, 0x29, 0xd9,
	0x28, 0xeb, 0x81, 0xc9, 0xb8, 0x21, 0xef, 0xf0, 0x43, 0x9a, 0x46, 0xc9, 0xcd, 0x08, 0x6f, 0x29,
	0xdb, 0x2a, 0x43, 0xd9, 0x36, 0x2c, 0xb4, 0xaa, 0xf2, 0xb4, 0x10, 0xfa, 0x41, 0x1c, 0xd2, 0x05,
	0x47, 0xeb, 0x29, 0xb0, 0xb0, 0xf0, 0x7b, 0x35, 0xc4, 0x02, 0x96, 0xef, 0x5d, 0x55, 0x12, 0xf3,
	0xb5, 0xf3, 0x08, 0x66, 0x8b, 0xed, 0xb4, 0x62, 0x05, 0x20, 0xb7, 0x88, 0x47, 0x31, 0x33, 0xa2,
	0xff, 0x61, 0x8b, 0xfc, 0xb5, 0x02, 0x4b, 0x52, 0xd1, 0x36, 0x25, 0x59, 0x70, 0x75, 0xaf, 0x86,
	0x63, 0x54, 0xa8, 0x4e, 0xac, 0x42, 0x6d, 0xac, 0x0a, 0xf2, 0xd6, 0x53, 0x9b, 0xe5, 0x12, 0xb5,
	0xaa, 0xf3, 0x12, 0x98, 0xcb, 0xfb, 0x2e, 0x2c, 0x6a, 0xa2, 0x5c, 0x9a, 0x6e, 0x33, 0x14, 0x6b,
	0x71, 0x9c, 0x7f, 0x56, 0x60, 0xf5, 0x98, 0x8a, 0x3d, 0xce, 0xa9, 0x38, 0x64, 0x78, 0xc1, 0x89,
	0xff, 0xab, 0x02, 0xfa, 0x15, 0xac, 0xe1, 0xe9, 0x6c, 0x0d, 0xbd, 0xc8, 0x8a, 0x18, 0x7e, 0x08,
	0x33, 0x44, 0x1e, 0x5a, 0xbb, 0xac, 0x86, 0x42, 0xa7, 0xd5, 0x1a, 0xb3, 0xf3, 0x2f, 0x78, 0x55,
	0x22, 0x17, 0x76, 0xa4, 0x23, 0x71, 0x7f, 0x4b, 0x63, 0xfa, 0x21, 0x7c, 0x8c, 0x46, 0x91, 0x5b,
	0x8d, 0xb8, 0x78, 0x0e, 0x61, 0xb9, 0x34, 0x0c, 0x03, 0x45, 0x32, 0xe2, 0x60, 0xc9, 0x57, 0xf8,
	0x77, 0x5d, 0xb9, 0xf7, 0x1b, 0xd9, 0x1c, 0xd2, 0xf0, 0xa8, 0x9b, 0xdf, 0x1f, 0x6e, 0x0c, 0x1b,
	0x88, 0x38, 0x89, 0x03, 0x1a, 0xf3, 0xd1, 0xea, 0x35, 0xe6, 0x40, 0x95, 0x89, 0x0f, 0x54, 0xbd,
	0xad, 0x92, 0x2c, 0xab, 0xfd, 0x4c, 0x3f, 0x69, 0xb7, 0xfa, 0x3e, 0x2c, 0xa9, 0x56, 0x5b, 0x30,
	0x1c, 0xc4, 0x04, 0xe9, 0xa5, 0x7e, 0x8f, 0xab, 0xcd, 0x6a, 0xde, 0x03, 0x89, 0x38, 0xb7, 0xf0,
	0x33, 0x2e, 0xef, 0x25, 0x39, 0x5b, 0xf9, 0x1d, 0x4a, 0x63, 0x9f, 0xe3, 0x3f, 0xb5, 0xd7, 0x94,
	0x37, 0x2f, 0xa1, 0xfb, 0xb8, 0x6e, 0xe3, 0x9f, 0xfb, 0x3b, 0xed, 0xbd, 0x33, 0x92, 0xbe, 0xea,
	0xfc, 0x06, 0x5b, 0xa2, 0xdc, 0x7b, 0x5b, 0x30, 0x1d, 0xd0, 0x28, 0xb2, 0x0e, 0xaf, 0xef, 0x57,
	0x9b, 0x15, 0xaf, 0x21, 0x41, 0xe8, 0xc3, 0x1f, 0x80, 0xc3, 0x19, 0x1a, 0x63, 0x58, 0x91, 0x2a,
	0xd2, 0xd5, 0x14, 0x5d, 0x53, 0x61, 0xcb, 0xda, 0x94, 0x6b, 0x5d, 0xed, 0xae, 0x5a, 0x57, 0x1f,
	0xad, 0x75, 0x0e, 0x34, 0x51, 0xc1, 0x96, 0x32, 0x90, 0x75, 0xc7, 0xd7, 0xb0, 0x9e, 0xc3, 0x30,
	0xc3, 0x2e, 0x59, 0xd1, 0x49, 0x62, 0x90, 0x1b, 0x23, 0x97, 0x1a, 0x43, 0xd0, 0xa0, 0x97, 0xb2,
	0x35, 0xc4, 0x8e, 0x09, 0x79, 0xdb, 0xfd, 0xae, 0x4c, 0x5f, 0x1a, 0xda, 0xae, 0x32, 0x77, 0xf5,
	0x35, 0xac, 0x1b, 0x3f, 0x4f, 0xd4, 0x0d, 0xd4, 0x86, 0xbb, 0x81, 0x2f, 0xc1, 0x29, 0x48, 0x64,
	0xde, 0xa9, 0xce, 0x59, 0xa7, 0xf3, 0x52, 0x8e, 0x39, 0x35, 0x08, 0x6c, 0x59, 0x56, 0x4f, 0x71,
	0xde, 0x89, 0x2e, 0x52, 0x8f, 0xca, 0xc6, 0x39, 0x37, 0xff, 0x0a, 0x4c, 0x45, 0x12, 0xa1, 0xf6,
	0x98, 0xf2, 0xf4, 0xc2, 0xfd, 0x47, 0x05, 0xb6, 0xce, 0x48, 0x76, 0x7d, 0xdb, 0x6d, 0xdf, 0x82,
	0x65, 0x61, 0x50, 0xdc, 0x0f, 0x0c, 0x52, 0x3b, 0x70, 0x71, 0xf7, 0xd3, 0xb7, 0x0b, 0x92, 0x95,
	0xd3, 0x16, 0xd8, 0x33, 0x7a, 0x4e, 0xce, 0x6b, 0xe5, 0x86, 0xce, 0x2e, 0xac, 0x72, 0x6c, 0x8f,
	0xb1, 0x3a, 0x65, 0xd7, 0x54, 0xb6, 0x54, 0x3e, 0xed, 0xc9, 0x24, 0x57, 0x47, 0x9a, 0xf1, 0x96,
	0x25, 0xf2, 0xcc, 0xe2, 0x8e, 0x14, 0x4a, 0x8e, 0x10, 0x8a, 0x27, 0xed, 0xf3, 0x2b, 0x3f, 0x4e,
	0x04, 0x0e, 0x16, 0xfa, 0xb8, 0x5c, 0xb9, 0x7e, 0xc6, 0x53, 0x22, 0x5b, 0x88, 0x7d, 0x59, 0x46,
	0xba, 0x6d, 0x58, 0x7b, 0xc9, 0x82, 0x6b, 0xe9, 0x8d, 0x77, 0x6a, 0x10, 0x64, 0x70, 0xc5, 0x86,
	0xd1, 0x8e, 0xba, 0x76, 0x8d, 0x4d, 0xcc, 0xb2, 0x8e, 0x93, 0x8b, 0x34, 0x24, 0xa2, 0x3c, 0x3c,
	0x8c, 0x64, 0xeb, 0x2d, 0xf1, 0x58, 0x1d, 0x8d, 0xc7, 0x04, 0xb6, 0xf0, 0xda, 0xbd, 0xc1, 0xd9,
	0x2c, 0x4f, 0x4f, 0xd9, 0x79, 0x17, 0xfd, 0xd1, 0xb4, 0x4a, 0xbb, 0xbc, 0xdb, 0x9a, 0x60, 0x42,
	0x6c, 0x30, 0xf5, 0x2b, 0x9d, 0xae, 0x02, 0xc4, 0x64, 0xaa, 0x5e, 0xb8, 0xcf, 0x61, 0xd5, 0xa3,
	0x11, 0x25, 0xfc, 0x1d, 0xdb, 0xa6, 0x5f, 0x41, 0x13, 0xdb, 0x60, 0x1c, 0xb5, 0x04, 0xc9, 0x23,
	0xf8, 0x04, 0x16, 0x4c, 0x76, 0x10, 0x05, 0x57, 0x3b, 0x8d, 0x1b, 0xd1, 0xb5, 0xcd, 0xcc, 0x8f,
	0x96, 0xe1, 0xcd, 0xa7, 0xa5, 0x15, 0xda, 0xe1, 0x21, 0x8a, 0xc7, 0x69, 0x42, 0xe0, 0xd5, 0x34,
	0xda, 0x6f, 0x7b, 0xd0, 0x0c, 0x34, 0x06, 0x4b, 0x8f, 0x46, 0x29, 0x05, 0xe7, 0x76, 0x9f, 0xde,
	0xb6, 0xd5, 0x88, 0x24, 0xef, 0x41, 0x30, 0x0c, 0x70, 0x7f, 0xa9, 0x36, 0x7c, 0x41, 0x06, 0x18,
	0xa3, 0xe2, 0x7e, 0x5b, 0x0c, 0xf5, 0x36, 0x58, 0x15, 0x18, 0xf7, 0x2f, 0x0d, 0xaf, 0x09, 0x5e,
	0x60, 0xdc, 0x4a, 0x73, 0x8f, 0x61, 0xa5, 0x6d, 0x2b, 0xca, 0x39, 0x25, 0xb9, 0x3b, 0x77, 0xa0,
	0x2e, 0x70, 0x79, 0x7b, 0xa3, 0x2b, 0x89, 0x71, 0x9c, 0x4c, 0x32, 0x4f, 0x11, 0xca, 0x2b, 0xa4,
	0x7d, 0xc9, 0x42, 0xa2, 0x5f, 0x30, 0x4e, 0x93, 0xae, 0xad, 0x2b, 0xff, 0xc2, 0xde, 0x01, 0xf3,
	0x2c, 0x93, 0x37, 0xa5, 0x7e, 0xf9, 0xb8, 0xe7, 0xa2, 0xc4, 0xd4, 0xd3, 0x0f, 0x2d, 0x32, 0xeb,
	0x8a, 0xc3, 0xe9, 0x3a, 0xdb, 0xf0, 0x96, 0x73, 0x64, 0xde, 0xbc, 0x73, 0x2c, 0xcc, 0x2b, 0xa1,
	0x9a, 0x67, 0x87, 0x79, 0x54, 0xde, 0xd5, 0x65, 0x3f, 0x61, 0x70, 0xad, 0xbb, 0xba, 0xbe, 0xfa,
	0xc4, 0xb7, 0xd7, 0xd4, 0xf8, 0xdb, 0x0b, 0x23, 0xf6, 0x22, 0xed, 0x66, 0x24, 0x7c, 0x37, 0x2f,
	0xb9, 0xbf, 0x80, 0xa5, 0x0b, 0x4e, 0x4d, 0xf5, 0xb5, 0x3c, 0x87, 0x30, 0xcf, 0x34, 0xe4, 0x1d,
	0x1f, 0xea, 0xe6, 0x0c, 0x9b, 0x1a, 0x3d, 0x7e, 0x8f, 0xd6, 0x97, 0xb2, 0x11, 0x75, 0x40, 0x52,
	0xd9, 0x4a, 0xfd, 0x37, 0x12, 0x76, 0xf4, 0x42, 0xa8, 0xbe, 0x3d, 0x1e, 0x3e, 0x83, 0x66, 0x79,
	0x3c, 0xec, 0xf6, 0x8d, 0x37, 0x66, 0xbd, 0xc5, 0x62, 0x40, 0x3c, 0x46, 0xa8, 0x7b, 0x0e, 0x9b,
	0x46, 0x43, 0xec, 0x3c, 0xd0, 0x08, 0xfd, 0x0e, 0xc1, 0x8d, 0x4b, 0x3d, 0x73, 0x59, 0xcd, 0xd9,
	0x5c, 0x87, 0xbb, 0xbb, 0x7a, 0xf7, 0x4f, 0x15, 0x6d, 0x54, 0x24, 0x2e, 0x3d, 0x1a, 0xbe, 0xcf,
	0xa1, 0x8b, 0x70, 0xad, 0xde, 0xd3, 0xd7, 0xbd, 0xf7, 0xf8, 0xf0, 0x1a, 0x56, 0x8c, 0xee, 0xad,
	0x44, 0x94, 0x9e, 0x2b, 0xde, 0x47, 0xfd, 0x7b, 0xec, 0x55, 0x6c, 0xe9, 0x61, 0x4b, 0x3d, 0xa0,
	0x1f, 0x61, 0xcb, 0x76, 0x1e, 0x9a, 0x3f, 0x4f, 0xf7, 0x93, 0xa4, 0x18, 0x2a, 0xde, 0x63, 0xcf,
	0xfd, 0x4f, 0xbe, 0x7d, 0x74, 0xd7, 0x03, 0x7e, 0xeb, 0x3b, 0xad, 0x4a, 0xab, 0xda, 0xaa, 0x75,
	0x1a, 0xea, 0xa9, 0xfc, 0xab, 0xff, 0x04, 0x00, 0x00, 0xff, 0xff, 0xfe, 0xda, 0x9a, 0x19, 0x0c,
	0x18, 0x00, 0x00,
}
