// Code generated by protoc-gen-go.
// source: data_battle.proto
// DO NOT EDIT!

package protos

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Ignoring public import of ContactSettings from data_player.proto

// Ignoring public import of Currency from data_player.proto

// Ignoring public import of DailyBonus from data_player.proto

// Ignoring public import of EquippedBadge from data_player.proto

// Ignoring public import of PlayerAvatar from data_player.proto

// Ignoring public import of PlayerCamera from data_player.proto

// Ignoring public import of PlayerCurrency from data_player.proto

// Ignoring public import of PlayerPublicProfile from data_player.proto

// Ignoring public import of PlayerStats from data_player.proto

// Ignoring public import of AssetDigestEntry from data.proto

// Ignoring public import of DownloadUrlEntry from data.proto

// Ignoring public import of PlayerBadge from data.proto

// Ignoring public import of PlayerData from data.proto

// Ignoring public import of PokedexEntry from data.proto

// Ignoring public import of PokemonData from data.proto

// Ignoring public import of GymMembership from data_gym.proto

// Ignoring public import of GymState from data_gym.proto

type BattleActionType int32

const (
	BattleActionType_ACTION_UNSET          BattleActionType = 0
	BattleActionType_ACTION_ATTACK         BattleActionType = 1
	BattleActionType_ACTION_DODGE          BattleActionType = 2
	BattleActionType_ACTION_SPECIAL_ATTACK BattleActionType = 3
	BattleActionType_ACTION_SWAP_POKEMON   BattleActionType = 4
	BattleActionType_ACTION_FAINT          BattleActionType = 5
	BattleActionType_ACTION_PLAYER_JOIN    BattleActionType = 6
	BattleActionType_ACTION_PLAYER_QUIT    BattleActionType = 7
	BattleActionType_ACTION_VICTORY        BattleActionType = 8
	BattleActionType_ACTION_DEFEAT         BattleActionType = 9
	BattleActionType_ACTION_TIMED_OUT      BattleActionType = 10
)

var BattleActionType_name = map[int32]string{
	0:  "ACTION_UNSET",
	1:  "ACTION_ATTACK",
	2:  "ACTION_DODGE",
	3:  "ACTION_SPECIAL_ATTACK",
	4:  "ACTION_SWAP_POKEMON",
	5:  "ACTION_FAINT",
	6:  "ACTION_PLAYER_JOIN",
	7:  "ACTION_PLAYER_QUIT",
	8:  "ACTION_VICTORY",
	9:  "ACTION_DEFEAT",
	10: "ACTION_TIMED_OUT",
}
var BattleActionType_value = map[string]int32{
	"ACTION_UNSET":          0,
	"ACTION_ATTACK":         1,
	"ACTION_DODGE":          2,
	"ACTION_SPECIAL_ATTACK": 3,
	"ACTION_SWAP_POKEMON":   4,
	"ACTION_FAINT":          5,
	"ACTION_PLAYER_JOIN":    6,
	"ACTION_PLAYER_QUIT":    7,
	"ACTION_VICTORY":        8,
	"ACTION_DEFEAT":         9,
	"ACTION_TIMED_OUT":      10,
}

func (x BattleActionType) String() string {
	return proto.EnumName(BattleActionType_name, int32(x))
}
func (BattleActionType) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

type BattleState int32

const (
	BattleState_STATE_UNSET BattleState = 0
	BattleState_ACTIVE      BattleState = 1
	BattleState_VICTORY     BattleState = 2
	BattleState_DEFEATED    BattleState = 3
	BattleState_TIMED_OUT   BattleState = 4
)

var BattleState_name = map[int32]string{
	0: "STATE_UNSET",
	1: "ACTIVE",
	2: "VICTORY",
	3: "DEFEATED",
	4: "TIMED_OUT",
}
var BattleState_value = map[string]int32{
	"STATE_UNSET": 0,
	"ACTIVE":      1,
	"VICTORY":     2,
	"DEFEATED":    3,
	"TIMED_OUT":   4,
}

func (x BattleState) String() string {
	return proto.EnumName(BattleState_name, int32(x))
}
func (BattleState) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

type BattleType int32

const (
	BattleType_BATTLE_TYPE_UNSET BattleType = 0
	BattleType_NORMAL            BattleType = 1
	BattleType_TRAINING          BattleType = 2
)

var BattleType_name = map[int32]string{
	0: "BATTLE_TYPE_UNSET",
	1: "NORMAL",
	2: "TRAINING",
}
var BattleType_value = map[string]int32{
	"BATTLE_TYPE_UNSET": 0,
	"NORMAL":            1,
	"TRAINING":          2,
}

func (x BattleType) String() string {
	return proto.EnumName(BattleType_name, int32(x))
}
func (BattleType) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

type BattleAction struct {
	Type                           BattleActionType   `protobuf:"varint,1,opt,name=Type,json=type,enum=POGOProtos.Data.Battle.BattleActionType" json:"Type,omitempty"`
	ActionStartMs                  int64              `protobuf:"varint,2,opt,name=action_start_ms,json=actionStartMs" json:"action_start_ms,omitempty"`
	DurationMs                     int32              `protobuf:"varint,3,opt,name=duration_ms,json=durationMs" json:"duration_ms,omitempty"`
	EnergyDelta                    int32              `protobuf:"varint,5,opt,name=energy_delta,json=energyDelta" json:"energy_delta,omitempty"`
	AttackerIndex                  int32              `protobuf:"varint,6,opt,name=attacker_index,json=attackerIndex" json:"attacker_index,omitempty"`
	TargetIndex                    int32              `protobuf:"varint,7,opt,name=target_index,json=targetIndex" json:"target_index,omitempty"`
	ActivePokemonId                uint64             `protobuf:"varint,8,opt,name=active_pokemon_id,json=activePokemonId" json:"active_pokemon_id,omitempty"`
	PlayerJoined                   *BattleParticipant `protobuf:"bytes,9,opt,name=player_joined,json=playerJoined" json:"player_joined,omitempty"`
	BattleResults                  *BattleResults     `protobuf:"bytes,10,opt,name=battle_results,json=battleResults" json:"battle_results,omitempty"`
	DamageWindowsStartTimestampMss int64              `protobuf:"varint,11,opt,name=damage_windows_start_timestamp_mss,json=damageWindowsStartTimestampMss" json:"damage_windows_start_timestamp_mss,omitempty"`
	DamageWindowsEndTimestampMss   int64              `protobuf:"varint,12,opt,name=damage_windows_end_timestamp_mss,json=damageWindowsEndTimestampMss" json:"damage_windows_end_timestamp_mss,omitempty"`
	PlayerLeft                     *BattleParticipant `protobuf:"bytes,13,opt,name=player_left,json=playerLeft" json:"player_left,omitempty"`
	TargetPokemonId                uint64             `protobuf:"varint,14,opt,name=target_pokemon_id,json=targetPokemonId" json:"target_pokemon_id,omitempty"`
}

func (m *BattleAction) Reset()                    { *m = BattleAction{} }
func (m *BattleAction) String() string            { return proto.CompactTextString(m) }
func (*BattleAction) ProtoMessage()               {}
func (*BattleAction) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *BattleAction) GetPlayerJoined() *BattleParticipant {
	if m != nil {
		return m.PlayerJoined
	}
	return nil
}

func (m *BattleAction) GetBattleResults() *BattleResults {
	if m != nil {
		return m.BattleResults
	}
	return nil
}

func (m *BattleAction) GetPlayerLeft() *BattleParticipant {
	if m != nil {
		return m.PlayerLeft
	}
	return nil
}

type BattleLog struct {
	State                  BattleState     `protobuf:"varint,1,opt,name=state,enum=POGOProtos.Data.Battle.BattleState" json:"state,omitempty"`
	BattleType             BattleType      `protobuf:"varint,2,opt,name=battle_type,json=battleType,enum=POGOProtos.Data.Battle.BattleType" json:"battle_type,omitempty"`
	ServerMs               int64           `protobuf:"varint,3,opt,name=server_ms,json=serverMs" json:"server_ms,omitempty"`
	BattleActions          []*BattleAction `protobuf:"bytes,4,rep,name=battle_actions,json=battleActions" json:"battle_actions,omitempty"`
	BattleStartTimestampMs int64           `protobuf:"varint,5,opt,name=battle_start_timestamp_ms,json=battleStartTimestampMs" json:"battle_start_timestamp_ms,omitempty"`
	BattleEndTimestampMs   int64           `protobuf:"varint,6,opt,name=battle_end_timestamp_ms,json=battleEndTimestampMs" json:"battle_end_timestamp_ms,omitempty"`
}

func (m *BattleLog) Reset()                    { *m = BattleLog{} }
func (m *BattleLog) String() string            { return proto.CompactTextString(m) }
func (*BattleLog) ProtoMessage()               {}
func (*BattleLog) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *BattleLog) GetBattleActions() []*BattleAction {
	if m != nil {
		return m.BattleActions
	}
	return nil
}

type BattleParticipant struct {
	ActivePokemon        *BattlePokemonInfo   `protobuf:"bytes,1,opt,name=active_pokemon,json=activePokemon" json:"active_pokemon,omitempty"`
	TrainerPublicProfile *PlayerPublicProfile `protobuf:"bytes,2,opt,name=trainer_public_profile,json=trainerPublicProfile" json:"trainer_public_profile,omitempty"`
	ReversePokemon       []*BattlePokemonInfo `protobuf:"bytes,3,rep,name=reverse_pokemon,json=reversePokemon" json:"reverse_pokemon,omitempty"`
	DefeatedPokemon      []*BattlePokemonInfo `protobuf:"bytes,4,rep,name=defeated_pokemon,json=defeatedPokemon" json:"defeated_pokemon,omitempty"`
}

func (m *BattleParticipant) Reset()                    { *m = BattleParticipant{} }
func (m *BattleParticipant) String() string            { return proto.CompactTextString(m) }
func (*BattleParticipant) ProtoMessage()               {}
func (*BattleParticipant) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *BattleParticipant) GetActivePokemon() *BattlePokemonInfo {
	if m != nil {
		return m.ActivePokemon
	}
	return nil
}

func (m *BattleParticipant) GetTrainerPublicProfile() *PlayerPublicProfile {
	if m != nil {
		return m.TrainerPublicProfile
	}
	return nil
}

func (m *BattleParticipant) GetReversePokemon() []*BattlePokemonInfo {
	if m != nil {
		return m.ReversePokemon
	}
	return nil
}

func (m *BattleParticipant) GetDefeatedPokemon() []*BattlePokemonInfo {
	if m != nil {
		return m.DefeatedPokemon
	}
	return nil
}

type BattlePokemonInfo struct {
	PokemonData   *PokemonData `protobuf:"bytes,1,opt,name=pokemon_data,json=pokemonData" json:"pokemon_data,omitempty"`
	CurrentHealth int32        `protobuf:"varint,2,opt,name=current_health,json=currentHealth" json:"current_health,omitempty"`
	CurrentEnergy int32        `protobuf:"varint,3,opt,name=current_energy,json=currentEnergy" json:"current_energy,omitempty"`
}

func (m *BattlePokemonInfo) Reset()                    { *m = BattlePokemonInfo{} }
func (m *BattlePokemonInfo) String() string            { return proto.CompactTextString(m) }
func (*BattlePokemonInfo) ProtoMessage()               {}
func (*BattlePokemonInfo) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *BattlePokemonInfo) GetPokemonData() *PokemonData {
	if m != nil {
		return m.PokemonData
	}
	return nil
}

type BattleResults struct {
	GymState                *GymState            `protobuf:"bytes,1,opt,name=gym_state,json=gymState" json:"gym_state,omitempty"`
	Attackers               []*BattleParticipant `protobuf:"bytes,2,rep,name=attackers" json:"attackers,omitempty"`
	PlayerExperienceAwarded []int32              `protobuf:"varint,3,rep,name=player_experience_awarded,json=playerExperienceAwarded" json:"player_experience_awarded,omitempty"`
	NextDefenderPokemonId   int64                `protobuf:"varint,4,opt,name=next_defender_pokemon_id,json=nextDefenderPokemonId" json:"next_defender_pokemon_id,omitempty"`
	GymPointsDelta          int32                `protobuf:"varint,5,opt,name=gym_points_delta,json=gymPointsDelta" json:"gym_points_delta,omitempty"`
}

func (m *BattleResults) Reset()                    { *m = BattleResults{} }
func (m *BattleResults) String() string            { return proto.CompactTextString(m) }
func (*BattleResults) ProtoMessage()               {}
func (*BattleResults) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func (m *BattleResults) GetGymState() *GymState {
	if m != nil {
		return m.GymState
	}
	return nil
}

func (m *BattleResults) GetAttackers() []*BattleParticipant {
	if m != nil {
		return m.Attackers
	}
	return nil
}

func init() {
	proto.RegisterType((*BattleAction)(nil), "POGOProtos.Data.Battle.BattleAction")
	proto.RegisterType((*BattleLog)(nil), "POGOProtos.Data.Battle.BattleLog")
	proto.RegisterType((*BattleParticipant)(nil), "POGOProtos.Data.Battle.BattleParticipant")
	proto.RegisterType((*BattlePokemonInfo)(nil), "POGOProtos.Data.Battle.BattlePokemonInfo")
	proto.RegisterType((*BattleResults)(nil), "POGOProtos.Data.Battle.BattleResults")
	proto.RegisterEnum("POGOProtos.Data.Battle.BattleActionType", BattleActionType_name, BattleActionType_value)
	proto.RegisterEnum("POGOProtos.Data.Battle.BattleState", BattleState_name, BattleState_value)
	proto.RegisterEnum("POGOProtos.Data.Battle.BattleType", BattleType_name, BattleType_value)
}

func init() { proto.RegisterFile("data_battle.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 1075 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x94, 0x56, 0xdb, 0x52, 0xe3, 0x46,
	0x13, 0x5e, 0x9f, 0xc0, 0x6e, 0xd9, 0x46, 0xcc, 0xcf, 0x41, 0xec, 0xbf, 0x49, 0x88, 0x93, 0x4d,
	0x11, 0x52, 0xc5, 0x05, 0xa9, 0x54, 0x2a, 0xa9, 0xa4, 0x52, 0x5a, 0x2c, 0x88, 0xc1, 0x58, 0x8a,
	0x10, 0xbb, 0x45, 0x6e, 0x54, 0xb2, 0x35, 0x78, 0x95, 0xb5, 0x65, 0x95, 0x34, 0x2c, 0xf0, 0x3a,
	0x79, 0x85, 0xbc, 0x4c, 0xde, 0x20, 0xf7, 0xb9, 0xce, 0x45, 0x7a, 0x0e, 0xf2, 0x01, 0xa7, 0x48,
	0xb8, 0x00, 0xa4, 0xaf, 0xbf, 0xfe, 0x34, 0xd3, 0xdf, 0x74, 0x0f, 0xb0, 0x1e, 0x06, 0x2c, 0xf0,
	0xfb, 0x01, 0x63, 0x23, 0x7a, 0x90, 0xa4, 0x13, 0x36, 0x21, 0x5b, 0x8e, 0x7d, 0x62, 0x3b, 0xfc,
	0x31, 0x3b, 0x68, 0x63, 0xf4, 0xe0, 0x95, 0x88, 0x3e, 0x97, 0xd4, 0x64, 0x14, 0xdc, 0xd3, 0x54,
	0x52, 0x9f, 0x03, 0x87, 0xd4, 0x73, 0x53, 0x84, 0x87, 0xf7, 0x63, 0xf9, 0xde, 0xfa, 0xbd, 0x02,
	0x75, 0x99, 0x69, 0x0e, 0x58, 0x34, 0x89, 0xc9, 0x77, 0x50, 0xf6, 0xee, 0x13, 0x6a, 0x14, 0x76,
	0x0b, 0x7b, 0xcd, 0xc3, 0xbd, 0x83, 0x7f, 0xfe, 0xcc, 0xc1, 0x7c, 0x0e, 0xe7, 0xbb, 0x65, 0x86,
	0xbf, 0xc9, 0x67, 0xb0, 0x16, 0x08, 0xcc, 0xcf, 0x58, 0x90, 0x32, 0x7f, 0x9c, 0x19, 0x45, 0x14,
	0x2a, 0xb9, 0x0d, 0x09, 0x5f, 0x70, 0xf4, 0x3c, 0x23, 0x1f, 0x81, 0x16, 0xde, 0xa4, 0x81, 0x60,
	0x22, 0xa7, 0x84, 0x9c, 0x8a, 0x0b, 0x39, 0x84, 0x84, 0x8f, 0xa1, 0x4e, 0x63, 0x9a, 0x0e, 0xef,
	0xfd, 0x90, 0x8e, 0x58, 0x60, 0x54, 0x04, 0x43, 0x93, 0x58, 0x9b, 0x43, 0xe4, 0x25, 0x34, 0x71,
	0x11, 0xc1, 0xe0, 0x1d, 0x4d, 0xfd, 0x28, 0x0e, 0xe9, 0x9d, 0xb1, 0x22, 0x48, 0x8d, 0x1c, 0xed,
	0x70, 0x90, 0x2b, 0xe1, 0x47, 0x87, 0x94, 0x29, 0xd2, 0xaa, 0x54, 0x92, 0x98, 0xa4, 0xec, 0xc3,
	0x3a, 0x5f, 0xde, 0x7b, 0xea, 0x27, 0x93, 0x77, 0x74, 0x8c, 0x6b, 0x8a, 0x42, 0xa3, 0x8a, 0xbc,
	0xb2, 0xbb, 0x26, 0x03, 0x8e, 0xc4, 0x3b, 0x21, 0xe9, 0x41, 0x43, 0x16, 0xd7, 0xff, 0x65, 0x12,
	0xc5, 0x34, 0x34, 0x6a, 0xc8, 0xd3, 0x0e, 0x3f, 0x7f, 0xbc, 0x50, 0x0e, 0x6e, 0x3b, 0x1a, 0x44,
	0x49, 0x10, 0x33, 0xb7, 0x2e, 0xf3, 0x4f, 0x45, 0x3a, 0xe9, 0x42, 0x53, 0xfa, 0xea, 0xa7, 0x34,
	0xbb, 0x19, 0xb1, 0xcc, 0x00, 0x21, 0xf8, 0xf2, 0x71, 0x41, 0x57, 0x92, 0xdd, 0x46, 0x7f, 0xfe,
	0x95, 0x9c, 0x42, 0x2b, 0x0c, 0xc6, 0xc1, 0x90, 0xfa, 0xb7, 0xb8, 0xdb, 0xc9, 0x6d, 0xa6, 0x7c,
	0x60, 0xd1, 0x98, 0xe2, 0xd3, 0x38, 0xc1, 0x6a, 0x67, 0x86, 0x26, 0x2c, 0xf9, 0x50, 0x32, 0xdf,
	0x48, 0xa2, 0x70, 0xc6, 0xcb, 0x69, 0xe7, 0x59, 0x46, 0x8e, 0x61, 0xf7, 0x81, 0x16, 0x8d, 0xc3,
	0x07, 0x4a, 0x75, 0xa1, 0xf4, 0x62, 0x41, 0xc9, 0x8a, 0xc3, 0x05, 0x9d, 0x53, 0xd0, 0x54, 0xc5,
	0x46, 0xf4, 0x9a, 0x19, 0x8d, 0xa7, 0xd6, 0x0b, 0x64, 0x76, 0x17, 0x93, 0xb9, 0x53, 0xca, 0xcc,
	0x39, 0xa7, 0x9a, 0xd2, 0x29, 0x19, 0x98, 0x3a, 0xd5, 0xfa, 0xa3, 0x08, 0x35, 0xa9, 0xd6, 0x9d,
	0x0c, 0xc9, 0x37, 0x50, 0xc1, 0x15, 0xb1, 0xfc, 0x60, 0x7f, 0xf2, 0xf8, 0xf7, 0x2f, 0x38, 0xd5,
	0x95, 0x19, 0xe4, 0x08, 0x34, 0x65, 0x11, 0x3f, 0xe3, 0xe2, 0x40, 0x37, 0x0f, 0x5b, 0x8f, 0x0b,
	0x88, 0x9e, 0x80, 0xfe, 0xf4, 0x99, 0xfc, 0x1f, 0x6a, 0x19, 0x4d, 0xdf, 0x63, 0x15, 0xd4, 0x79,
	0x2f, 0xb9, 0x55, 0x09, 0xe0, 0x69, 0x3f, 0x9b, 0x1e, 0x02, 0xd9, 0x26, 0x99, 0x51, 0xde, 0x2d,
	0x61, 0x95, 0x3e, 0xfd, 0x2f, 0xed, 0x97, 0x9f, 0x01, 0xf9, 0x96, 0xe1, 0x4e, 0x77, 0x94, 0xd8,
	0xb2, 0xf7, 0xa2, 0x8f, 0x4a, 0xee, 0x56, 0x3f, 0xdf, 0xe5, 0x82, 0xe7, 0xe4, 0x2b, 0xd8, 0x56,
	0xa9, 0x0f, 0xad, 0x16, 0xbd, 0x55, 0x72, 0x37, 0x64, 0x78, 0xd1, 0xe2, 0xd6, 0x9f, 0x45, 0x58,
	0x5f, 0xf2, 0x8d, 0x38, 0xd8, 0x9f, 0x0b, 0x5d, 0x25, 0x4a, 0xff, 0xef, 0xd6, 0x2b, 0x03, 0xe3,
	0xeb, 0x89, 0x9c, 0x1a, 0xd3, 0xee, 0x23, 0x01, 0x6c, 0xb1, 0x34, 0xc0, 0xb6, 0x49, 0xfd, 0xe4,
	0xa6, 0x3f, 0x8a, 0x06, 0x3e, 0x0e, 0xb1, 0xeb, 0x68, 0x24, 0x3d, 0xd1, 0x0e, 0xbf, 0x58, 0x52,
	0x76, 0xe4, 0x1c, 0x94, 0x7f, 0x1c, 0x91, 0xe3, 0xc8, 0x14, 0x77, 0x43, 0x49, 0x2d, 0xa0, 0xc4,
	0x85, 0xb5, 0x94, 0xa2, 0x29, 0xd9, 0x6c, 0xd5, 0x25, 0x61, 0xc5, 0x13, 0x56, 0xdd, 0x54, 0x0a,
	0xf9, 0xb2, 0x3d, 0xd0, 0x43, 0x7a, 0x4d, 0xf1, 0x28, 0x85, 0x53, 0xd1, 0xf2, 0x53, 0x45, 0xd7,
	0x72, 0x09, 0x05, 0xb6, 0x7e, 0x2d, 0x4c, 0x8b, 0x3e, 0xa3, 0x91, 0x1f, 0xa0, 0x9e, 0x77, 0x06,
	0x9f, 0xf4, 0xaa, 0xe4, 0x2f, 0x96, 0x0b, 0x23, 0x49, 0xfc, 0xd9, 0xd5, 0x92, 0xd9, 0x0b, 0x9f,
	0xaa, 0x83, 0x9b, 0x34, 0xa5, 0x31, 0xf3, 0xdf, 0xd2, 0x60, 0xc4, 0xde, 0x8a, 0xda, 0xe2, 0x54,
	0x55, 0xe8, 0x8f, 0x02, 0x9c, 0xa7, 0xc9, 0x99, 0xac, 0x66, 0x78, 0x4e, 0xb3, 0x04, 0xd8, 0xfa,
	0xad, 0x08, 0x8d, 0x85, 0x81, 0x45, 0xbe, 0x85, 0x1a, 0xde, 0x3e, 0xfe, 0xac, 0x17, 0xb5, 0xc3,
	0x0f, 0x96, 0x56, 0x77, 0x82, 0xf7, 0x13, 0xfe, 0xc8, 0x2e, 0xac, 0x0e, 0xd5, 0x13, 0x39, 0x81,
	0x5a, 0x3e, 0xdb, 0xf9, 0xbd, 0x52, 0x7a, 0xda, 0x1c, 0x99, 0xe5, 0xe2, 0x22, 0x76, 0xd4, 0x48,
	0xa2, 0x77, 0x09, 0x4d, 0x23, 0x1a, 0x0f, 0xb0, 0xf5, 0x6e, 0x83, 0x34, 0xc4, 0x81, 0xce, 0xfd,
	0xae, 0xb8, 0xdb, 0x92, 0x60, 0x4d, 0xe3, 0xa6, 0x0c, 0x93, 0xaf, 0xc1, 0x88, 0xe9, 0x1d, 0xf3,
	0xb9, 0x1f, 0x78, 0x7b, 0xa4, 0xf3, 0x93, 0xa8, 0x2c, 0x9a, 0x64, 0x93, 0xc7, 0xdb, 0x2a, 0x3c,
	0xbb, 0x39, 0xf6, 0x40, 0xe7, 0x3b, 0x4f, 0x70, 0xee, 0xb3, 0x6c, 0xe1, 0x5a, 0x6b, 0x22, 0xee,
	0x08, 0x58, 0xdc, 0x6c, 0xfb, 0x7f, 0x15, 0x40, 0x7f, 0x78, 0xc1, 0x12, 0x1d, 0xea, 0xe6, 0x91,
	0xd7, 0xb1, 0x7b, 0xfe, 0x65, 0xef, 0xc2, 0xf2, 0xf4, 0x67, 0x64, 0x1d, 0x1a, 0x0a, 0x31, 0x3d,
	0xcf, 0x3c, 0x3a, 0xd3, 0x0b, 0x73, 0xa4, 0xb6, 0xdd, 0x3e, 0xb1, 0xf4, 0x22, 0xd9, 0x81, 0x4d,
	0x85, 0x5c, 0x38, 0xd6, 0x51, 0xc7, 0xec, 0xe6, 0xe4, 0x12, 0xd9, 0x86, 0xff, 0xe5, 0xa1, 0x37,
	0xa6, 0xe3, 0x3b, 0xf6, 0x99, 0x75, 0x6e, 0xf7, 0xf4, 0xf2, 0x9c, 0xca, 0xb1, 0xd9, 0xe9, 0x79,
	0x7a, 0x85, 0x6c, 0x01, 0x51, 0x88, 0xd3, 0x35, 0xaf, 0x2c, 0xd7, 0x3f, 0xb5, 0x3b, 0x3d, 0x7d,
	0x65, 0x19, 0xff, 0xe9, 0xb2, 0xe3, 0xe9, 0xab, 0x84, 0x40, 0x53, 0xe1, 0xaf, 0x3b, 0x47, 0x9e,
	0xed, 0x5e, 0xe9, 0xd5, 0xb9, 0xe5, 0xb6, 0xad, 0x63, 0xcb, 0xf4, 0xf4, 0x1a, 0xd9, 0x00, 0x5d,
	0x41, 0x5e, 0xe7, 0xdc, 0x6a, 0xfb, 0xf6, 0xa5, 0xa7, 0xc3, 0xbe, 0x07, 0xda, 0xdc, 0x14, 0x26,
	0x6b, 0xa0, 0x5d, 0x78, 0xa6, 0x67, 0x4d, 0xf7, 0x0d, 0xb0, 0xc2, 0xb3, 0x5e, 0x5b, 0xb8, 0x61,
	0x0d, 0x56, 0xf3, 0x2f, 0x14, 0x49, 0x1d, 0xaa, 0x52, 0xda, 0x6a, 0xe3, 0xf6, 0x1a, 0x50, 0x9b,
	0xa9, 0x96, 0xf7, 0xbf, 0x07, 0x98, 0x8d, 0x66, 0xb2, 0x89, 0xcd, 0x83, 0x85, 0xe8, 0x5a, 0xbe,
	0x77, 0xe5, 0x2c, 0x48, 0xf7, 0x6c, 0xf7, 0xdc, 0xec, 0xa2, 0x34, 0xaa, 0x79, 0x2e, 0xee, 0xbf,
	0xd3, 0x3b, 0xd1, 0x8b, 0xaf, 0xaa, 0x3f, 0xaf, 0x88, 0xff, 0x98, 0x32, 0xe7, 0x99, 0x53, 0x70,
	0x8a, 0x7d, 0xf9, 0xf6, 0xe5, 0xdf, 0x01, 0x00, 0x00, 0xff, 0xff, 0xbd, 0xe6, 0x9a, 0xd5, 0x9b,
	0x09, 0x00, 0x00,
}
