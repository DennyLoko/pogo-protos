// Code generated by protoc-gen-go.
// source: maps/maps.proto
// DO NOT EDIT!

/*
Package maps is a generated protocol buffer package.

It is generated from these files:
	maps/maps.proto

It has these top-level messages:
	MapCell
	SpawnPoint
*/
package maps

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import POGOProtos_Map_Fort "github.com/zeeraw/pogo-protos/map_fort"
import POGOProtos_Map_Pokemon "github.com/zeeraw/pogo-protos/map_pokemon"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// FortData from public import map_fort/map_fort.proto
type FortData POGOProtos_Map_Fort.FortData

func (m *FortData) Reset()         { (*POGOProtos_Map_Fort.FortData)(m).Reset() }
func (m *FortData) String() string { return (*POGOProtos_Map_Fort.FortData)(m).String() }
func (*FortData) ProtoMessage()    {}
func (m *FortData) GetLureInfo() *FortLureInfo {
	return (*FortLureInfo)((*POGOProtos_Map_Fort.FortData)(m).GetLureInfo())
}

// FortLureInfo from public import map_fort/map_fort.proto
type FortLureInfo POGOProtos_Map_Fort.FortLureInfo

func (m *FortLureInfo) Reset()         { (*POGOProtos_Map_Fort.FortLureInfo)(m).Reset() }
func (m *FortLureInfo) String() string { return (*POGOProtos_Map_Fort.FortLureInfo)(m).String() }
func (*FortLureInfo) ProtoMessage()    {}

// FortModifier from public import map_fort/map_fort.proto
type FortModifier POGOProtos_Map_Fort.FortModifier

func (m *FortModifier) Reset()         { (*POGOProtos_Map_Fort.FortModifier)(m).Reset() }
func (m *FortModifier) String() string { return (*POGOProtos_Map_Fort.FortModifier)(m).String() }
func (*FortModifier) ProtoMessage()    {}

// FortSummary from public import map_fort/map_fort.proto
type FortSummary POGOProtos_Map_Fort.FortSummary

func (m *FortSummary) Reset()         { (*POGOProtos_Map_Fort.FortSummary)(m).Reset() }
func (m *FortSummary) String() string { return (*POGOProtos_Map_Fort.FortSummary)(m).String() }
func (*FortSummary) ProtoMessage()    {}

// FortRenderingType from public import map_fort/map_fort.proto
type FortRenderingType POGOProtos_Map_Fort.FortRenderingType

var FortRenderingType_name = POGOProtos_Map_Fort.FortRenderingType_name
var FortRenderingType_value = POGOProtos_Map_Fort.FortRenderingType_value

func (x FortRenderingType) String() string { return (POGOProtos_Map_Fort.FortRenderingType)(x).String() }

const FortRenderingType_DEFAULT = FortRenderingType(POGOProtos_Map_Fort.FortRenderingType_DEFAULT)
const FortRenderingType_INTERNAL_TEST = FortRenderingType(POGOProtos_Map_Fort.FortRenderingType_INTERNAL_TEST)

// FortSponsor from public import map_fort/map_fort.proto
type FortSponsor POGOProtos_Map_Fort.FortSponsor

var FortSponsor_name = POGOProtos_Map_Fort.FortSponsor_name
var FortSponsor_value = POGOProtos_Map_Fort.FortSponsor_value

func (x FortSponsor) String() string { return (POGOProtos_Map_Fort.FortSponsor)(x).String() }

const FortSponsor_UNSET_SPONSOR = FortSponsor(POGOProtos_Map_Fort.FortSponsor_UNSET_SPONSOR)
const FortSponsor_MCDONALDS = FortSponsor(POGOProtos_Map_Fort.FortSponsor_MCDONALDS)
const FortSponsor_POKEMON_STORE = FortSponsor(POGOProtos_Map_Fort.FortSponsor_POKEMON_STORE)

// FortType from public import map_fort/map_fort.proto
type FortType POGOProtos_Map_Fort.FortType

var FortType_name = POGOProtos_Map_Fort.FortType_name
var FortType_value = POGOProtos_Map_Fort.FortType_value

func (x FortType) String() string { return (POGOProtos_Map_Fort.FortType)(x).String() }

const FortType_GYM = FortType(POGOProtos_Map_Fort.FortType_GYM)
const FortType_CHECKPOINT = FortType(POGOProtos_Map_Fort.FortType_CHECKPOINT)

// MapPokemon from public import map_pokemon/map_pokemon.proto
type MapPokemon POGOProtos_Map_Pokemon.MapPokemon

func (m *MapPokemon) Reset()         { (*POGOProtos_Map_Pokemon.MapPokemon)(m).Reset() }
func (m *MapPokemon) String() string { return (*POGOProtos_Map_Pokemon.MapPokemon)(m).String() }
func (*MapPokemon) ProtoMessage()    {}

// NearbyPokemon from public import map_pokemon/map_pokemon.proto
type NearbyPokemon POGOProtos_Map_Pokemon.NearbyPokemon

func (m *NearbyPokemon) Reset()         { (*POGOProtos_Map_Pokemon.NearbyPokemon)(m).Reset() }
func (m *NearbyPokemon) String() string { return (*POGOProtos_Map_Pokemon.NearbyPokemon)(m).String() }
func (*NearbyPokemon) ProtoMessage()    {}

// WildPokemon from public import map_pokemon/map_pokemon.proto
type WildPokemon POGOProtos_Map_Pokemon.WildPokemon

func (m *WildPokemon) Reset()         { (*POGOProtos_Map_Pokemon.WildPokemon)(m).Reset() }
func (m *WildPokemon) String() string { return (*POGOProtos_Map_Pokemon.WildPokemon)(m).String() }
func (*WildPokemon) ProtoMessage()    {}

type MapObjectsStatus int32

const (
	MapObjectsStatus_UNSET_STATUS   MapObjectsStatus = 0
	MapObjectsStatus_SUCCESS        MapObjectsStatus = 1
	MapObjectsStatus_LOCATION_UNSET MapObjectsStatus = 2
)

var MapObjectsStatus_name = map[int32]string{
	0: "UNSET_STATUS",
	1: "SUCCESS",
	2: "LOCATION_UNSET",
}
var MapObjectsStatus_value = map[string]int32{
	"UNSET_STATUS":   0,
	"SUCCESS":        1,
	"LOCATION_UNSET": 2,
}

func (x MapObjectsStatus) String() string {
	return proto.EnumName(MapObjectsStatus_name, int32(x))
}
func (MapObjectsStatus) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type MapCell struct {
	// S2 geographic area that the cell covers (http://s2map.com/) (https://code.google.com/archive/p/s2-geometry-library/)
	S2CellId             uint64                             `protobuf:"varint,1,opt,name=s2_cell_id,json=s2CellId" json:"s2_cell_id,omitempty"`
	CurrentTimestampMs   int64                              `protobuf:"varint,2,opt,name=current_timestamp_ms,json=currentTimestampMs" json:"current_timestamp_ms,omitempty"`
	Forts                []*POGOProtos_Map_Fort.FortData    `protobuf:"bytes,3,rep,name=forts" json:"forts,omitempty"`
	SpawnPoints          []*SpawnPoint                      `protobuf:"bytes,4,rep,name=spawn_points,json=spawnPoints" json:"spawn_points,omitempty"`
	DeletedObjects       []string                           `protobuf:"bytes,6,rep,name=deleted_objects,json=deletedObjects" json:"deleted_objects,omitempty"`
	IsTruncatedList      bool                               `protobuf:"varint,7,opt,name=is_truncated_list,json=isTruncatedList" json:"is_truncated_list,omitempty"`
	FortSummaries        []*POGOProtos_Map_Fort.FortSummary `protobuf:"bytes,8,rep,name=fort_summaries,json=fortSummaries" json:"fort_summaries,omitempty"`
	DecimatedSpawnPoints []*SpawnPoint                      `protobuf:"bytes,9,rep,name=decimated_spawn_points,json=decimatedSpawnPoints" json:"decimated_spawn_points,omitempty"`
	// Pokemon within 2 steps or less.
	WildPokemons []*POGOProtos_Map_Pokemon.WildPokemon `protobuf:"bytes,5,rep,name=wild_pokemons,json=wildPokemons" json:"wild_pokemons,omitempty"`
	// Pokemon within 1 step or none.
	CatchablePokemons []*POGOProtos_Map_Pokemon.MapPokemon `protobuf:"bytes,10,rep,name=catchable_pokemons,json=catchablePokemons" json:"catchable_pokemons,omitempty"`
	// Pokemon farther away than 2 steps, but still in the area.
	NearbyPokemons []*POGOProtos_Map_Pokemon.NearbyPokemon `protobuf:"bytes,11,rep,name=nearby_pokemons,json=nearbyPokemons" json:"nearby_pokemons,omitempty"`
}

func (m *MapCell) Reset()                    { *m = MapCell{} }
func (m *MapCell) String() string            { return proto.CompactTextString(m) }
func (*MapCell) ProtoMessage()               {}
func (*MapCell) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *MapCell) GetForts() []*POGOProtos_Map_Fort.FortData {
	if m != nil {
		return m.Forts
	}
	return nil
}

func (m *MapCell) GetSpawnPoints() []*SpawnPoint {
	if m != nil {
		return m.SpawnPoints
	}
	return nil
}

func (m *MapCell) GetFortSummaries() []*POGOProtos_Map_Fort.FortSummary {
	if m != nil {
		return m.FortSummaries
	}
	return nil
}

func (m *MapCell) GetDecimatedSpawnPoints() []*SpawnPoint {
	if m != nil {
		return m.DecimatedSpawnPoints
	}
	return nil
}

func (m *MapCell) GetWildPokemons() []*POGOProtos_Map_Pokemon.WildPokemon {
	if m != nil {
		return m.WildPokemons
	}
	return nil
}

func (m *MapCell) GetCatchablePokemons() []*POGOProtos_Map_Pokemon.MapPokemon {
	if m != nil {
		return m.CatchablePokemons
	}
	return nil
}

func (m *MapCell) GetNearbyPokemons() []*POGOProtos_Map_Pokemon.NearbyPokemon {
	if m != nil {
		return m.NearbyPokemons
	}
	return nil
}

type SpawnPoint struct {
	Latitude  float64 `protobuf:"fixed64,2,opt,name=latitude" json:"latitude,omitempty"`
	Longitude float64 `protobuf:"fixed64,3,opt,name=longitude" json:"longitude,omitempty"`
}

func (m *SpawnPoint) Reset()                    { *m = SpawnPoint{} }
func (m *SpawnPoint) String() string            { return proto.CompactTextString(m) }
func (*SpawnPoint) ProtoMessage()               {}
func (*SpawnPoint) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func init() {
	proto.RegisterType((*MapCell)(nil), "POGOProtos.Map.MapCell")
	proto.RegisterType((*SpawnPoint)(nil), "POGOProtos.Map.SpawnPoint")
	proto.RegisterEnum("POGOProtos.Map.MapObjectsStatus", MapObjectsStatus_name, MapObjectsStatus_value)
}

func init() { proto.RegisterFile("maps/maps.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 507 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x84, 0x53, 0x5b, 0x6f, 0xda, 0x30,
	0x14, 0x2e, 0xe5, 0x7e, 0xa0, 0x40, 0xad, 0x6a, 0x8b, 0xd0, 0x2a, 0x21, 0xa6, 0x69, 0x55, 0x1f,
	0x60, 0xa2, 0xcf, 0x7b, 0xe8, 0x18, 0xed, 0x2a, 0xb5, 0x90, 0x25, 0x41, 0x93, 0xf6, 0x12, 0x99,
	0xc4, 0xdd, 0xbc, 0xe5, 0xa6, 0x1c, 0x23, 0xd4, 0xbf, 0xb4, 0x5f, 0x39, 0xdb, 0x90, 0x84, 0x56,
	0x42, 0x7d, 0x89, 0xce, 0x39, 0xdf, 0x25, 0xe7, 0x93, 0x6d, 0xe8, 0x86, 0x34, 0xc1, 0xb1, 0xfa,
	0x8c, 0x92, 0x34, 0x16, 0x31, 0xe9, 0x98, 0x8b, 0xdb, 0x85, 0xa9, 0x4a, 0x1c, 0x3d, 0xd0, 0xa4,
	0xff, 0x56, 0x62, 0xee, 0x63, 0x9c, 0x8a, 0x71, 0x56, 0x6c, 0x89, 0xfd, 0x73, 0xd5, 0x27, 0xf1,
	0x5f, 0x16, 0xc6, 0xd1, 0x78, 0xaf, 0xde, 0xc2, 0xc3, 0x7f, 0x55, 0xa8, 0x4b, 0xfd, 0x94, 0x05,
	0x01, 0x79, 0x07, 0x80, 0x13, 0xd7, 0x93, 0xa5, 0xcb, 0x7d, 0xa3, 0x34, 0x28, 0x5d, 0x54, 0xac,
	0x06, 0x4e, 0x14, 0x76, 0xe7, 0x93, 0x4f, 0x70, 0xe6, 0xad, 0xd3, 0x94, 0x45, 0xc2, 0x15, 0x3c,
	0x64, 0x28, 0x68, 0x98, 0xb8, 0x21, 0x1a, 0xc7, 0x92, 0x57, 0xb6, 0xc8, 0x0e, 0x73, 0x32, 0xe8,
	0x01, 0xc9, 0x15, 0x54, 0xd5, 0x22, 0x68, 0x94, 0x07, 0xe5, 0x8b, 0xd6, 0xe4, 0x7c, 0xf4, 0x7c,
	0xe7, 0xd1, 0x8d, 0xda, 0x52, 0x7d, 0xbe, 0x52, 0x41, 0xad, 0x2d, 0x97, 0x7c, 0x86, 0x36, 0x26,
	0x74, 0x13, 0xc9, 0x3d, 0x79, 0x24, 0xb5, 0x15, 0xad, 0xed, 0xbf, 0xd4, 0xda, 0x8a, 0x63, 0x2a,
	0x8a, 0xd5, 0xc2, 0xbc, 0x46, 0xf2, 0x11, 0xba, 0x3e, 0x0b, 0x98, 0x60, 0xbe, 0x1b, 0xaf, 0xfe,
	0x30, 0x4f, 0x3a, 0xd4, 0xa4, 0x43, 0xd3, 0xea, 0xec, 0xc6, 0x8b, 0xed, 0x94, 0x5c, 0xc2, 0x29,
	0x47, 0x57, 0xa4, 0xeb, 0xc8, 0xa3, 0x8a, 0x1d, 0x70, 0x14, 0x46, 0x5d, 0x66, 0x69, 0x58, 0x5d,
	0x8e, 0x4e, 0x36, 0xbf, 0x97, 0x63, 0x72, 0x0b, 0x1d, 0xb5, 0x9c, 0x8b, 0xeb, 0x30, 0xa4, 0x29,
	0x67, 0x68, 0x34, 0xf4, 0x56, 0x83, 0x83, 0x89, 0x6c, 0xcd, 0x7c, 0xb2, 0x4e, 0x1e, 0xf3, 0x46,
	0xca, 0x88, 0x09, 0x6f, 0x7c, 0xe6, 0xf1, 0x50, 0xff, 0xf1, 0x59, 0xcc, 0xe6, 0xab, 0x31, 0xcf,
	0x72, 0xa5, 0xbd, 0x97, 0xf7, 0x1b, 0x9c, 0x6c, 0x78, 0xe0, 0x67, 0xa7, 0x8a, 0x46, 0x55, 0x1b,
	0xbd, 0x7f, 0x69, 0x64, 0xee, 0x4e, 0xfd, 0x87, 0x24, 0xef, 0x6a, 0xab, 0xbd, 0x29, 0x1a, 0x24,
	0xdf, 0x81, 0xc8, 0xc4, 0xde, 0x6f, 0xba, 0x0a, 0x58, 0x61, 0x07, 0xda, 0x6e, 0x78, 0xc8, 0x4e,
	0xd6, 0x99, 0xdb, 0x69, 0xae, 0xce, 0x2d, 0xe7, 0xd0, 0x8d, 0x18, 0x4d, 0x57, 0x4f, 0x85, 0x5f,
	0x4b, 0xfb, 0x7d, 0x38, 0xe4, 0x37, 0xd7, 0xf4, 0xcc, 0xb2, 0x13, 0xed, 0xb7, 0x38, 0xbc, 0x01,
	0x28, 0xb2, 0x93, 0x3e, 0x34, 0x02, 0x2a, 0xb8, 0x58, 0xfb, 0x4c, 0x5f, 0xc2, 0x92, 0x95, 0xf7,
	0xf2, 0x2a, 0x37, 0x83, 0x38, 0xfa, 0xb5, 0x05, 0xcb, 0x1a, 0x2c, 0x06, 0x97, 0x33, 0xe8, 0xc9,
	0x9f, 0xee, 0x6e, 0x82, 0x2d, 0xa8, 0x58, 0x23, 0xe9, 0x41, 0x7b, 0x39, 0xb7, 0x67, 0x8e, 0x6b,
	0x3b, 0xd7, 0xce, 0xd2, 0xee, 0x1d, 0x91, 0x16, 0xd4, 0xed, 0xe5, 0x74, 0x3a, 0xb3, 0xed, 0x5e,
	0x89, 0x10, 0xe8, 0xdc, 0x2f, 0xa6, 0xd7, 0xce, 0xdd, 0x62, 0xee, 0x6a, 0x5e, 0xef, 0xf8, 0x4b,
	0xed, 0x67, 0x45, 0xbd, 0x48, 0xf3, 0xc8, 0x2c, 0xad, 0x6a, 0xfa, 0x39, 0x5d, 0xfd, 0x0f, 0x00,
	0x00, 0xff, 0xff, 0xbf, 0x45, 0x76, 0x85, 0xa9, 0x03, 0x00, 0x00,
}
