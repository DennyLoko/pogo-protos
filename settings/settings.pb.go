// Code generated by protoc-gen-go.
// source: settings/settings.proto
// DO NOT EDIT!

/*
Package settings is a generated protocol buffer package.

It is generated from these files:
	settings/settings.proto

It has these top-level messages:
	DownloadSettingsAction
	FortSettings
	GlobalSettings
	InventorySettings
	LevelSettings
	MapSettings
*/
package settings

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type DownloadSettingsAction struct {
	Hash string `protobuf:"bytes,1,opt,name=hash" json:"hash,omitempty"`
}

func (m *DownloadSettingsAction) Reset()                    { *m = DownloadSettingsAction{} }
func (m *DownloadSettingsAction) String() string            { return proto.CompactTextString(m) }
func (*DownloadSettingsAction) ProtoMessage()               {}
func (*DownloadSettingsAction) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type FortSettings struct {
	InteractionRangeMeters    float64 `protobuf:"fixed64,1,opt,name=interaction_range_meters,json=interactionRangeMeters" json:"interaction_range_meters,omitempty"`
	MaxTotalDeployedPokemon   int32   `protobuf:"varint,2,opt,name=max_total_deployed_pokemon,json=maxTotalDeployedPokemon" json:"max_total_deployed_pokemon,omitempty"`
	MaxPlayerDeployedPokemon  int32   `protobuf:"varint,3,opt,name=max_player_deployed_pokemon,json=maxPlayerDeployedPokemon" json:"max_player_deployed_pokemon,omitempty"`
	DeployStaminaMultiplier   float64 `protobuf:"fixed64,4,opt,name=deploy_stamina_multiplier,json=deployStaminaMultiplier" json:"deploy_stamina_multiplier,omitempty"`
	DeployAttackMultiplier    float64 `protobuf:"fixed64,5,opt,name=deploy_attack_multiplier,json=deployAttackMultiplier" json:"deploy_attack_multiplier,omitempty"`
	FarInteractionRangeMeters float64 `protobuf:"fixed64,6,opt,name=far_interaction_range_meters,json=farInteractionRangeMeters" json:"far_interaction_range_meters,omitempty"`
}

func (m *FortSettings) Reset()                    { *m = FortSettings{} }
func (m *FortSettings) String() string            { return proto.CompactTextString(m) }
func (*FortSettings) ProtoMessage()               {}
func (*FortSettings) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type GlobalSettings struct {
	FortSettings         *FortSettings      `protobuf:"bytes,2,opt,name=fort_settings,json=fortSettings" json:"fort_settings,omitempty"`
	MapSettings          *MapSettings       `protobuf:"bytes,3,opt,name=map_settings,json=mapSettings" json:"map_settings,omitempty"`
	LevelSettings        *LevelSettings     `protobuf:"bytes,4,opt,name=level_settings,json=levelSettings" json:"level_settings,omitempty"`
	InventorySettings    *InventorySettings `protobuf:"bytes,5,opt,name=inventory_settings,json=inventorySettings" json:"inventory_settings,omitempty"`
	MinimumClientVersion string             `protobuf:"bytes,6,opt,name=minimum_client_version,json=minimumClientVersion" json:"minimum_client_version,omitempty"`
}

func (m *GlobalSettings) Reset()                    { *m = GlobalSettings{} }
func (m *GlobalSettings) String() string            { return proto.CompactTextString(m) }
func (*GlobalSettings) ProtoMessage()               {}
func (*GlobalSettings) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *GlobalSettings) GetFortSettings() *FortSettings {
	if m != nil {
		return m.FortSettings
	}
	return nil
}

func (m *GlobalSettings) GetMapSettings() *MapSettings {
	if m != nil {
		return m.MapSettings
	}
	return nil
}

func (m *GlobalSettings) GetLevelSettings() *LevelSettings {
	if m != nil {
		return m.LevelSettings
	}
	return nil
}

func (m *GlobalSettings) GetInventorySettings() *InventorySettings {
	if m != nil {
		return m.InventorySettings
	}
	return nil
}

type InventorySettings struct {
	MaxPokemon   int32 `protobuf:"varint,1,opt,name=max_pokemon,json=maxPokemon" json:"max_pokemon,omitempty"`
	MaxBagItems  int32 `protobuf:"varint,2,opt,name=max_bag_items,json=maxBagItems" json:"max_bag_items,omitempty"`
	BasePokemon  int32 `protobuf:"varint,3,opt,name=base_pokemon,json=basePokemon" json:"base_pokemon,omitempty"`
	BaseBagItems int32 `protobuf:"varint,4,opt,name=base_bag_items,json=baseBagItems" json:"base_bag_items,omitempty"`
	BaseEggs     int32 `protobuf:"varint,5,opt,name=base_eggs,json=baseEggs" json:"base_eggs,omitempty"`
}

func (m *InventorySettings) Reset()                    { *m = InventorySettings{} }
func (m *InventorySettings) String() string            { return proto.CompactTextString(m) }
func (*InventorySettings) ProtoMessage()               {}
func (*InventorySettings) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type LevelSettings struct {
	TrainerCpModifier         float64 `protobuf:"fixed64,2,opt,name=trainer_cp_modifier,json=trainerCpModifier" json:"trainer_cp_modifier,omitempty"`
	TrainerDifficultyModifier float64 `protobuf:"fixed64,3,opt,name=trainer_difficulty_modifier,json=trainerDifficultyModifier" json:"trainer_difficulty_modifier,omitempty"`
}

func (m *LevelSettings) Reset()                    { *m = LevelSettings{} }
func (m *LevelSettings) String() string            { return proto.CompactTextString(m) }
func (*LevelSettings) ProtoMessage()               {}
func (*LevelSettings) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

type MapSettings struct {
	PokemonVisibleRange            float64 `protobuf:"fixed64,1,opt,name=pokemon_visible_range,json=pokemonVisibleRange" json:"pokemon_visible_range,omitempty"`
	PokeNavRangeMeters             float64 `protobuf:"fixed64,2,opt,name=poke_nav_range_meters,json=pokeNavRangeMeters" json:"poke_nav_range_meters,omitempty"`
	EncounterRangeMeters           float64 `protobuf:"fixed64,3,opt,name=encounter_range_meters,json=encounterRangeMeters" json:"encounter_range_meters,omitempty"`
	GetMapObjectsMinRefreshSeconds float32 `protobuf:"fixed32,4,opt,name=get_map_objects_min_refresh_seconds,json=getMapObjectsMinRefreshSeconds" json:"get_map_objects_min_refresh_seconds,omitempty"`
	GetMapObjectsMaxRefreshSeconds float32 `protobuf:"fixed32,5,opt,name=get_map_objects_max_refresh_seconds,json=getMapObjectsMaxRefreshSeconds" json:"get_map_objects_max_refresh_seconds,omitempty"`
	GetMapObjectsMinDistanceMeters float32 `protobuf:"fixed32,6,opt,name=get_map_objects_min_distance_meters,json=getMapObjectsMinDistanceMeters" json:"get_map_objects_min_distance_meters,omitempty"`
	GoogleMapsApiKey               string  `protobuf:"bytes,7,opt,name=google_maps_api_key,json=googleMapsApiKey" json:"google_maps_api_key,omitempty"`
}

func (m *MapSettings) Reset()                    { *m = MapSettings{} }
func (m *MapSettings) String() string            { return proto.CompactTextString(m) }
func (*MapSettings) ProtoMessage()               {}
func (*MapSettings) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func init() {
	proto.RegisterType((*DownloadSettingsAction)(nil), "POGOProtos.Settings.DownloadSettingsAction")
	proto.RegisterType((*FortSettings)(nil), "POGOProtos.Settings.FortSettings")
	proto.RegisterType((*GlobalSettings)(nil), "POGOProtos.Settings.GlobalSettings")
	proto.RegisterType((*InventorySettings)(nil), "POGOProtos.Settings.InventorySettings")
	proto.RegisterType((*LevelSettings)(nil), "POGOProtos.Settings.LevelSettings")
	proto.RegisterType((*MapSettings)(nil), "POGOProtos.Settings.MapSettings")
}

func init() { proto.RegisterFile("settings/settings.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 746 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x8c, 0x55, 0x4d, 0x4f, 0x13, 0x4f,
	0x18, 0x4f, 0xdf, 0xf8, 0xc3, 0xb4, 0x25, 0x7f, 0xa6, 0x08, 0x45, 0x8c, 0xc2, 0x6a, 0x8c, 0x07,
	0xad, 0x11, 0x3d, 0x18, 0x8d, 0x1a, 0xa0, 0x42, 0x1a, 0xac, 0x34, 0x8b, 0x72, 0xf0, 0x32, 0x99,
	0x6e, 0xa7, 0xcb, 0xc8, 0xee, 0xcc, 0x66, 0x77, 0xa8, 0xf4, 0xe4, 0x37, 0x33, 0x7e, 0x29, 0x4f,
	0x5e, 0x9c, 0xb7, 0xdd, 0x6e, 0xcb, 0x9a, 0x78, 0xeb, 0x3e, 0xbf, 0x97, 0xcc, 0x3c, 0xcf, 0xef,
	0x99, 0x82, 0xcd, 0x84, 0x08, 0x41, 0x99, 0x9f, 0x3c, 0x4d, 0x7f, 0x74, 0xa2, 0x98, 0x0b, 0x0e,
	0x5b, 0x83, 0xd3, 0xe3, 0xd3, 0x81, 0xfa, 0x99, 0x74, 0xce, 0x2c, 0xe4, 0x3c, 0x06, 0x1b, 0x5d,
	0xfe, 0x8d, 0x05, 0x1c, 0x8f, 0xd2, 0xda, 0xbe, 0x27, 0x28, 0x67, 0x10, 0x82, 0xea, 0x05, 0x4e,
	0x2e, 0xda, 0xa5, 0x9d, 0xd2, 0xa3, 0x15, 0x57, 0xff, 0x76, 0x7e, 0x97, 0x41, 0xe3, 0x88, 0xc7,
	0x22, 0xa5, 0xc2, 0x97, 0xa0, 0x4d, 0x99, 0x20, 0x31, 0xd6, 0x1a, 0x14, 0x63, 0xe6, 0x13, 0x14,
	0x12, 0x59, 0x49, 0xb4, 0xb0, 0xe4, 0x6e, 0xe4, 0x70, 0x57, 0xc1, 0x7d, 0x8d, 0xc2, 0xd7, 0xe0,
	0x76, 0x88, 0xaf, 0x91, 0xe0, 0x02, 0x07, 0x68, 0x44, 0xa2, 0x80, 0x4f, 0xc9, 0x08, 0x45, 0xfc,
	0x92, 0x84, 0x9c, 0xb5, 0xcb, 0x52, 0x5b, 0x73, 0x37, 0x25, 0xe3, 0x93, 0x22, 0x74, 0x2d, 0x3e,
	0x30, 0x30, 0x7c, 0x03, 0xb6, 0x95, 0x38, 0x0a, 0xf0, 0x94, 0xc4, 0x37, 0xd5, 0x15, 0xad, 0x6e,
	0x4b, 0xca, 0x40, 0x33, 0x16, 0xe5, 0xaf, 0xc0, 0x96, 0xd1, 0xa0, 0x44, 0xe0, 0x90, 0x32, 0x8c,
	0xc2, 0xab, 0x40, 0xd0, 0x28, 0xa0, 0x24, 0x6e, 0x57, 0xf5, 0xb1, 0x37, 0x0d, 0xe1, 0xcc, 0xe0,
	0xfd, 0x0c, 0x56, 0x37, 0xb6, 0x5a, 0x2c, 0x04, 0xf6, 0x2e, 0xf3, 0xd2, 0x9a, 0xb9, 0xb1, 0xc1,
	0xf7, 0x35, 0x9c, 0x53, 0xbe, 0x03, 0x77, 0xc6, 0x38, 0x46, 0x7f, 0xed, 0xd7, 0x92, 0x56, 0x6f,
	0x49, 0x4e, 0xaf, 0xb0, 0x65, 0xce, 0xaf, 0x32, 0x58, 0x3d, 0x0e, 0xf8, 0x10, 0x07, 0x59, 0xff,
	0x8f, 0x40, 0x73, 0x2c, 0xe7, 0x81, 0xd2, 0x51, 0xeb, 0xc6, 0xd5, 0xf7, 0x76, 0x3b, 0x05, 0xb3,
	0xee, 0xe4, 0x27, 0xe7, 0x36, 0xc6, 0xf9, 0x39, 0x1e, 0x82, 0x46, 0x88, 0xa3, 0x99, 0x4d, 0x45,
	0xdb, 0xec, 0x14, 0xda, 0xf4, 0x71, 0x94, 0xb9, 0xd4, 0xc3, 0xd9, 0x07, 0xec, 0x81, 0xd5, 0x80,
	0x4c, 0x48, 0x30, 0xb3, 0xa9, 0x6a, 0x1b, 0xa7, 0xd0, 0xe6, 0x83, 0xa2, 0x66, 0x46, 0xcd, 0x20,
	0xff, 0x09, 0x3f, 0x03, 0x48, 0xd9, 0x84, 0x30, 0xc1, 0xe3, 0xe9, 0xcc, 0xae, 0xa6, 0xed, 0x1e,
	0x16, 0xda, 0xf5, 0x52, 0x7a, 0x66, 0xb9, 0x46, 0x17, 0x4b, 0xf0, 0x05, 0xd8, 0x90, 0xe3, 0xa4,
	0xe1, 0x55, 0x88, 0x3c, 0x39, 0x13, 0x26, 0xd0, 0x44, 0x36, 0x56, 0xb6, 0x59, 0x37, 0x7f, 0xc5,
	0x5d, 0xb7, 0xe8, 0xa1, 0x06, 0xcf, 0x0d, 0xe6, 0xfc, 0x28, 0x81, 0xb5, 0x1b, 0xf6, 0xf0, 0x1e,
	0xa8, 0xeb, 0x0c, 0xda, 0xcc, 0x95, 0x74, 0xe6, 0x80, 0xca, 0x9c, 0x4d, 0x99, 0x03, 0x9a, 0x8a,
	0x30, 0xc4, 0x3e, 0xa2, 0x82, 0x84, 0x89, 0x0d, 0xb5, 0x52, 0x1d, 0x60, 0xbf, 0xa7, 0x4a, 0x70,
	0x17, 0x34, 0x86, 0x38, 0x21, 0x0b, 0xc9, 0xad, 0xab, 0x5a, 0x6a, 0xf3, 0x00, 0xac, 0x6a, 0xca,
	0xcc, 0xa7, 0xaa, 0x49, 0x5a, 0x98, 0x19, 0x6d, 0x83, 0x15, 0xcd, 0x22, 0xbe, 0xed, 0x53, 0xcd,
	0x5d, 0x56, 0x85, 0xf7, 0xf2, 0xdb, 0xf9, 0x0e, 0x9a, 0x73, 0xdd, 0x86, 0x1d, 0xd0, 0x12, 0x31,
	0xa6, 0x4c, 0x2e, 0x8f, 0x17, 0xa1, 0x90, 0x8f, 0xe8, 0x58, 0xe5, 0xb7, 0xac, 0x13, 0xb8, 0x66,
	0xa1, 0xc3, 0xa8, 0x6f, 0x01, 0xf8, 0x16, 0x6c, 0xa7, 0x7c, 0x59, 0x19, 0x53, 0x4f, 0xa6, 0x7a,
	0x3a, 0xd3, 0x55, 0x4c, 0x72, 0x2d, 0xa5, 0x9b, 0x31, 0x52, 0xbd, 0xf3, 0xb3, 0x02, 0xea, 0xb9,
	0xd8, 0xc0, 0x3d, 0x70, 0xcb, 0xde, 0x18, 0x4d, 0x68, 0x42, 0x87, 0x01, 0x31, 0xab, 0x60, 0xdf,
	0x8c, 0x96, 0x05, 0xcf, 0x0d, 0xa6, 0x77, 0x00, 0x3e, 0x33, 0x1a, 0xc4, 0xf0, 0x64, 0x7e, 0x6f,
	0xcc, 0xa9, 0xa1, 0x02, 0x3f, 0xe2, 0x49, 0xfe, 0x8d, 0x91, 0xe3, 0x26, 0xcc, 0xe3, 0x57, 0x6a,
	0x9d, 0xe6, 0x35, 0xe6, 0xc4, 0xeb, 0x19, 0x9a, 0x57, 0x9d, 0x80, 0xfb, 0x3e, 0x11, 0x48, 0xed,
	0x03, 0x1f, 0x7e, 0x25, 0x9e, 0x48, 0x90, 0x8c, 0x05, 0x8a, 0xc9, 0x38, 0x26, 0xc9, 0x85, 0x4c,
	0xa3, 0xc7, 0xd9, 0xc8, 0x4c, 0xa1, 0xec, 0xde, 0x95, 0x54, 0x79, 0xb3, 0x53, 0x43, 0xec, 0x53,
	0xe6, 0x1a, 0xda, 0x99, 0x61, 0x15, 0x9a, 0xc9, 0x50, 0x2c, 0x9a, 0xd5, 0x8a, 0xcc, 0xf0, 0xf5,
	0x3f, 0x98, 0xc9, 0x93, 0x8d, 0xa8, 0x7c, 0xc6, 0x98, 0x37, 0xf7, 0x90, 0x14, 0x9c, 0xac, 0x6b,
	0x69, 0xf6, 0x9a, 0x4f, 0x40, 0xcb, 0xe7, 0xdc, 0x97, 0xad, 0x97, 0x7e, 0x09, 0xc2, 0x11, 0x45,
	0x97, 0x64, 0xda, 0xfe, 0x4f, 0x2f, 0xc2, 0xff, 0x06, 0x92, 0xfa, 0x64, 0x3f, 0xa2, 0x27, 0x64,
	0x7a, 0x00, 0xbe, 0x2c, 0xa7, 0x7b, 0x38, 0x5c, 0xd2, 0x7f, 0x28, 0xcf, 0xff, 0x04, 0x00, 0x00,
	0xff, 0xff, 0x4b, 0xbb, 0xb6, 0x8a, 0x6b, 0x06, 0x00, 0x00,
}
